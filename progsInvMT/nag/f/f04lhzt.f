      SUBROUTINE F04LHZ(N,NBLOKS,BLKSTR,A,LENA,PIVOT,B,LDB,IR)
C     MARK 13 RELEASE. NAG COPYRIGHT 1988.
C     MARK 14 REVISED. IER-745 (DEC 1989).
C     .. Parameters ..
      DOUBLE PRECISION  ONE
      PARAMETER         (ONE=1.0D0)
C     .. Scalar Arguments ..
      INTEGER           IR, LDB, LENA, N, NBLOKS
C     .. Array Arguments ..
      DOUBLE PRECISION  A(LENA), B(LDB,IR)
      INTEGER           BLKSTR(3,NBLOKS), PIVOT(N)
C     .. Local Scalars ..
      INTEGER           APTR, APTR2, BPTR, BPTR1, I, I1, INDEXA, INDPIV,
     *                  IP, IPIV, IPPLUS, IPTR, J, LDB1, LDB2, M, MMIN1,
     *                  NCLBLK, NCLNRW, NCLPIV, NCOL, NCPOLD, NOVRLP,
     *                  NRWBLK, NRWPIV, PIVPTR, XPTR
      LOGICAL           SINGLE
C     .. External Subroutines ..
      EXTERNAL          DGEMM, DTRSM, F04LHX, DSWAP
C     .. Executable Statements ..
      SINGLE = IR .EQ. 1
      LDB1 = LDB
      LDB2 = LDB
      NRWBLK = BLKSTR(1,1)
      BPTR = 1
      INDPIV = 0
      APTR2 = 1
      NCLPIV = 0
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     FORWARD LOOP .
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      DO 40 M = 1, NBLOKS - 1
         NCLBLK = BLKSTR(2,M)
         NOVRLP = BLKSTR(3,M)
         APTR = APTR2
         NRWPIV = NCLBLK - NOVRLP - NCLPIV
         NCLNRW = NCLPIV*NRWBLK
         INDEXA = APTR + NCLNRW
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        USE PIVOT INFORMATION FROM COLUMN ELIMINATIONS WITH ROW
C        PIVOTING TO TRANSFORM RIGHT HAND SIDES .
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         DO 20 I = 1, NRWPIV
            I1 = INDPIV + I
            IPIV = PIVOT(I1)
            IF (I.NE.IPIV) THEN
               CALL DSWAP(IR,B(I1,1),LDB,B(INDPIV+IPIV,1),LDB)
            END IF
   20    CONTINUE
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        FORWARD SOLUTION AND MODIFICATION IN ONE BLOCK FROM COLUMN
C        ELIMINATIONS WITH ROW PIVOTING .
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         IF (NRWPIV.GT.0) THEN
            IF (SINGLE) LDB1 = LDB - BPTR + 1
            CALL F04LHX('L','L','N','U',NRWBLK,IR,1,NRWPIV,A(INDEXA),
     *                  NRWBLK,B(BPTR,1),LDB1)
C           CALL DTRSM('L','L','N','U',NRWPIV,IR,1.0D0,A(INDEXA),
C                        NRWBLK,B(BPTR,1),LDB)
C           IF (NRWBLK .GT. NRWPIV) THEN
C              IF (SINGLE) LDB2 = LDB - BPTR - NRWPIV + 1
C              CALL DGEMM('N','N',NRWBLK-NRWPIV,IR,NRWPIV,-ONE,
C                         A(INDEXA+NRWPIV),NRWBLK,B(BPTR,1),LDB1,ONE,
C                         B(BPTR+NRWPIV,1),LDB2)
C           ENDIF
         END IF
         BPTR = BPTR + NRWPIV
         NCLPIV = NRWBLK - NRWPIV
         INDEXA = APTR + NCLNRW + NRWPIV*(NRWBLK+1)
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        FORWARD SOLUTION FROM COLUMN ELIMINATION WITH COLUMN PIVOTING .
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         IF (NCLPIV.GT.0) THEN
            IF (SINGLE) LDB1 = LDB - BPTR + 1
            CALL DTRSM('L','L','N','U',NCLPIV,IR,1.0D0,A(INDEXA),NRWBLK,
     *                 B(BPTR,1),LDB1)
         END IF
         BPTR1 = BPTR
         BPTR = BPTR + NCLPIV
         APTR2 = APTR + NRWBLK*NCLBLK
         INDPIV = INDPIV + NRWBLK
         NRWBLK = BLKSTR(1,M+1)
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        FORWARD MODIFICATION FROM OVERLAP WITH NEXT BLOCK .
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         IF (NCLPIV.GT.0) THEN
            IF (SINGLE) LDB2 = LDB - BPTR + 1
            CALL DGEMM('N','N',NRWBLK,IR,NCLPIV,-ONE,A(APTR2),NRWBLK,
     *                 B(BPTR1,1),LDB1,ONE,B(BPTR,1),LDB2)
         END IF
   40 CONTINUE
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     LAST BLOCK HANDLED SEPATATELY .
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     USE PIVOT INFORMATION FROM COLUMN ELIMINATION WITH ROW PIVOTING
C     TO TRANSFORM RIGHT HAND SIDES .
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      DO 60 I = 1, NRWBLK
         I1 = INDPIV + I
         IPIV = PIVOT(I1)
         IF (I.NE.IPIV) THEN
            CALL DSWAP(IR,B(I1,1),LDB,B(INDPIV+IPIV,1),LDB)
         END IF
   60 CONTINUE
      INDEXA = APTR2 + (NCLPIV*NRWBLK)
      IF (SINGLE) LDB1 = LDB - BPTR + 1
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     FORWARD SOLUTION FROM LAST BLOCK .
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      CALL DTRSM('L','L','N','U',NRWBLK,IR,1.0D0,A(INDEXA),NRWBLK,
     *           B(BPTR,1),LDB1)
      XPTR = BPTR
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     BACKWARD SOLUTION FROM LAST BLOCK .
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      CALL DTRSM('L','U','N','N',NRWBLK,IR,1.0D0,A(INDEXA),NRWBLK,
     *           B(XPTR,1),LDB1)
      IF (NBLOKS.GT.1) THEN
         NRWBLK = BLKSTR(1,NBLOKS-1)
         NCLBLK = BLKSTR(2,NBLOKS-1)
         NOVRLP = BLKSTR(3,NBLOKS-1)
         NCPOLD = NCLBLK - NRWPIV - NOVRLP
      END IF
      APTR = APTR2
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     BACKWARD LOOP .
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      DO 80 M = NBLOKS - 1, 1, -1
         XPTR = XPTR - NCLPIV
         APTR = APTR - NRWBLK*NCLBLK
         INDEXA = APTR + NRWBLK*(NRWPIV+NCPOLD) + NRWPIV
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        BACKWARD MODIFICATION AND SOLUTION FROM COLUMN ELIMINATIONS
C        WITH COLUMN PIVOTING .
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         IF (NCLPIV.GT.0) THEN
            IF (SINGLE) LDB1 = LDB - XPTR + 1
            CALL F04LHX('L','U','N','N',NOVRLP,IR,1,NCLPIV,A(INDEXA),
     *                  NRWBLK,B(XPTR,1),LDB1)
C           IF (SINGLE) LDB2 = LDB - XPTR - NCLPIV + 1
C           CALL DGEMM('N','N',NCLPIV,IR,NOVRLP-NCLPIV,-ONE,
C                      A(INDEXA+NCLPIV*NRWBLK),NRWBLK,B(XPTR+NCLPIV,1),
C                      LDB2,ONE,B(XPTR,1),LDB1)
C           CALL DTRSM('L','U','N','N',NCLPIV,IR,1.0D0,A(INDEXA),
C                       NRWBLK,B(XPTR,1),LDB1)
         END IF
         XPTR = XPTR - NRWPIV
         INDEXA = APTR + NCPOLD*NRWBLK
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        BACKWARD MODIFICATION AND SOLUTION FROM COLUMN ELIMINATIONS
C        WITH ROW PIVOTING .
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         IF (NRWPIV.GT.0) THEN
            IF (SINGLE) LDB1 = LDB - XPTR + 1
            CALL F04LHX('L','U','N','N',NRWPIV+NOVRLP,IR,1,NRWPIV,
     *                  A(INDEXA),NRWBLK,B(XPTR,1),LDB1)
C           IF (SINGLE) LDB2 = LDB - XPTR - NRWPIV + 1
C           CALL DGEMM('N','N',NRWPIV,IR,NOVRLP,-ONE,
C                      A(INDEXA+NRWPIV*NRWBLK),NRWBLK,B(XPTR+NRWPIV,1),
C                      LDB2,ONE,B(XPTR,1),LDB1)
C           CALL DTRSM('L','U','N','N',NRWPIV,IR,1.0D0,A(INDEXA),
C                       NRWBLK,B(XPTR,1),LDB1)
         END IF
         IF (M.NE.1) THEN
            NCLPIV = NCPOLD
            MMIN1 = M - 1
            NRWBLK = BLKSTR(1,MMIN1)
            NCLBLK = BLKSTR(2,MMIN1)
            NOVRLP = BLKSTR(3,MMIN1)
            NRWPIV = NRWBLK - NCPOLD
            NCPOLD = NCLBLK - NRWPIV - NOVRLP
         END IF
   80 CONTINUE
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     USE PIVOT INFORMATION FROM COLUMN ELIMINATIONS WITH COLUMN
C     PIVOTING TO TRANSFORM RIGHT HAND SIDES .
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      NCLPIV = 0
      IPTR = 0
      DO 120 I = 1, NBLOKS - 1
         NCOL = BLKSTR(2,I)
         NOVRLP = BLKSTR(3,I)
         NRWBLK = BLKSTR(1,I)
         NCPOLD = NCLPIV
         NRWPIV = NCOL - NOVRLP - NCPOLD
         NCLPIV = NRWBLK - NRWPIV
         DO 100 J = NRWBLK, NRWPIV + 1, -1
            PIVPTR = IPTR + J + NCPOLD
            IP = PIVOT(PIVPTR)
            IF (IP.NE.NCPOLD+J) THEN
               IPPLUS = IP + IPTR
               CALL DSWAP(IR,B(IPPLUS,1),LDB,B(PIVPTR,1),LDB)
            END IF
  100    CONTINUE
         IPTR = IPTR + NRWPIV + NCPOLD
  120 CONTINUE
      RETURN
      END
