      SUBROUTINE F01LHY(TOPBLK,NRWBLK,NCLBLK,PIVOT,NRWPIV,NCLPIV,TL,
     *                  INDEX,IFAIL)
C     MARK 13 RELEASE. NAG COPYRIGHT 1988.
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     F01LHY PERFORMS NRWPIV COLUMN ELIMINATIONS ON THE MATRIX
C     TOPBLK WITH ROW PIVOTING .
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       AUXILIARY ROUTINES
C       ------------------
C       DGER  : TO PERFORM RANK ONE UPDATE OF A MATRIX
C       DSWAP : TO INTERCHANGE TWO VECTORS
C       DSCAL : TO MULTIPLY A VECTOR BY A SCALAR
C       IDAMAX: TO FIND INDEX OF LARGEST ABSOLUTE ELEMEMT OF A VECTOR
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  TL
      INTEGER           IFAIL, INDEX, NCLBLK, NCLPIV, NRWBLK, NRWPIV
C     .. Array Arguments ..
      DOUBLE PRECISION  TOPBLK(NRWBLK,NCLBLK)
      INTEGER           PIVOT(*)
C     .. Local Scalars ..
      DOUBLE PRECISION  ROWMLT, X
      INTEGER           J, JPLUS1, L, LDA, MRWPIV, MXINDX, NCLPPJ,
     *                  NCOLEL, NCOLS
C     .. External Functions ..
      INTEGER           IDAMAX
      EXTERNAL          IDAMAX
C     .. External Subroutines ..
      EXTERNAL          DGER, DSCAL, DSWAP
C     .. Intrinsic Functions ..
      INTRINSIC         ABS
C     .. Executable Statements ..
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     IF THERE IS TO BE NO COLUMN PIVOTING FOR THE REST OF THIS BLOCK
C     THEN THE LAST ROW MUST NOT BE MODIFIED .
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      IF (NRWPIV.EQ.NRWBLK) THEN
         MRWPIV = NRWBLK - 1
         PIVOT(NRWPIV) = NRWPIV
      ELSE
         MRWPIV = NRWPIV
      END IF
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     THE J LOOP CONTROLS THE NRWPIV COLUMN ELIMINATIONS .
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      DO 20 J = 1, MRWPIV
         JPLUS1 = J + 1
         NCLPPJ = NCLPIV + J
         NCOLS = NCLPPJ + 1
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        DETERMINE ROW PIVOT X AND PIVOT INDEX L .
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         MXINDX = IDAMAX(NRWBLK-J+1,TOPBLK(J,NCLPPJ),1)
         L = J + MXINDX - 1
         X = ABS(TOPBLK(L,NCLPPJ))
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        IF NECESSARY INTERCHANGE ROWS J AND L . BUT LEAVE THE
C        FIRST NCLPIV ELEMENTS IN EACH ROW WHICH CONTAIN
C        MULTIPLIERS FROM COLUMN ELIMINATIONS IN LAST BLOCK .
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         IF (L.NE.J) THEN
C
            CALL DSWAP(NCLBLK-NCLPIV,TOPBLK(J,NCLPIV+1),NRWBLK,TOPBLK(L,
     *                 NCLPIV+1),NRWBLK)
C
         END IF
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        SET PIVOT(J) TO THE INDEX FOR THE PIVOT ROW .
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         PIVOT(J) = L
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        TEST FOR SINGULARITY .
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         IF (ABS(X).LT.TL) THEN
            IF (IFAIL.EQ.0) THEN
               INDEX = INDEX + J
               IFAIL = 1
            END IF
            GO TO 20
         END IF
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        COMPUTE ROW MULTIPLIERS IN TOPBLK .
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         ROWMLT = 1.0D0/TOPBLK(J,NCLPPJ)
C
         CALL DSCAL(NRWBLK-J,ROWMLT,TOPBLK(JPLUS1,NCLPPJ),1)
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        PERFORM COLUMN ELIMINATION IN TOPBLK :
C           COLUMN  J,
C           ROW POSITIONS  J+1,...,NRWBLK
C
C        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
         NCOLEL = NCLBLK - NCLPPJ
         LDA = NRWBLK
         IF (J.LT.NRWBLK) THEN
            IF (NCOLEL.EQ.1) LDA = NRWBLK - JPLUS1 + 1
            CALL DGER(NRWBLK-J,NCOLEL,-1.0D0,TOPBLK(JPLUS1,NCLPPJ),1,
     *                TOPBLK(J,NCOLS),NRWBLK,TOPBLK(JPLUS1,NCOLS),LDA)
         END IF
   20 CONTINUE
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     IF THERE IS TO BE NO COLUMN PIVOTING FOR THE REST OF THIS BLOCK
C     THEN THE LAST ELEMENT ON THE DIAGONAL OF THIS BLOCK MUST BE
C     CHECKED FOR SINGULARITY .
C
C     CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      IF (NRWPIV.EQ.NRWBLK) THEN
         X = ABS(TOPBLK(NRWPIV,NCLPIV+NRWPIV))
         IF (ABS(X).LT.TL) THEN
            IF (IFAIL.EQ.0) THEN
               INDEX = INDEX + NRWPIV
               IFAIL = 1
            END IF
         END IF
      END IF
      RETURN
      END
