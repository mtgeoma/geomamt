      SUBROUTINE G13AEF(MR,PAR,NPAR,C,KFC,X,NX,ICOUNT,EX,EXR,AL,IEX,S,G,
     *                  IGH,SD,H,IH,ST,IST,NST,PIV,KPIV,NIT,ITC,ZSP,
     *                  KZSP,ISF,WA,IWA,HC,IFAIL)
C     MARK 9 RELEASE. NAG COPYRIGHT 1981.
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C     MARK 13 REVISED. USE OF MARK 12 X02 FUNCTIONS (APR 1988).
C     MARK 16 REVISED. IER-1041 (JUN 1993).
C
C     G13AEF FITS A SEASONAL ARIMA MODEL TO AN OBSERVED TIME SERIES
C     USING A NON-LINEAR LEAST SQUARES PROCEDURE INCORPORATING
C     BACKFORECASTING. PARAMETER ESTIMATES ARE OBTAINED, TOGETHER
C     WITH APPROPRIATE STANDARD ERRORS. THE RESIDUAL SERIES IS
C     RETURNED, AND INFORMATION FOR USE IN FORECASTING THE SERIES IS
C     PRODUCED FOR USE IN THE ROUTINES G13AGF AND G13AHF.
C
C     THE ESTIMATION PROCEDURE IS ITERATIVE, STARTING WITH INITIAL
C     PARAMETER VALUES SUCH AS MAY BE OBTAINED USING THE ROUTINE
C     G13ADF. IT CONTINUES UNTIL A SPECIFIED CONVERGENCE CITERION
C     IS SATISFIED, OR UNTIL A SPECIFIED NUMBER OF ITERATIONS HAVE
C     BEEN CARRIED OUT. THE PROGRESS OF THE PROCEDURE CAN BE
C     MONITORED BY MEANS OF A USER-SUPPLIED ROUTINE.
C
C     CONTRIBUTORS - G. TUNNICLIFFE WILSON, C. DALY (LANCASTER
C     UNIV.)
C     VALIDATOR    - T. LAMBERT (NAG CENTRAL OFFICE)
C
C     PIV
C     .. Parameters ..
      CHARACTER*6       SRNAME
      PARAMETER         (SRNAME='G13AEF')
C     .. Scalar Arguments ..
      DOUBLE PRECISION  C, S
      INTEGER           IEX, IFAIL, IGH, IH, IST, ITC, IWA, KFC, KPIV,
     *                  KZSP, NIT, NPAR, NST, NX
C     .. Array Arguments ..
      DOUBLE PRECISION  AL(IEX), EX(IEX), EXR(IEX), G(IGH), H(IH,IGH),
     *                  HC(IH,IGH), PAR(NPAR), SD(IGH), ST(IST),
     *                  WA(IWA), X(NX), ZSP(4)
      INTEGER           ICOUNT(6), ISF(4), MR(7)
C     .. Subroutine Arguments ..
      EXTERNAL          PIV
C     .. Local Scalars ..
      DOUBLE PRECISION  CC, EPS, FST, Q, RA, RRMS, S2, SM, U, VHV, ZERO
      INTEGER           I, IERROR, IFAILQ, IL, J, K, KFF, KPTF, KQ,
     *                  KSCH, KWBE, KWBQ, KWEX, KWPA, KWPH, KWPHC, KWSP,
     *                  KWSPC, KWST, KWSTC, KWTH, KWTHC, LEX, NAQ, NB,
     *                  NBQ, ND, NDD, NDF, NDS, NEX, NGH, NN, NP, NPD,
     *                  NPS, NQ, NQD, NQDP, NQS, NS, NXD
C     .. Local Arrays ..
      INTEGER           MPQS(4)
      CHARACTER*1       P01REC(1)
C     .. External Functions ..
      DOUBLE PRECISION  X02AJF
      INTEGER           P01ABF
      EXTERNAL          X02AJF, P01ABF
C     .. External Subroutines ..
      EXTERNAL          F01ACZ, F04ASF, G13AAF, G13AET, G13AEU, G13AEV,
     *                  G13AEW, G13AEY, G13AEZ
C     .. Intrinsic Functions ..
      INTRINSIC         ABS, MAX, DBLE, SQRT
C     .. Data statements ..
      DATA              ZERO/0.0D0/, U/1.0D0/, VHV/1.0D09/
C     .. Executable Statements ..
      KFF = 0
C
C     ZEROISE RESIDUAL AND INTERMEDIATE SERIES ARRAYS
C
      DO 20 I = 1, IEX
         EXR(I) = ZERO
         AL(I) = ZERO
   20 CONTINUE
C
C     DERIVE VALUES FOR VARIABLES WHICH ARE EQUIVALENT TO P, D, Q,
C     PS,
C     DS, QS AND S, AND FOR SECONDARY VARIABLES EQUIVALENT TO P
C     AND Q
C
      S = ZERO
      NP = MR(1)
      ND = MR(2)
      NQ = MR(3)
      NPS = MR(4)
      NDS = MR(5)
      NQS = MR(6)
      NS = MR(7)
      MPQS(1) = NP
      MPQS(2) = NQ
      MPQS(3) = NPS
      MPQS(4) = NQS
      NPD = NP + NPS*NS
      NQD = NQ + NQS*NS
      NDD = ND + NDS*NS
C
C     CALCULATE THE VALUES OF THE OUTPUT INTEGER PARAMETERS
C
      NXD = NX - NDD
      NDF = NXD - NPAR - KFC
      ICOUNT(5) = NDF
      NEX = NX + NQD
      ICOUNT(4) = NEX
      NGH = NQD + NPAR + KFC
      ICOUNT(6) = NGH
      NST = NQD + NDD + NPS*NS
      IF (NP.LT.(NQS*NS)) GO TO 40
      NST = NPD + NDD + NQ
   40 ICOUNT(1) = NQD
      ICOUNT(2) = NXD
      ICOUNT(3) = NDD
      LEX = NXD + NQD
      ITC = 0
C
C     CHECK FOR ERRORS IN NPAR, MR, AND KFC
C
      IERROR = 1
      DO 60 I = 1, 7
         IF (MR(I).LT.0) GO TO 1040
   60 CONTINUE
      IF (NP+NQ+NPS+NQS.LT.1) GO TO 1040
      IF ((NP+NQ+NPS+NQS).NE.NPAR) GO TO 1040
      IF (NS.EQ.1) GO TO 1040
      IF (NS.EQ.0 .AND. NPS+NDS+NQS.NE.0) GO TO 1040
      IF (NS.NE.0 .AND. NPS+NDS+NQS.EQ.0) GO TO 1040
      IF (KFC.NE.0 .AND. KFC.NE.1) GO TO 1040
C
C     CHECK FOR OVER-PARAMETERISATION
C
      IERROR = 2
      IF (NDF.LE.0) GO TO 1040
C
C     CHECK CONVERGENCE CRITERIA
C
      IERROR = 3
      IF (KZSP.EQ.1) GO TO 80
C
C     PUT DEFAULT VALUES OF STAB,FAC,EF AND CRIT INTO ZSP ARRAY
C
      ZSP(1) = 0.001D0
      ZSP(2) = 10.0D0
      ZSP(3) = 1000.0D0
      ZSP(4) = MAX(100.0D0*X02AJF(),1.0D-7)
      GO TO 100
C
C     CHECK USER-SUPPLIED CRITERIA
C
   80 IF (ZSP(1).LE.0.0D0) GO TO 1040
      IF (ZSP(2).LE.U) GO TO 1040
      IF (ZSP(3).LT.1.0D0) GO TO 1040
      IF (ZSP(4).GE.1.0D0 .OR. ZSP(4).LT.0.0D0) GO TO 1040
C
C     CHECK MAXIMUM NUMBER OF ITERATIONS IS NON-NEGATIVE
C
  100 IF (NIT.LT.0) GO TO 1040
C
C     CHECK THAT IST HAS BEEN ADEQUATELY DIMENSIONED
C
      IERROR = 4
      IF (IST.LT.NST) GO TO 1040
C
C     CHECK THAT IWA IS ADEQUATELY DIMENSIONED
C
      IERROR = 5
      NN = 7
      IF (KFC.EQ.1) GO TO 120
      NN = 6
      IF (NQS.GT.0) GO TO 120
      NN = 5
      IF (NPS.GT.0) GO TO 120
      NN = 4
      IF (NQ.GT.0) GO TO 120
      NN = 3
  120 KQ = (NEX+NPD+1)*(NN+1) + 9*NPAR
      IF (IWA.LT.KQ) GO TO 1040
C
C     CHECK THAT IEX, IGH, AND IH ARE ADEQUATELY DIMENSIONED
C
      IERROR = 6
      IF (IEX.LT.NEX) GO TO 1040
      IF (IGH.LT.NGH) GO TO 1040
      IF (IH.LE.NGH) GO TO 1040
C
C     CLEAR WORK ARRAY
C
      DO 140 I = 1, IWA
         WA(I) = ZERO
  140 CONTINUE
C
C     SM AND EPS ARE FUNCTIONS OF THE SMALLEST VALUE DISTINGUISHABLE
C     BY THE COMPUTER
C
      SM = X02AJF()
      EPS = SM*ABS(ZSP(3))
      SM = SM*2.0D0*ZSP(2)
      IERROR = 0
      IFAILQ = 1
C
C     FORM DIFFERENCED VALUES AND STORE IN EX
C
      CALL G13AAF(X,NX,ND,NDS,NS,EX,KQ,IFAILQ)
      IF (IFAILQ.EQ.0) GO TO 160
      IERROR = 1
      GO TO 1040
C
C     CALCULATE THE DIMENSIONS OF THE AQ,BETA AND BQ ARRAYS
C
  160 NAQ = NEX*NN
      NB = NPD + 1
      NBQ = NB*NN
C
C     CALCULATE THE START POINTS OF ALL THE ARRAYS (OTHER THAN AQ,
C     THE
C     FIRST) WHICH MAKE UP THE WORKING ARRAY
C     I.E.BQ,BETA,EXQ,PHI,THETA,
C     SPHI,STHETA,PHIC,THEC,SPHIC,STHEC AND PA
C
      KWBQ = 1 + NAQ
      KWBE = KWBQ + NBQ
      KWEX = KWBE + NB
      KWPH = KWEX + NEX
      KWTH = KWPH + NPAR
      KWSP = KWTH + NPAR
      KWST = KWSP + NPAR
      KWPHC = KWST + NPAR
      KWTHC = KWPHC + NPAR
      KWSPC = KWTHC + NPAR
      KWSTC = KWSPC + NPAR
      KWPA = KWSTC + NPAR
      KPTF = 0
C
C     TRANSFER PARAMETER VALUES FROM PAR TO PHI,THETA,SPHI,STHETA
C
      CALL G13AEZ(PAR,NPAR,MPQS,WA,IWA,KWPH)
C
C     CHECK VALIDITY OF THE FOUR PARAMETER SETS
C
      CALL G13AEY(MPQS,WA,IWA,KWPH,NPAR,WA(KWPA),EPS,ISF,IERROR)
      IF (IERROR.EQ.0) GO TO 200
C
C     ERROR IN PARAMETERS ON ENTRY - SET FLAGS AND RETURN
C
      IERROR = 10
      DO 180 I = 1, 4
         IF (ISF(I).EQ.-1) ISF(I) = -2
  180 CONTINUE
      GO TO 1040
  200 NQDP = NQD + 1
      IF (NQD.LE.0) GO TO 280
C
C     SHIFT VALUES UP EX TO MAKE ROOM FOR PRE-X S WHICH ARE
C     INITIALLY SET TO ZERO
C
      DO 220 I = 1, NX
         J = NX - I + 1
         K = J + NQD
         EX(K) = EX(J)
  220 CONTINUE
      DO 240 I = 1, NQD
         EX(I) = ZERO
  240 CONTINUE
C
C     SET UP OPTION 2 IF ANY PAR VALUE IS NON-ZERO, OTHERWISE SET UP
C     OPTION 3 IF NO CONSTANT IS BEING ESTIMATED AND 4 IF ONE IS
C
      DO 260 I = 1, NPAR
         IF (PAR(I).EQ.ZERO) GO TO 260
         KSCH = 2
         GO TO 300
  260 CONTINUE
  280 KSCH = KFC + 3
C
C     SUBTRACT CONSTANT FROM DIFFERENCED VALUES ONLY
C
  300 DO 340 I = 1, LEX
         J = KWEX + I - 1
         IF (I.LE.NQD) GO TO 320
         WA(J) = EX(I) - C
         GO TO 340
  320    WA(J) = EX(I)
  340 CONTINUE
      IF (KPTF.EQ.0) GO TO 360
C
C     TRANSFER VALUES FROM PAR TO PHI,THETA,SPHI,STHETA
C
      CALL G13AEZ(PAR,NPAR,MPQS,WA,IWA,KWPH)
  360 KPTF = 1
C
C     DERIVE AQ WHICH CONTAINS A S, AX S, AC S, ETC. AND BQ WHICH
C     CONTAINS B S, BX S, BC S, ETC.
C
      CALL G13AEW(WA(KWEX),AL,LEX,WA(KWBE),NB,WA(1),NAQ,WA(KWBQ)
     *            ,NBQ,KSCH,WA(KWPH),WA(KWTH),WA(KWSP),WA(KWST)
     *            ,NPAR,NP,NQ,NPS,NQS,NS,NPD,NQD)
C
C     DERIVE S,G AND H
C
      CALL G13AEV(NP,NQ,NPS,NQS,NS,WA(1),NAQ,WA(KWBQ)
     *            ,NBQ,KSCH,AL,LEX,NB,S,G,H,IH,NGH)
      IF (KFF.EQ.0) GO TO 400
  380 KQ = NAQ + NB + 1
C
C     DERIVE FINAL SET OF AL VALUES
C
      CALL G13AEU(0,WA(KWEX),AL,WA(1),LEX,WA(KWBQ),WA(KWBE),WA(KQ)
     *            ,NB,WA(KWPH),WA(KWTH),WA(KWSP),WA(KWST)
     *            ,NPAR,NP,NQ,NPS,NQS,NS,NPD)
      GO TO 880
  400 IF (NIT.NE.0) GO TO 420
      IF (KSCH.GE.3) GO TO 380
  420 IF (KPIV.EQ.0) GO TO 440
      IF (KSCH.EQ.2) GO TO 440
C
C     PRINT OUT INTERMEDIATE VALUES
C
      CALL PIV(MR,PAR,NPAR,C,KFC,ICOUNT,S,G,H,IH,IGH,ITC,ZSP)
C
C     COPY NGH ROWS AND COLUMNS OF H INTO HC
C
  440 DO 480 J = 1, NGH
         DO 460 I = 1, NGH
            HC(I,J) = H(I,J)
  460    CONTINUE
  480 CONTINUE
      IF (KSCH.NE.2) GO TO 540
      IFAILQ = 1
C
C     IF OPTION IS 2, SOLVE THE EQUATIONS DEFINED BY HC AND G, AND
C     PUT RESULTS IN SD
C
      CALL F04ASF(HC,IH,G,NQD,SD,AL,EXR,IFAILQ)
      IF (IFAILQ.EQ.0) GO TO 500
      IERROR = 9
      GO TO 880
C
C     OBTAIN ESTIMATES OF THE PRE-X S
C
  500 DO 520 I = 1, NQD
         EX(I) = EX(I) + SD(I)
  520 CONTINUE
      GO TO 280
  540 FST = U + ZSP(1)
C
C     MODIFY MAIN DIAGONAL TERMS RELATING TO DIFFERENCED VALUES IN
C     HC
C
      DO 560 I = NQDP, NGH
         HC(I,I) = H(I,I)*FST
  560 CONTINUE
      IFAILQ = 1
C
C     SOLVE HC AND G, AND PUT RESULTS IN SD
C
      CALL F04ASF(HC,IH,G,NGH,SD,AL,EXR,IFAILQ)
      IF (IFAILQ.NE.0) GO TO 720
      IF (NQD.LE.0) GO TO 600
C
C     PUT ESTIMATES OF PRE-X S IN EXR
C
      DO 580 I = 1, NQD
         EXR(I) = EX(I) + SD(I)
  580 CONTINUE
C
C     PUT PAR ESTIMATES IN PA
C
  600 DO 620 I = 1, NPAR
         J = NQD + I
         K = KWPA + I - 1
         WA(K) = PAR(I) + SD(J)
  620 CONTINUE
C
C     PUT ESTIMATES OF CONSTANT IN CC
C
      IF (KFC.EQ.0) GO TO 640
      CC = C + SD(NGH)
      GO TO 660
  640 CC = C
C
C     SUBTRACT CC FROM DIFFERENCED VALUES AND STORE IN EXR
C
  660 DO 680 I = NQDP, LEX
         EXR(I) = EX(I) - CC
  680 CONTINUE
C
C     TRANSFER PAR ESTIMATES TO PHIC,THEC,SPHIC,STHEC
C
      CALL G13AEZ(WA(KWPA),NPAR,MPQS,WA,IWA,KWPHC)
C
C     CHECK VALIDITY OF PARAMETERS IN PHIC,THEC,SPHIC,STHEC
C
      CALL G13AEY(MPQS,WA,IWA,KWPHC,NPAR,AL,EPS,ISF,IERROR)
      IF (IERROR.NE.0) GO TO 720
C
C     DERIVE AQ AND BQ USING VALUES IN PHIC,THEC,SPHIC,STHEC
C
      CALL G13AEW(EXR,AL,LEX,WA(KWBE),NB,WA(1),NAQ,WA(KWBQ)
     *            ,NBQ,1,WA(KWPHC),WA(KWTHC),WA(KWSPC),WA(KWSTC)
     *            ,NPAR,NP,NQ,NPS,NQS,NS,NPD,NQD)
C
C     DERIVE A NEW RESIDUAL SUM OF SQUARES S2
C
      CALL G13AEV(NP,NQ,NPS,NQS,NS,WA(1),NAQ,WA(KWBQ)
     *            ,NBQ,1,AL,LEX,NB,S2,SD,HC,IH,NGH)
C
C     IF THERE HAS BEEN NO REDUCTION IN THE RESIDUAL SUM OF SQUARES,
C     MODIFY STAB AND REPEAT THE CALCULATIONS WITH NEW DIAGONAL
C     TERMS
C     IN HC
C
      IF (S2.GE.S) GO TO 720
C
C     COPY THE PRE-X S FROM EXR TO EX, THE CONSTANT FROM CC TO C,
C     AND
C     THE OTHER PARAMETERS FROM PA TO PAR
C
      IF (NQD.LE.0) GO TO 780
      DO 700 I = 1, NQD
         EX(I) = EXR(I)
  700 CONTINUE
      GO TO 780
  720 ZSP(1) = ZSP(1)*ZSP(2)
      IF (ZSP(1).LT.VHV) GO TO 540
      IF (IERROR.GT.0) GO TO 740
      IF (IFAILQ.EQ.0) GO TO 760
      IERROR = 9
      GO TO 1040
  740 IERROR = 10
      GO TO 1040
  760 IERROR = 7
      GO TO 1040
  780 C = CC
      DO 800 I = 1, NPAR
         K = KWPA + I - 1
         PAR(I) = WA(K)
  800 CONTINUE
      RA = S2/S
      S = S2
C
C     SET TERMINATION FLAG KFF TO 1 IF REQUIRED NUMBER OF ITERATIONS
C     HAS BEEN CARRIED OUT OR IF THE REDUCTION IN THE RESIDUAL SUM
C     OF
C     SQUARES IS LESS THAN THE SPECIFIED CRITERION. OTHERWISE MODIFY
C     STAB AND DO ANOTHER ITERATION
C
      IF (NIT.EQ.ITC) GO TO 840
      IF ((U-RA).LT.ZSP(4)) GO TO 860
  820 ITC = ITC + 1
      IF (ZSP(1).LE.SM) GO TO 280
      ZSP(1) = ZSP(1)/ZSP(2)
      GO TO 280
  840 KFF = 1
      GO TO 280
  860 IF (ZSP(1).LT.U) GO TO 840
      GO TO 820
C
C     CALCULATE RESIDUAL S.D.
C
  880 RRMS = SQRT(S/DBLE(NDF))
C
C     RESIDUALS HELD IN AQ TRANSFERRED TO EXR
C
      DO 900 I = 1, LEX
         EXR(I) = WA(I)
  900 CONTINUE
      IF (NIT.LE.0) GO TO 1020
      IFAILQ = 1
C
C     DERIVE THE INVERSE OF H AND USE ITS MAIN DIAGONAL TO CALCULATE
C     THE S.D. S OF THE PRE-X S, THE PAR PARAMETERS AND THE
C     CONSTANT.
C     THE CORRELATION COEFFICIENTS RELATING TO THESE ESTIMATES IS
C     THEN
C     STORED IN THE LOWER HALF OF H
C
      CALL F01ACZ(NGH,SM,H,IH,HC,IH,SD,KQ,IFAILQ)
      IF (IFAILQ.EQ.0) GO TO 920
      IERROR = 8
      GO TO 1040
  920 DO 940 I = 1, NGH
         SD(I) = SQRT(H(I+1,I))
  940 CONTINUE
      IF (NGH.LE.1) GO TO 1000
      K = NGH - 1
      DO 980 J = 1, K
         IL = J + 1
         DO 960 I = IL, NGH
            H(I,J) = H(I+1,J)/(SD(I)*SD(J))
  960    CONTINUE
         SD(J) = SD(J)*RRMS
  980 CONTINUE
 1000 SD(NGH) = SD(NGH)*RRMS
C
C     DERIVE STATE SET FROM VALUES HELD IN EX, AL AND EXR
C
 1020 CALL G13AET(EX,AL,EXR,NEX,NP,ND,NQ,NPS,NDS,NQS,NS,ST,NST)
      IFAIL = 0
      RETURN
 1040 IFAIL = P01ABF(IFAIL,IERROR,SRNAME,0,P01REC)
      RETURN
      END
