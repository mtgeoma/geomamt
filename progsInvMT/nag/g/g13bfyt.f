      SUBROUTINE G13BFY(MR,NPARA,PARA,NPE,NXY,XXY,IXXY,NXSP,MT,KEF,NIT,
     *                  ZSP,ITC,SD,CM,ICM,S,D,KZEF,RES,MWA,IMWA,BETA,
     *                  BETAC,NGH,G,GC,IH,H,HC,DELT,IWDS,WDS,NBFQ,BF,
     *                  IPXS,PXS,WAE,IWAE,C,KPRIV,STTF,ISTTF,NSTTF,IERR)
C     MARK 11 RELEASE. NAG COPYRIGHT 1983.
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C     MARK 12 REVISED. IER-523 (AUG 1986).
C     MARK 13 REVISED. USE OF MARK 12 X02 FUNCTIONS (APR 1988).
C     MARK 16 REVISED. IER-1043 (JUN 1993).
C
C     G13BFY IS CALLED BY G13BEF OR G13BJF TO DO THE CALCULATIONS
C     NEEDED TO OBTAIN PARAMETER ESTIMATES, THE STATE SET
C     , THE OBJECTIVE FUNCTION AND EITHER THE RESIDUAL SUM
C     OF SQUARES(G13BEF) OR THE RESIDUAL MEAN SQUARE (G13BJF).
C     ADDITIONALLY, FOR G13BEF ONLY, IT DOES THE CALCULATIONS
C     NEEDED TO OBTAIN THE STANDARD DEVIATIONS, THE
C     CORRELATION MATRIX AND THE RESIDUALS.
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  C, D, S
      INTEGER           ICM, IERR, IH, IMWA, IPXS, ISTTF, ITC, IWAE,
     *                  IWDS, IXXY, KEF, KPRIV, KZEF, NBFQ, NGH, NIT,
     *                  NPARA, NPE, NSTTF, NXSP, NXY
C     .. Array Arguments ..
      DOUBLE PRECISION  BETA(NGH), BETAC(NGH), BF(NBFQ), CM(ICM,NPARA),
     *                  DELT(NGH), G(NGH), GC(NGH), H(IH,NGH),
     *                  HC(IH,NGH), PARA(NPARA), PXS(IPXS,NXSP),
     *                  RES(NXY), SD(NPARA), STTF(ISTTF), WAE(IWAE),
     *                  WDS(IWDS,NXSP), XXY(IXXY,NXSP), ZSP(4)
      INTEGER           MR(7), MT(4,NXSP), MWA(IMWA)
C     .. Local Scalars ..
      DOUBLE PRECISION  DC, DELTA, DET, DETC, EPS, FST, PWR, Q, R, RA,
     *                  RRMS, SM, U, VHV, ZERO, ZSP1
      INTEGER           I, IDA, IDB, IERRQ, IFAIL, IFAILQ, IK5, IQ, IQA,
     *                  J, JCF, JM, JQ, JQA, K, KABP, KABQ, KASP, KB1,
     *                  KBX, KBYP, KCVT, KFC, KFL, KQ, KQTB, KSFS, KSS,
     *                  L, LAC, LALPHA, LARL, LBC, LGCA, LLEF, LLER,
     *                  LLLA, LLLB, LLWQ, LLWZ, LMASPA, LMASPB, LMIS,
     *                  LMORD, LMPAB, LMPSG, LMQAB, LMQSG, LMRN, LMSER,
     *                  LMSN, LMSPA, LMSPB, LMTYP, LPHI, LSPHI, LWAEE,
     *                  LWK1, LWK2, LWK4, LWK5, LWK6, LWQWZ, N, N2, N3,
     *                  NAS, NBF, NBS, NBSS, NBV, NBVD, ND, NDD, NDF,
     *                  NDFV, NDFVA, NDS, NFR, NMSP, NMSQ, NP, NPAR,
     *                  NPARQ, NPD, NPDQ, NPS, NQ, NQD, NQS, NS, NSETS,
     *                  NXS
C     .. Local Arrays ..
      INTEGER           MOP(4), MPQS(4), MVC(4)
C     .. External Functions ..
      DOUBLE PRECISION  X02AJF
      EXTERNAL          X02AJF
C     .. External Subroutines ..
      EXTERNAL          F01ACZ, F04ASF, G13AEY, G13AEZ, G13AJY, G13BEJ,
     *                  G13BEM, G13BER, G13BES, G13BET, G13BEU, G13BEV,
     *                  G13BEW, G13BEY, G13BEZ, G13BFX
C     .. Intrinsic Functions ..
      INTRINSIC         ABS, MAX, DBLE, SQRT
C     .. Data statements ..
      DATA              ZERO/0.0D0/, U/1.0D0/, VHV/1.0D9/
C     .. Executable Statements ..
C
C     DERIVE THE LENGTH OF EACH SERIES AND SET THE BYPASS FLAG
C     ACCORDING TO WHETHER THE CALL IS FROM G13BEF OR G13BJF
C
      ZSP1 = ZSP(1)
      IFAIL = IERR
      N = NXY
      KBYP = 0
      IF (N.NE.1) GO TO 20
      IF (ITC.GE.0) GO TO 20
      N = -ITC
      KBYP = 1
C
C     DERIVE MISCELLANEOUS VARIABLES ASSOCIATED WITH ARIMA
C     ORDERS ARRAY FOR THE Y SERIES
C
   20 CALL G13AJY(MR,NP,ND,NQ,NPS,NDS,NQS,NS,NPD,NDD,NQD,MPQS,NPAR)
      KASP = NGH - NPAR + 1
      NXS = NXSP - 1
C
C     DERIVE VARIABLES RELATING TO LENGTHS OF A(T) AND B(T) SETS
C
      CALL G13BEZ(NXS,MT,NP,NQ,NPS,NQS,NS,NDD,NQD,KEF,NBSS,NBV,NBF,NXSP)
      NDFV = N - NDD
C
C     NAS AND NBS DEFINE THE FULL LENGTH OF EACH A(T) AND B(T)
C     SET. LAC AND LBC DEFINE THE LENGTH ACTUALLY USED IN THE
C     CALCULATION
C
      NAS = NBV + NDFV
      NBS = NPD + NBV - NBF
      NBVD = NBV - NBSS
      LAC = NAS - NBVD
      LBC = NBS - NBVD
      NFR = NBV + N + NDD
      NPDQ = MAX(NPD,1)
C
C     DERIVE MACHINE DEPENDENT VARIABLES.
C
      SM = X02AJF()
      EPS = SM*ABS(ZSP(3))
      SM = SM*2.0D0*ZSP(2)
C
C     DEFINE START POINTS FOR COMPONENT ARRAYS IN THE INTEGER WORK ARRAY
C
      LMPAB = 1
      LMPSG = LMPAB + 15
      LMQAB = LMPSG + 15
      LMQSG = LMQAB + (8*NXSP)
      LMSPA = LMQSG + (8*NXSP)
      LMSPB = LMSPA + IH
      LMASPA = LMSPB + IH
      LMASPB = LMASPA + IH
      LMSN = LMASPB + IH
      LMIS = LMSN + IH
      LMRN = LMIS + IH
      LMORD = LMRN + IH
      LMTYP = LMORD + NPE
      LMSER = LMTYP + NPE
      KFC = NPE - NPARA + 1
      KQTB = MWA(1)
      MWA(1) = 0
      MWA(2) = 0
C
C     DERIVE THE INTEGER ARRAYS WHICH DEFINE THE DESCRIPTION,
C     THE RELATIVE START POINTS,THE PROCESSING ORDER, ETC. OF
C     THE A(T),B(T) SETS
C
      CALL G13BEY(MPQS,NXSP,NBF,KFC,KEF,MT,MWA(LMPAB),MWA(LMQAB)
     *            ,NSETS,MWA(LMPSG),MWA(LMQSG),NP,NPS,NS,MWA(LMSN)
     *            ,MWA(LMSPA),MWA(LMSPB),IH,MOP,MWA(LMIS),MWA(LMRN))
C
C     IDA AND IDB DEFINE THE LENGTH OF A AND B WHICH HOLD THE
C     COMPLETE A(T) AND B(T) SETS
C
      IDA = NSETS*NAS
      IDB = NSETS*NBS + 1
      N3 = MOP(3)
      N2 = MOP(2)
C
C     DERIVE THE ACTUAL START POINTS IN A AND B OF EACH A(T)
C     AND B(T) SET.
C
      DO 40 I = 1, IH
         K = LMSN - 1 + I
         J = ABS(MWA(K)) - 1
         K = LMSPA - 1 + I
         L = LMASPA - 1 + I
         MWA(L) = J*NAS + MWA(K) + NBVD + 1
         K = LMSPB - 1 + I
         L = LMASPB - 1 + I
         MWA(L) = J*NBS + MWA(K) + NBVD + 1
   40 CONTINUE
      IK5 = 4*NPAR
C
C     NDF IS THE NUMBER OF DEGREES OF FREEDOM.
C
      NDF = NDFV - NGH + NBF
C
C     CARRY OUT CHECK ON LENGTH OF REAL WORK ARRAY.
C
      LWQWZ = NPAR + N2*(N2+1)
      NPARQ = MAX(NPAR,1)
      LARL = 4*NPARQ + 2*(N+NFR+NBS+IWDS) + IPXS + NBV
      I = IDA + IDB + MAX(LARL,LWQWZ)
      KQTB = KQTB + I
      IERR = 6
      IF (IWAE.GE.I) GO TO 60
      MWA(1) = KQTB
      IF (KPRIV.EQ.0 .AND. IFAIL.NE.0) GO TO 1060
C
C     PRINT OUT ERROR MESSAGE ABOUT LENGTH OF WA.
C
      CALL G13BFX(ITC,S,D,PARA,NPARA,IMWA,MWA,MWA,5,KQTB)
      GO TO 1060
C
C     DEFINE MISC. VARIABLES ASSOCIATED WITH THE PROCESSING ORDER
C     OF THE GROUPS OF PARAMETERS DEFINED IN THE ALGORITHM, PAGE 21.
C
   60 KABQ = 1
      NMSQ = MOP(1)
      IF (KEF.LE.2) GO TO 80
      KABQ = 2
      NMSQ = MOP(2)
   80 KB1 = NMSQ - 1
      KABP = 3
      NMSP = MOP(3)
      KBX = NMSP - 1
      KCVT = 2
C
C     DEFINE THE START POINTS OF THE COMPONENT ARRAYS IN THE
C     REAL WORK ARRAY.
C
      LLLA = 1
      LLLB = LLLA + IDA
      LGCA = LLLB + IDB
      LPHI = LGCA + NPAR
      LSPHI = LPHI + NPDQ
      LLEF = LSPHI + NPDQ
      LALPHA = LLEF + NPDQ
      LLER = LALPHA + NPDQ
      LLWQ = LPHI
      LLWZ = LLWQ + N2*N2
      LWK1 = LGCA
      LWK2 = LWK1 + NGH
      LWK4 = LGCA
      LWK5 = LGCA
      LWK6 = LWK5 + IK5
      LWAEE = LGCA
      ITC = -1
      ZSP(1) = ZSP(1)*ZSP(2)
      NDFVA = NDFV - NMSQ + NBF + 1
      PWR = U/DBLE(NDFVA)
      JCF = 0
C
C     DERIVE BETA PROCESSING ORDER, PARAMETER TYPES, ETC. WHERE
C     BETA IS THE ARRAY HOLDING ALL ESTIMABLE PARAMETERS INCLUDING
C     THE NUISANCE PARAMETERS.
C
      CALL G13BEM(IH,MWA(LMSN),MWA(LMIS),MWA(LMRN),NPE,MWA(LMORD)
     *            ,MWA(LMTYP),MWA(LMSER),NXS)
      K = LMORD - 1
C
C     TRANSFER INITIAL PARAMETER ESTIMATES TO BETA FROM THE ARRAYS.
C
      DO 100 I = 1, NPE
         K = K + 1
         J = MWA(K)
         BETA(J) = PARA(I)
  100 CONTINUE
      IF (NPAR.LE.0) GO TO 140
      CALL G13AEZ(BETA(KASP),NPAR,MPQS,WAE,IWAE,LWK5)
C
C     TEST THE VALIDITY OF THE INITIAL ARIMA PARAMETERS
C
      CALL G13AEY(MPQS,WAE(LWK5),IK5,1,NPAR,WAE(LWK6),EPS,MVC,IERR)
      IF (IERR.EQ.0) GO TO 140
      IERR = 10
      GO TO 1060
  120 IERR = 3
      GO TO 1060
  140 IF (NXS.LE.0) GO TO 160
C
C     TEST THE VALIDITY OF THE INITIAL DELTAS
C
      CALL G13BER(BETA,NGH,MOP,MWA(LMSN),IH,MWA(LMQAB),MWA(LMQSG)
     *            ,NXSP,EPS,WAE(LWK4),IWDS,KSFS)
      IF (KSFS.NE.0) GO TO 120
  160 KFL = 0
      DET = U
      DETC = U
      DELTA = U
      IERR = 0
      IF (KB1.LE.0) GO TO 220
C
C     PRELIMINARY RUN TO DERIVE A(T),B(T) SETS FOR BACK FORECASTS
C     ONLY (PLUS C AND SIMPLE OMEGAS IF KEF = 3), CALCULATE S, G, H,
C     AND SOLVE H,G EQUATIONS TO GET CORRECTIONS WHICH WE THEN
C     APPLY TO THIS BETA SUBSET.
C
      CALL G13BEV(XXY,IXXY,N,MR,PARA,NPARA,C,KFC,NXSP,PXS,IPXS,BF,NBFQ,
     *            WDS,IWDS,NBV,KEF,MT,MWA(LMPAB),MWA(LMQAB),WAE(LLLA)
     *            ,IDA,WAE(LLLB),IDB,WAE(LWAEE),LARL,KABQ,NBF,LBC)
      CALL G13BEU(LAC,LBC,MWA(LMSN),MWA(LMASPA),MWA(LMASPB)
     *            ,NMSQ,WAE(LLLA),IDA,WAE(LLLB)
     *            ,IDB,NBVD,S,G,NGH,H,IH,MWA(LMPAB))
      IFAILQ = 1
      CALL F04ASF(H,IH,G,KB1,DELT,WAE(LWK1),WAE(LWK2),IFAILQ)
      IERR = 8
      IF (IFAILQ.NE.0) GO TO 1060
      IERR = 0
      DO 180 I = 1, KB1
         BETA(I) = BETA(I) + DELT(I)
  180 CONTINUE
      IF (KEF.EQ.1) GO TO 200
C
C     CALCULATE THE DETERMINANT OF THIS SUBSET OF H.
C
      CALL G13BET(H,IH,KB1,DET)
C
C     TRANSFER THE PARAMETERS IN THIS SUBSET OF BETA TO THE ARRAYS
C     DEFINING EACH SEPARATE TYPE OF PARAMETER.
C
  200 CALL G13BEW(BETA,NGH,PARA,NPARA,NPAR,BF,NBFQ,NXSP,PXS,IPXS,WDS,
     *            IWDS,C,KEF,MOP,MWA(LMIS),MWA(LMRN),IH,1,1)
C
C     BYPASS IF THERE ARE NO PRE-XS ( ALSO NO C OR SIMPLE OMEGAS
C     IN THE MARGINAL CASE).
C
  220 IF (NMSQ.EQ.MOP(3)) GO TO 700
C
C     DERIVE FULL RANGE OF A(T),B(T) SETS (UNLESS ITC=-1,WHEN WE ONLY
C     DEAL WITH BACK FORECASTS, SIMPLE OMEGAS, CONSTANT AND PRE-XS)
C     AND USE THESE TO DERIVE S, G, H.
C
  240 CALL G13BEV(XXY,IXXY,N,MR,PARA,NPARA,C,KFC,NXSP,PXS,IPXS,BF,NBFQ,
     *            WDS,IWDS,NBV,KEF,MT,MWA(LMPAB),MWA(LMQAB),WAE(LLLA)
     *            ,IDA,WAE(LLLB),IDB,WAE(LWAEE),LARL,KABP,NBF,LBC)
      CALL G13BEU(LAC,LBC,MWA(LMSN),MWA(LMASPA),MWA(LMASPB)
     *            ,NMSP,WAE(LLLA),IDA,WAE(LLLB)
     *            ,IDB,NBVD,S,G,NGH,H,IH,MWA(LMPAB))
      IF (KEF.EQ.1) GO TO 280
      IF (NPAR.LE.0) GO TO 260
C
C     CALCULATE DELTA AND CORRECT THE ARIMA COMPONENTS OF G.
C
      CALL G13BES(MWA(LMPAB),IH,NMSQ,NBF,MWA(LMSN),MWA(LMSPA),MWA(LMSPB)
     *            ,PARA,NPAR,KEF,NAS,NBS,NBVD,H,IH,WAE(LLWQ),WAE(LLWZ)
     *            ,WAE(LLLA),IDA,WAE(LLLB),IDB,WAE(LGCA)
     *            ,DELTA,NP,NQ,NPS,NS,NQD,NPD,NPDQ,WAE(LLEF),WAE(LALPHA)
     *            ,WAE(LLER),S,NDFVA,KFL,G,NGH,WAE(LPHI),WAE(LSPHI))
  260 KFL = 1
C
C     CALCULATE THE OBJECTIVE FUNCTION.
C
  280 D = S*(DET/DELTA)**PWR
      K = LMORD - 1
C
C     TRANSFER ALL PARAMETER VALUES FROM BETA TO PARA AND DO
C     INTERMEDIATE PRINT OUT.
C
      DO 300 I = 1, NPE
         K = K + 1
         J = MWA(K)
         PARA(I) = BETA(J)
  300 CONTINUE
      IF (KPRIV.EQ.0) GO TO 320
      IF (ITC.LE.NIT)
     *   CALL G13BFX(ITC,S,D,PARA,NPARA,NPE,MWA(LMTYP),MWA(LMSER),0,0)
  320 IF (ITC.LT.0) GO TO 340
C
C     BYPASS IF NO OMEGA, DELTA, OR ARIMA PARAMETERS, IF CONVERGENCE
C     HES BEEN ACHIEVED OR IF ALL ITERATIONS HAVE BEEN CARRIED OUT.
C
      IF (NIT.EQ.0) GO TO 740
      IF (JCF.EQ.1 .OR. ITC.LE.NIT .OR. IERR.NE.0) GO TO 330
      IERR = 12
      ITC = ITC - 1
      GO TO 740
  330 IF (MOP(3).EQ.MOP(4)) GO TO 740
      IF (JCF.EQ.1 .OR. ITC.GT.NIT) GO TO 740
C
C     COPY H INTO HC, MODIFY THE MAIN DIAGONAL FOR THE OMEGA
C     AND DELTA AND ARIMA TERMS, AND SOLVE THE HC,G EQUATIONS TO
C     OBTAIN CORRECTIONS TO BE APPLIED TO BETA. THE RESULTING CORRECTED
C     VALUES TO BE HELD IN BETAC.
C
  340 DO 380 J = 1, KBX
         DO 360 I = 1, J
            HC(I,J) = H(I,J)
  360    CONTINUE
  380 CONTINUE
      IF (ITC.LT.0) GO TO 420
      IF (N3.GT.KBX) GO TO 420
      FST = U + ZSP(1)
      DO 400 I = N3, KBX
         HC(I,I) = H(I,I)*FST
  400 CONTINUE
  420 IFAILQ = 1
      CALL F04ASF(HC,IH,G,KBX,DELT,WAE(LWK1),WAE(LWK2),IFAILQ)
      IERR = 8
      IF (IFAILQ.NE.0) GO TO 480
      IERR = 0
      IF (NMSQ.EQ.MOP(4)) GO TO 520
      DO 440 I = 1, KBX
         BETAC(I) = BETA(I)
         IF (I.LT.NMSQ) GO TO 440
         BETAC(I) = BETA(I) + DELT(I)
  440 CONTINUE
      IF (ITC.LT.0) GO TO 500
      IF (NXS.LE.0) GO TO 460
C
C     TEST THE VALIDITY OF THE DELTAS AND THE ARIMA PARAMETERS.
C     IF INVALID, INCREASE STAB AND GO BACK AND MODIFY THE MAIN DIAGONAL
C     AGAIN. IF STAB IS TOO LARGE COPY BETA TO THE ARRAYS AND EXIT.
C
      CALL G13BER(BETAC,NGH,MOP,MWA(LMSN),IH,MWA(LMQAB),MWA(LMQSG)
     *            ,NXSP,EPS,WAE(LWK4),IWDS,KSFS)
      IERR = 3
      IF (KSFS.NE.0) GO TO 480
      IERR = 0
  460 IF (NPAR.LE.0) GO TO 500
      CALL G13AEZ(BETAC(KASP),NPAR,MPQS,WAE,IWAE,LWK5)
      CALL G13AEY(MPQS,WAE(LWK5),IK5,1,NPAR,WAE(LWK6),EPS,MVC,IERR)
      IF (IERR.EQ.0) GO TO 500
      IERR = 10
  480 ZSP(1) = ZSP(1)*ZSP(2)
      IF (ZSP(1).LT.VHV) GO TO 340
      CALL G13BEW(BETA,NGH,PARA,NPARA,NPAR,BF,NBFQ,NXSP,PXS,IPXS,WDS,
     *            IWDS,C,KEF,MOP,MWA(LMIS),MWA(LMRN),IH,1,3)
      GO TO 740
C
C     TRANSFER PARTS 2,3 OF BETA TO THE ARRAYS (PART 2 ONLY IF ITC=-1)
C
  500 CALL G13BEW(BETAC,NGH,PARA,NPARA,NPAR,BF,NBFQ,NXSP,PXS,IPXS,WDS,
     *            IWDS,C,KEF,MOP,MWA(LMIS),MWA(LMRN),IH,2,KCVT)
C
C     BYPASS IF PART 1 OF BETA IS NULL.
C     OTHERWISE OBTAIN A(T),B(T) SETS FOR THIS SUBSET, CALCULATE
C     S, GC, HC, SOLVE THE HC,GC EQUATIONS AND STORE RESULTING
C     CORRECTED VALUES IN BETAC.
C
      IF (KB1.LE.0) GO TO 580
      CALL G13BEV(XXY,IXXY,N,MR,PARA,NPARA,C,KFC,NXSP,PXS,IPXS,BF,NBFQ,
     *            WDS,IWDS,NBV,KEF,MT,MWA(LMPAB),MWA(LMQAB),WAE(LLLA)
     *            ,IDA,WAE(LLLB),IDB,WAE(LWAEE),LARL,KABQ,NBF,LBC)
      CALL G13BEU(LAC,LBC,MWA(LMSN),MWA(LMASPA),MWA(LMASPB)
     *            ,NMSQ,WAE(LLLA),IDA,WAE(LLLB)
     *            ,IDB,NBVD,S,GC,NGH,HC,IH,MWA(LMPAB))
      IFAILQ = 1
      CALL F04ASF(HC,IH,GC,KB1,DELT,WAE(LWK1),WAE(LWK2),IFAILQ)
      IERR = 8
      IF (IFAILQ.NE.0) GO TO 600
      IERR = 0
  520 DO 540 I = 1, KB1
         BETAC(I) = BETA(I) + DELT(I)
  540 CONTINUE
      IF (KEF.EQ.1) GO TO 560
C
C     CALCULATE DETERMINANT OF HC.
C
      CALL G13BET(HC,IH,KB1,DETC)
      IF (NPAR.LE.0) GO TO 560
C
C     CALCULATE DELTA ONLY.
C
      CALL G13BES(MWA(LMPAB),IH,NMSQ,NBF,MWA(LMSN),MWA(LMSPA),MWA(LMSPB)
     *            ,PARA,NPAR,KEF,NAS,NBS,NBVD,HC,IH,WAE(LLWQ),WAE(LLWZ)
     *            ,WAE(LLLA),IDA,WAE(LLLB),IDB,WAE(LGCA)
     *            ,DELTA,NP,NQ,NPS,NS,NQD,NPD,NPDQ,WAE(LLEF),WAE(LALPHA)
     *            ,WAE(LLER),S,NDFVA,0,GC,NGH,WAE(LPHI),WAE(LSPHI))
C
C     TRANSFER PART 1 OF BETAC TO THE ARRAYS.
C
  560 CALL G13BEW(BETAC,NGH,PARA,NPARA,NPAR,BF,NBFQ,NXSP,PXS,IPXS,WDS,
     *            IWDS,C,KEF,MOP,MWA(LMIS),MWA(LMRN),IH,1,1)
C
C     DERIVE SINGLE A(T),B(T) SET AND CALCULATE S.
C
  580 CALL G13BEV(XXY,IXXY,N,MR,PARA,NPARA,C,KFC,NXSP,PXS,IPXS,BF,NBFQ,
     *            WDS,IWDS,NBV,KEF,MT,MWA(LMPAB),MWA(LMQAB),WAE(LLLA)
     *            ,IDA,WAE(LLLB),IDB,WAE(LWAEE),LARL,0,NBF,LBC)
      CALL G13BEU(LAC,LBC,MWA(LMSN),MWA(LMASPA),MWA(LMASPB),1,WAE(LLLA)
     *            ,IDA,WAE(LLLB),IDB,NBVD,S,GC,NGH,HC,IH,MWA(LMPAB))
C
C     CALCULATE TEMPORARY OBJECTIVE FUNCTION. IF IT IS NOT LESS
C     THAN CURRENT OBJECTIVE FUNCTION, RESTORE BETA TO THE ARRAYS,
C     INCREASE STAB AND GO BACK TO THE MAIN DIAGONAL.
C
      DC = S*(DETC/DELTA)**PWR
      IF (ITC.LT.0) GO TO 660
      IF (DC.LT.D) GO TO 620
  600 CALL G13BEW(BETA,NGH,PARA,NPARA,NPAR,BF,NBFQ,NXSP,PXS,IPXS,WDS,
     *            IWDS,C,KEF,MOP,MWA(LMIS),MWA(LMRN),IH,1,1)
      GO TO 480
C
C     CHECK IF FURTHER PROGRESS IS POSSIBLE.
C
  620 JCF = 1
      RA = DC/D
      D = DC
      IF ((U-RA).GE.ZSP(4)) GO TO 640
      IF (ZSP(1).LT.U) GO TO 660
  640 JCF = 0
C
C     COPY BETAC INTO BETA AND DETC INTO DET. REDUCE STAB.
C     INCREASE THE ITERATION COUNT.
C
  660 DO 680 I = 1, KBX
         BETA(I) = BETAC(I)
  680 CONTINUE
      DET = DETC
      IF (ZSP(1).LE.SM) GO TO 720
  700 ZSP(1) = ZSP(1)/ZSP(2)
  720 ITC = ITC + 1
      IERR = 0
      IF (ITC.GT.0) GO TO 240
C
C     THESE VALUES ARE NEEDED IF ITC.GE.0
C
      KABP = 4
      NMSP = IH
      KBX = NMSP - 1
      KCVT = 3
      GO TO 240
C
C     DERIVE RESIDUAL SUM OF SQUARES (G13BEF) OR RESIDUAL MEAN
C     SQUARE (G13BJF).
C     IN LATTER CASE BYPASS SUBSEQUENT CALCULATIONS .
C
  740 Q = S/DBLE(NDF)
      IF (KBYP.EQ.0) GO TO 760
      S = Q
      GO TO 1040
  760 J = NBV
      RRMS = SQRT(Q)
C
C     DERIVE RESIDUALS.
C
      DO 800 I = 1, N
         IF (I.GT.NDFV) GO TO 780
         J = J + 1
         RES(I) = WAE(J)
         GO TO 800
  780    RES(I) = ZERO
  800 CONTINUE
      IFAILQ = 1
      EPS = X02AJF()
C
C     INVERT THE H MATRIX.
C
      CALL F01ACZ(NGH,EPS,H,IH,HC,IH,WAE,KQ,IFAILQ)
      IF (IFAILQ.EQ.0) GO TO 820
      IF (IERR.NE.0) GO TO 1040
      IERR = 9
      GO TO 1040
  820 L = LMORD - 1
C
C     TRANSFER TERMS FROM LOWER HALF OF INVERTED H INTO TOP HALF
C     OF HC, IN PARA ORDER. PUT ITS MAIN DIAGONAL TEMPORARILY
C     IN SD ARRAY.
C
      DO 880 J = 1, NPE
         K = L + J
         JQA = MWA(K)
         DO 860 I = 1, J
            K = L + I
            IQA = MWA(K)
            IQ = JQA + 1
            JQ = IQA
            IF (IQA.LE.JQA) GO TO 840
            IQ = IQA + 1
            JQ = JQA
  840       HC(I,J) = H(IQ,JQ)
  860    CONTINUE
         SD(J) = SQRT(HC(J,J))
  880 CONTINUE
      IF (ICM.LT.NPARA) GO TO 940
      IF (NPE.LE.1) GO TO 940
C
C     FORM THE CORRELATION MATRIX AND THE STANDARD DEVIATIONS,
C     SETTING TO ZERO THOSE PARTS RELATING TO C IF THAT IS FIXED.
C
      DO 920 J = 2, NPE
         JM = J - 1
         Q = SD(J)
         DO 900 I = 1, JM
            R = HC(I,J)/(Q*SD(I))
            CM(I,J) = R
            CM(J,I) = R
  900    CONTINUE
  920 CONTINUE
  940 DO 960 I = 1, NPE
         SD(I) = SD(I)*RRMS
  960 CONTINUE
      IF (NPE.EQ.NPARA) GO TO 980
      SD(NPARA) = ZERO
  980 DO 1000 I = 1, NPE
         CM(I,I) = U
 1000 CONTINUE
      IF (NPE.EQ.NPARA) GO TO 1040
      DO 1020 I = 1, NPARA
         CM(NPARA,I) = ZERO
         CM(I,NPARA) = ZERO
 1020 CONTINUE
 1040 KSS = 2*(NBS+IWDS)
C
C     CONSTRUCT THE STATE SET AND TRANSFER ZS AND ES TO
C     XXY IF KZEF.NE.0
C
      CALL G13BEJ(XXY,IXXY,N,NXSP,PXS,IPXS,WDS,IWDS,NFR,MT,WAE(LWAEE)
     *            ,LARL,STTF,ISTTF,NSTTF,MR,C,KZEF,BF,NBFQ,NBF,KSS,
     *            IERRQ)
      IF (IERRQ.NE.11) GO TO 1060
      IF (IERR.EQ.0) IERR = 11
      IF (IERR.EQ.12) IERR = 13
 1060 ZSP(1) = ZSP1
      RETURN
      END
