      SUBROUTINE G01JDX(F,A,B,EPSABS,EPSREL,RESULT,ABSERR,IWORK,WORK)
C     MARK 15 RELEASE. NAG COPYRIGHT 1991.
C
C     Based on D01BDF (a 1-dimensional non-adaptive, finite interval
C     quadrature routine).
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  A, ABSERR, B, EPSABS, EPSREL, RESULT
      INTEGER           IWORK
C     .. Array Arguments ..
      DOUBLE PRECISION  WORK(IWORK+1)
C     .. Function Arguments ..
      DOUBLE PRECISION  F
      EXTERNAL          F
C     .. Local Scalars ..
      DOUBLE PRECISION  ABSC, CENTR, DHLGTH, EPMACH, FCENTR, FVAL,
     *                  FVAL1, FVAL2, HLGTH, RES10, RES21, RES43, RES87,
     *                  RESABS, RESASC, RESKH, UFLOW
      INTEGER           IPX, K, L
C     .. Local Arrays ..
      DOUBLE PRECISION  FV1(5), FV2(5), FV3(5), FV4(5), SAVFUN(21),
     *                  W10(5), W21A(5), W21B(6), W43A(10), W43B(12),
     *                  W87A(21), W87B(23), X1(5), X2(5), X3(11), X4(22)
C     .. External Functions ..
      DOUBLE PRECISION  X02AJF, X02AMF
      EXTERNAL          X02AJF, X02AMF
C     .. Intrinsic Functions ..
      INTRINSIC         ABS, MAX, MIN
C     .. Data statements ..
      DATA              X1(1)/0.973906528517171720077964012084452D+00/,
     *                  X1(2)/0.865063366688984510732096688423493D+00/,
     *                  X1(3)/0.679409568299024406234327365114874D+00/,
     *                  X1(4)/0.433395394129247190799265943165784D+00/,
     *                  X1(5)/0.148874338981631210884826001129720D+00/,
     *                  W10(1)/0.066671344308688137593568809893332D+00/,
     *                  W10(2)/0.149451349150580593145776339657697D+00/,
     *                  W10(3)/0.219086362515982043995534934228163D+00/,
     *                  W10(4)/0.269266719309996355091226921569469D+00/,
     *                  W10(5)/0.295524224714752870173892994651338D+00/
      DATA              X2(1)/0.995657163025808080735527280689003D+00/,
     *                  X2(2)/0.930157491355708226001207180059508D+00/,
     *                  X2(3)/0.780817726586416897063717578345042D+00/,
     *                  X2(4)/0.562757134668604683339000099272694D+00/,
     *                  X2(5)/0.294392862701460198131126603103866D+00/,
     *                  W21A(1)/0.032558162307964727478818972459390D+00/
     *                  , W21A(2)/
     *                  0.075039674810919952767043140916190D+00/,
     *                  W21A(3)/0.109387158802297641899210590325805D+00/
     *                  , W21A(4)/
     *                  0.134709217311473325928054001771707D+00/,
     *                  W21A(5)/0.147739104901338491374841515972068D+00/
     *                  , W21B(1)/
     *                  0.011694638867371874278064396062192D+00/,
     *                  W21B(2)/0.054755896574351996031381300244580D+00/
     *                  , W21B(3)/
     *                  0.093125454583697605535065465083366D+00/,
     *                  W21B(4)/0.123491976262065851077958109831074D+00/
      DATA              W21B(5)/0.142775938577060080797094273138717D+00/
     *                  , W21B(6)/
     *                  0.149445554002916905664936468389821D+00/
      DATA              X3(1)/0.999333360901932081394099323919911D+00/,
     *                  X3(2)/0.987433402908088869795961478381209D+00/,
     *                  X3(3)/0.954807934814266299257919200290473D+00/,
     *                  X3(4)/0.900148695748328293625099494069092D+00/,
     *                  X3(5)/0.825198314983114150847066732588520D+00/,
     *                  X3(6)/0.732148388989304982612354848755461D+00/,
     *                  X3(7)/0.622847970537725238641159120344323D+00/,
     *                  X3(8)/0.499479574071056499952214885499755D+00/,
     *                  X3(9)/0.364901661346580768043989548502644D+00/,
     *                  X3(10)/0.222254919776601296498260928066212D+00/,
     *                  X3(11)/0.074650617461383322043914435796506D+00/,
     *                  W43A(1)/0.016296734289666564924281974617663D+00/
     *                  , W43A(2)/
     *                  0.037522876120869501461613795898115D+00/,
     *                  W43A(3)/0.054694902058255442147212685465005D+00/
     *                  , W43A(4)/
     *                  0.067355414609478086075553166302174D+00/,
     *                  W43A(5)/0.073870199632393953432140695251367D+00/
      DATA              W43A(6)/0.005768556059769796184184327908655D+00/
     *                  , W43A(7)/
     *                  0.027371890593248842081276069289151D+00/,
     *                  W43A(8)/0.046560826910428830743339154433824D+00/
     *                  , W43A(9)/
     *                  0.061744995201442564496240336030883D+00/
      DATA              W43A(10)/0.071387267268693397768559114425516D+00
     *                  /, W43B(1)/
     *                  0.001844477640212414100389106552965D+00/,
     *                  W43B(2)/0.010798689585891651740465406741293D+00/
     *                  , W43B(3)/
     *                  0.021895363867795428102523123075149D+00/,
     *                  W43B(4)/0.032597463975345689443882222526137D+00/
     *                  , W43B(5)/
     *                  0.042163137935191811847627924327955D+00/,
     *                  W43B(6)/0.050741939600184577780189020092084D+00/
     *                  , W43B(7)/
     *                  0.058379395542619248375475369330206D+00/,
     *                  W43B(8)/0.064746404951445885544689259517511D+00/
     *                  , W43B(9)/
     *                  0.069566197912356484528633315038405D+00/,
     *                  W43B(10)/0.072824441471833208150939535192842D+00
     *                  /, W43B(11)/
     *                  0.074507751014175118273571813842889D+00/,
     *                  W43B(12)/0.074722147517403005594425168280423D+00
     *                  /
      DATA              X4(1)/0.999902977262729234490529830591582D+00/,
     *                  X4(2)/0.997989895986678745427496322365960D+00/,
     *                  X4(3)/0.992175497860687222808523352251425D+00/,
     *                  X4(4)/0.981358163572712773571916941623894D+00/,
     *                  X4(5)/0.965057623858384619128284110607926D+00/,
     *                  X4(6)/0.943167613133670596816416634507426D+00/,
     *                  X4(7)/0.915806414685507209591826430720050D+00/,
     *                  X4(8)/0.883221657771316501372117548744163D+00/,
     *                  X4(9)/0.845710748462415666605902011504855D+00/,
     *                  X4(10)/0.803557658035230982788739474980964D+00/,
     *                  X4(11)/0.757005730685495558328942793432020D+00/,
     *                  X4(12)/0.706273209787321819824094274740840D+00/,
     *                  X4(13)/0.651589466501177922534422205016736D+00/,
     *                  X4(14)/0.593223374057961088875273770349144D+00/,
     *                  X4(15)/0.531493605970831932285268948562671D+00/,
     *                  X4(16)/0.466763623042022844871966781659270D+00/,
     *                  X4(17)/0.399424847859218804732101665817923D+00/,
     *                  X4(18)/0.329874877106188288265053371824597D+00/,
     *                  X4(19)/0.258503559202161551802280975429025D+00/
      DATA              X4(20)/0.185695396568346652015917141167606D+00/,
     *                  X4(21)/0.111842213179907468172398359241362D+00/,
     *                  X4(22)/0.037352123394619870814998165437704D+00/,
     *                  W87A(1)/0.008148377384149172900002878448190D+00/
     *                  , W87A(2)/
     *                  0.018761438201562822243935059003794D+00/,
     *                  W87A(3)/0.027347451050052286161582829741283D+00/
     *                  , W87A(4)/
     *                  0.033677707311637930046581056957588D+00/,
     *                  W87A(5)/0.036935099820427907614589586742499D+00/
     *                  , W87A(6)/
     *                  0.002884872430211530501334156248695D+00/,
     *                  W87A(7)/0.013685946022712701888950035273128D+00/
     *                  , W87A(8)/
     *                  0.023280413502888311123409291030404D+00/,
     *                  W87A(9)/0.030872497611713358675466394126442D+00/
     *                  , W87A(10)/
     *                  0.035693633639418770719351355457044D+00/,
     *                  W87A(11)/0.000915283345202241360843392549948D+00
     *                  /
      DATA              W87A(12)/0.005399280219300471367738743391053D+00
     *                  /, W87A(13)/
     *                  0.010947679601118931134327826856808D+00/,
     *                  W87A(14)/0.016298731696787335262665703223280D+00
     *                  /, W87A(15)/
     *                  0.021081568889203835112433060188190D+00/,
     *                  W87A(16)/0.025370969769253827243467999831710D+00
     *                  /
      DATA              W87A(17)/0.029189697756475752501446154084920D+00
     *                  /, W87A(18)/
     *                  0.032373202467202789685788194889595D+00/,
     *                  W87A(19)/0.034783098950365142750781997949596D+00
     *                  /, W87A(20)/
     *                  0.036412220731351787562801163687577D+00/,
     *                  W87A(21)/0.037253875503047708539592001191226D+00
     *                  /, W87B(1)/
     *                  0.000274145563762072350016527092881D+00/,
     *                  W87B(2)/0.001807124155057942948341311753254D+00/
     *                  , W87B(3)/
     *                  0.004096869282759164864458070683480D+00/,
     *                  W87B(4)/0.006758290051847378699816577897424D+00/
     *                  , W87B(5)/
     *                  0.009549957672201646536053581325377D+00/,
     *                  W87B(6)/0.012329447652244853694626639963780D+00/
     *                  , W87B(7)/
     *                  0.015010447346388952376697286041943D+00/,
     *                  W87B(8)/0.017548967986243191099665352925900D+00/
      DATA              W87B(9)/0.019938037786440888202278192730714D+00/
     *                  , W87B(10)/
     *                  0.022194935961012286796332102959499D+00/,
     *                  W87B(11)/0.024339147126000805470360647041454D+00
     *                  /, W87B(12)/
     *                  0.026374505414839207241503786552615D+00/,
     *                  W87B(13)/0.028286910788771200659968002987960D+00
     *                  /, W87B(14)/
     *                  0.030052581128092695322521110347341D+00/
      DATA              W87B(15)/0.031646751371439929404586051078883D+00
     *                  /, W87B(16)/
     *                  0.033050413419978503290785944862689D+00/,
     *                  W87B(17)/0.034255099704226061787082821046821D+00
     *                  /, W87B(18)/
     *                  0.035262412660156681033782717998428D+00/,
     *                  W87B(19)/0.036076989622888701185500318003895D+00
     *                  /, W87B(20)/
     *                  0.036698604498456094498018047441094D+00/,
     *                  W87B(21)/0.037120549269832576114119958413599D+00
     *                  /, W87B(22)/
     *                  0.037334228751935040321235449094698D+00/,
     *                  W87B(23)/0.037361073762679023410321241766599D+00
     *                  /
C     .. Executable Statements ..
C
      EPMACH = X02AJF()
      UFLOW = X02AMF()
      RESULT = 0.0D+00
      ABSERR = 0.0D+00
      HLGTH = 5.0D-01*(B-A)
      DHLGTH = ABS(HLGTH)
      CENTR = 5.0D-01*(B+A)
      FCENTR = F(CENTR,IWORK,WORK)
C
C          COMPUTE THE INTEGRAL USING THE 10- AND 21-POINT FORMULA.
C
      DO 240 L = 1, 3
         GO TO (20,100,160) L
   20    RES10 = 0.0D+00
         RES21 = W21B(6)*FCENTR
         RESABS = W21B(6)*ABS(FCENTR)
         DO 40 K = 1, 5
            ABSC = HLGTH*X1(K)
            FVAL1 = F(CENTR+ABSC,IWORK,WORK)
            FVAL2 = F(CENTR-ABSC,IWORK,WORK)
            FVAL = FVAL1 + FVAL2
            RES10 = RES10 + W10(K)*FVAL
            RES21 = RES21 + W21A(K)*FVAL
            RESABS = RESABS + W21A(K)*(ABS(FVAL1)+ABS(FVAL2))
            SAVFUN(K) = FVAL
            FV1(K) = FVAL1
            FV2(K) = FVAL2
   40    CONTINUE
         IPX = 5
         DO 60 K = 1, 5
            IPX = IPX + 1
            ABSC = HLGTH*X2(K)
            FVAL1 = F(CENTR+ABSC,IWORK,WORK)
            FVAL2 = F(CENTR-ABSC,IWORK,WORK)
            FVAL = FVAL1 + FVAL2
            RES21 = RES21 + W21B(K)*FVAL
            RESABS = RESABS + W21B(K)*(ABS(FVAL1)+ABS(FVAL2))
            SAVFUN(IPX) = FVAL
            FV3(K) = FVAL1
            FV4(K) = FVAL2
   60    CONTINUE
C
C           TEST FOR CONVERGENCE.
C
         RESULT = RES21*HLGTH
         RESABS = RESABS*DHLGTH
         RESKH = 5.0D-01*RES21
         RESASC = W21B(6)*ABS(FCENTR-RESKH)
         DO 80 K = 1, 5
            RESASC = RESASC + W21A(K)*(ABS(FV1(K)-RESKH)+ABS(FV2(K)
     *               -RESKH)) + W21B(K)*(ABS(FV3(K)-RESKH)+ABS(FV4(K)
     *               -RESKH))
   80    CONTINUE
         ABSERR = ABS((RES21-RES10)*HLGTH)
         RESASC = RESASC*DHLGTH
         GO TO 220
C
C           COMPUTE THE INTEGRAL USING THE 43-POINT FORMULA.
C
  100    RES43 = W43B(12)*FCENTR
         DO 120 K = 1, 10
            RES43 = RES43 + SAVFUN(K)*W43A(K)
  120    CONTINUE
         DO 140 K = 1, 11
            IPX = IPX + 1
            ABSC = HLGTH*X3(K)
            FVAL = F(ABSC+CENTR,IWORK,WORK) + F(CENTR-ABSC,IWORK,WORK)
            RES43 = RES43 + FVAL*W43B(K)
            SAVFUN(IPX) = FVAL
  140    CONTINUE
C
C           TEST FOR CONVERGENCE.
C
         RESULT = RES43*HLGTH
         ABSERR = ABS((RES43-RES21)*HLGTH)
         GO TO 220
C
C           COMPUTE THE INTEGRAL USING THE 87-POINT FORMULA.
C
  160    RES87 = W87B(23)*FCENTR
         DO 180 K = 1, 21
            RES87 = RES87 + SAVFUN(K)*W87A(K)
  180    CONTINUE
         DO 200 K = 1, 22
            ABSC = HLGTH*X4(K)
            RES87 = RES87 + W87B(K)*(F(ABSC+CENTR,IWORK,WORK)
     *              +F(CENTR-ABSC,IWORK,WORK))
  200    CONTINUE
         RESULT = RES87*HLGTH
         ABSERR = ABS((RES87-RES43)*HLGTH)
  220    IF (RESASC.NE.0.0D+00 .AND. ABSERR.NE.0.0D+00)
     *       ABSERR = RESASC*MIN(1.0D+00,(2.0D+02*ABSERR/RESASC)
     *       **1.5D+00)
         IF (RESABS.GT.UFLOW/(5.0D+01*EPMACH))
     *       ABSERR = MAX((EPMACH*5.0D+01)*RESABS,ABSERR)
         IF (ABSERR.LE.MAX(EPSABS,EPSREL*ABS(RESULT))) GO TO 260
  240 CONTINUE
  260 RETURN
      END
