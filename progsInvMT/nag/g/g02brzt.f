      SUBROUTINE G02BRZ(N,NROWS,A,B,KROWS,CT,ITYPE,RKT,RSP)
C     MARK 4 RELEASE NAG COPYRIGHT 1974.
C     MARK 4.5 REVISED
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C
C     NAG AUXILIARY SUBROUTINE G02BRZ
C     WRITTEN 20. 8.73 BY PAUL GRIFFITHS (OXFORD UNIVERSITY)
C
C     ROUTINE IS USED BY G02BRF AND G02BSF TO CALCULATE KENDALL
C     AND/OR SPEARMAN COEFFICIENTS GIVEN THE RANKINGS AND TIE
C     CORRECTIONS
C
C     N IS THE TOTAL NUMBER OF CASES
C     NROWS IS THE VALID NUMBER OF CASES FOR THIS CORRELATION
C     ARRAY A CONTAINS RANKINGS FOR FIRST  VARIABLE
C     ARRAY B CONTAINS RANKINGS FOR SECOND VARIABLE
C     ARRAY KROWS INDICATES WHICH NROWS CASES (FROM THE N CASES)
C     ARE INVOLVED
C     ARRAY CT CONTAINS CORRECTIONS FOR TIES AS FOLLOWS:
C     CT(1) IS CORRECTION TO  FIRST VARIABLE FOR KENDALL
C     CT(2) IS CORRECTION TO  FIRST VARIABLE FOR SPEARMAN
C     CT(3) IS CORRECTION TO SECOND VARIABLE FOR KENDALL
C     CT(4) IS CORRECTION TO SECOND VARIABLE FOR SPEARMAN
C     ITYPE INDICATES WHICH COEFFIENT(S) IS/ARE REQUIRED AS
C     FOLLOWS:
C     ITYPE=-1 FOR KENDALL ONLY
C     ITYPE=0 FOR BOTH KENDALL AND SPEARMAN
C     ITYPE=+1 FOR SPEARMAN ONLY
C     ON OUTPUT RKT CONTAINS KENDALL COEFFICIENT IF ITYPE.GE.0,
C     AND SPEARMAN COEFFICIENT OTHERWISE
C     RSP CONTAINS SPEARMAN COEFFICIENT IF ITYPE.LE.0,
C     AND KENDALL COEFFICIENT OTHERWISE
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  RKT, RSP
      INTEGER           ITYPE, N, NROWS
C     .. Array Arguments ..
      DOUBLE PRECISION  A(N), B(N), CT(4)
      INTEGER           KROWS(NROWS)
C     .. Local Scalars ..
      DOUBLE PRECISION  D, DK, DS, U
      INTEGER           I, IC, IP, J, JC, NC, NR1
C     .. Intrinsic Functions ..
      INTRINSIC         SIGN, SQRT
C     .. Executable Statements ..
      U = 0.0D0
      D = 0.0D0
      NR1 = NROWS - 1
      DO 40 I = 1, NR1
         IC = KROWS(I)
         IP = I + 1
         DO 20 J = IP, NROWS
            JC = KROWS(J)
            DK = A(IC) - A(JC)
            DS = B(IC) - B(JC)
            IF (DK.NE.0.0D0 .AND. DS.NE.0.0D0) U = U + SIGN(1.0D0,DK)
     *          *SIGN(1.0D0,DS)
   20    CONTINUE
         DK = A(IC) - B(IC)
         D = D + DK*DK
   40 CONTINUE
      NC = KROWS(NROWS)
      DK = A(NC) - B(NC)
      D = D + DK*DK
      IF (ITYPE) 60, 140, 260
   60 DK = CT(1)*CT(3)
      IF (DK) 80, 80, 100
   80 RKT = 0.0D0
      GO TO 120
  100 RKT = U/SQRT(DK)
  120 RSP = RKT
      GO TO 340
  140 DK = CT(1)*CT(3)
      IF (DK) 160, 160, 180
  160 RKT = 0.0D0
      GO TO 200
  180 RKT = U/SQRT(DK)
  200 DS = CT(2)*CT(4)
      IF (DS) 220, 220, 240
  220 RSP = 0.0D0
      GO TO 340
  240 RSP = 0.5D0*(CT(2)+CT(4)-6.0D0*D)/SQRT(DS)
      GO TO 340
  260 DS = CT(2)*CT(4)
      IF (DS) 280, 280, 300
  280 RSP = 0.0D0
      GO TO 320
  300 RSP = 0.5D0*(CT(2)+CT(4)-6.0D0*D)/SQRT(DS)
  320 RKT = RSP
  340 RETURN
      END
