      SUBROUTINE G13BEZ(NXS,MT,NP,NQ,NPS,NQS,NS,NDD,NQD,KEF,NBSS,NBV,
     *                  NBF,NXSP)
C     MARK 11 RELEASE. NAG COPYRIGHT 1983.
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C
C     SUBROUTINE G13BEZ DERIVES THE TOTAL NUMBER OF VALUES
C     TO PRECEDE T=1 IN THE A(T),B(T) SETS. ALSO THE NUMBER OF
C     THESE VALUES WHICH WILL BE USED IN MOST CALCULATIONS,
C     AND THE MAXIMUM NUMBER OF BACK-FORECASTS OR PRE-XS
C     TO BE ALLOWED FOR.
C
C     .. Scalar Arguments ..
      INTEGER           KEF, NBF, NBSS, NBV, NDD, NP, NPS, NQ, NQD, NQS,
     *                  NS, NXS, NXSP
C     .. Array Arguments ..
      INTEGER           MT(4,NXSP)
C     .. Local Scalars ..
      INTEGER           I, J, KGMX, NGW, NNB, NNP, NNQ, NNR, NPX, NWD
C     .. External Subroutines ..
      EXTERNAL          G13BEX
C     .. Intrinsic Functions ..
      INTRINSIC         MAX
C     .. Executable Statements ..
      KGMX = 0
      IF (NXS.LE.0) GO TO 40
C
C     CALCULATE THE MAXIMUM NUMBER OF PRE-XS
C
      DO 20 I = 1, NXS
         CALL G13BEX(MT,I,NXSP,NNB,NNP,NNQ,NNR,NWD,NGW,NPX)
         KGMX = MAX(KGMX,NPX)
   20 CONTINUE
C
C     NBF HOLDS THE MAXIMUM NUMBER OF PRE-XS OR BACK-FORECASTS
C
   40 NBF = MAX(KGMX,NQD)
C
C     NBSS HOLDS THE NUMBER OF VALUES TO THE LEFT OF T=1
C     TO BE USED IN MOST CALCULATIONS
C
      NBSS = MAX((KGMX+NDD),NQD)
      I = NS*NPS
      J = NS*NQS
C
C     NBV IS THE TOTAL NUMBER OF VALUES TO THE LEFT OF T=1
C     IN THE A(T),B(T) SETS. IT EXCEEDS NBSS WHEN THERE IS
C     A POSSIBILITY OF OVERWRITING IN CERTAIN CALCULATIONS.
C     IT WILL ALWAYS EXCEED ZERO
C
      IF (KEF.EQ.1) GO TO 60
      NBV = NBSS + NBF + MAX(I,NP,J,NQ)
      GO TO 80
   60 NBV = NBSS + MAX(NBF,NP,I)
   80 NBV = MAX(NBV,1)
      RETURN
      END
