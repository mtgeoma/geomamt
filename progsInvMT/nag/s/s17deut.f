      SUBROUTINE S17DEU(Z,FNU,IPMTR,TOL,PHI,ARG,ZETA1,ZETA2,ASUM,BSUM,
     *                  ELIM)
C     MARK 13 RELEASE. NAG COPYRIGHT 1988.
C     MARK 14 REVISED. IER-764 (DEC 1989).
C
C     Original name: CUNHJ
C
C     REFERENCES
C         HANDBOOK OF MATHEMATICAL FUNCTIONS BY M. ABRAMOWITZ AND I.A.
C         STEGUN, AMS55, NATIONAL BUREAU OF STANDARDS, 1965, CHAPTER 9.
C
C         ASYMPTOTICS AND SPECIAL FUNCTIONS BY F.W.J. OLVER, ACADEMIC
C         PRESS, N.Y., 1974, PAGE 420
C
C     ABSTRACT
C         S17DEU COMPUTES PARAMETERS FOR BESSEL FUNCTIONS C(FNU,Z) =
C         J(FNU,Z), Y(FNU,Z) OR H(I,FNU,Z) I=1,2 FOR LARGE ORDERS FNU
C         BY MEANS OF THE UNIFORM ASYMPTOTIC EXPANSION
C
C         C(FNU,Z)=C1*PHI*( ASUM*AIRY(ARG) + C2*BSUM*DAIRY(ARG) )
C
C         FOR PROPER CHOICES OF C1, C2, AIRY AND DAIRY WHERE AIRY IS
C         AN AIRY FUNCTION AND DAIRY IS ITS DERIVATIVE.
C
C               (2/3)*FNU*ZETA**1.5 = ZETA1-ZETA2,
C
C         ZETA1=0.5*FNU*CLOG((1+W)/(1-W)), ZETA2=FNU*W FOR SCALING
C         PURPOSES IN AIRY FUNCTIONS FROM S17DGF OR S17DHF.
C
C         MCONJ=SIGN OF AIMAG(Z), BUT IS AMBIGUOUS WHEN Z IS REAL AND
C         MUST BE SPECIFIED. IPMTR=0 RETURNS ALL PARAMETERS. IPMTR=
C         1 COMPUTES ALL EXCEPT ASUM AND BSUM.
C
C     .. Scalar Arguments ..
      COMPLEX*16        ARG, ASUM, BSUM, PHI, Z, ZETA1, ZETA2
      DOUBLE PRECISION  ELIM, FNU, TOL
      INTEGER           IPMTR
C     .. Local Scalars ..
      COMPLEX*16        CFNU, CONE, CZERO, PRZTH, PTFN, RFN13, RTZTA,
     *                  RZTH, SUMA, SUMB, T2, TFN, W, W2, ZA, ZB, ZC,
     *                  ZETA, ZTH
      DOUBLE PRECISION  ANG, ASUMI, ASUMR, ATOL, AW2, AZTH, BSUMI,
     *                  BSUMR, BTOL, EX1, EX2, FN13, FN23, HPI, PI, PP,
     *                  RFNU, RFNU2, TEST, THPI, TSTI, TSTR, WI, WR,
     *                  ZCI, ZCR, ZETAI, ZETAR, ZTHI, ZTHR
      INTEGER           IAS, IBS, IS, J, JR, JU, K, KMAX, KP1, KS, L,
     *                  L1, L2, LR, LRP1, M
C     .. Local Arrays ..
      COMPLEX*16        CR(14), DR(14), P(30), UP(14)
      DOUBLE PRECISION  ALFA(180), AP(30), AR(14), BETA(210), BR(14),
     *                  C(105), GAMA(30)
C     .. Intrinsic Functions ..
      INTRINSIC         ABS, DIMAG, ATAN, DCMPLX, COS, EXP, LOG, DBLE,
     *                  SIN, SQRT
C     .. Data statements ..
      DATA              AR(1), AR(2), AR(3), AR(4), AR(5), AR(6), AR(7),
     *                  AR(8), AR(9), AR(10), AR(11), AR(12), AR(13),
     *                  AR(14)/1.00000000000000000D+00,
     *                  1.04166666666666667D-01,
     *                  8.35503472222222222D-02,
     *                  1.28226574556327160D-01,
     *                  2.91849026464140464D-01,
     *                  8.81627267443757652D-01,
     *                  3.32140828186276754D+00,
     *                  1.49957629868625547D+01,
     *                  7.89230130115865181D+01,
     *                  4.74451538868264323D+02,
     *                  3.20749009089066193D+03,
     *                  2.40865496408740049D+04,
     *                  1.98923119169509794D+05,
     *                  1.79190200777534383D+06/
      DATA              BR(1), BR(2), BR(3), BR(4), BR(5), BR(6), BR(7),
     *                  BR(8), BR(9), BR(10), BR(11), BR(12), BR(13),
     *                  BR(14)/1.00000000000000000D+00,
     *                  -1.45833333333333333D-01,
     *                  -9.87413194444444444D-02,
     *                  -1.43312053915895062D-01,
     *                  -3.17227202678413548D-01,
     *                  -9.42429147957120249D-01,
     *                  -3.51120304082635426D+00,
     *                  -1.57272636203680451D+01,
     *                  -8.22814390971859444D+01,
     *                  -4.92355370523670524D+02,
     *                  -3.31621856854797251D+03,
     *                  -2.48276742452085896D+04,
     *                  -2.04526587315129788D+05,
     *                  -1.83844491706820990D+06/
      DATA              C(1), C(2), C(3), C(4), C(5), C(6), C(7), C(8),
     *                  C(9), C(10), C(11), C(12), C(13), C(14), C(15),
     *                  C(16)/1.00000000000000000D+00,
     *                  -2.08333333333333333D-01,
     *                  1.25000000000000000D-01,
     *                  3.34201388888888889D-01,
     *                  -4.01041666666666667D-01,
     *                  7.03125000000000000D-02,
     *                  -1.02581259645061728D+00,
     *                  1.84646267361111111D+00,
     *                  -8.91210937500000000D-01,
     *                  7.32421875000000000D-02,
     *                  4.66958442342624743D+00,
     *                  -1.12070026162229938D+01,
     *                  8.78912353515625000D+00,
     *                  -2.36408691406250000D+00,
     *                  1.12152099609375000D-01,
     *                  -2.82120725582002449D+01/
      DATA              C(17), C(18), C(19), C(20), C(21), C(22), C(23),
     *                  C(24)/8.46362176746007346D+01,
     *                  -9.18182415432400174D+01,
     *                  4.25349987453884549D+01,
     *                  -7.36879435947963170D+00,
     *                  2.27108001708984375D-01,
     *                  2.12570130039217123D+02,
     *                  -7.65252468141181642D+02,
     *                  1.05999045252799988D+03/
      DATA              C(25), C(26), C(27), C(28), C(29), C(30), C(31),
     *                  C(32), C(33), C(34), C(35), C(36), C(37), C(38),
     *                  C(39), C(40)/-6.99579627376132541D+02,
     *                  2.18190511744211590D+02,
     *                  -2.64914304869515555D+01,
     *                  5.72501420974731445D-01,
     *                  -1.91945766231840700D+03,
     *                  8.06172218173730938D+03,
     *                  -1.35865500064341374D+04,
     *                  1.16553933368645332D+04,
     *                  -5.30564697861340311D+03,
     *                  1.20090291321635246D+03,
     *                  -1.08090919788394656D+02,
     *                  1.72772750258445740D+00,
     *                  2.02042913309661486D+04,
     *                  -9.69805983886375135D+04,
     *                  1.92547001232531532D+05,
     *                  -2.03400177280415534D+05/
      DATA              C(41), C(42), C(43), C(44), C(45), C(46), C(47),
     *                  C(48)/1.22200464983017460D+05,
     *                  -4.11926549688975513D+04,
     *                  7.10951430248936372D+03,
     *                  -4.93915304773088012D+02,
     *                  6.07404200127348304D+00,
     *                  -2.42919187900551333D+05,
     *                  1.31176361466297720D+06,
     *                  -2.99801591853810675D+06/
      DATA              C(49), C(50), C(51), C(52), C(53), C(54), C(55),
     *                  C(56), C(57), C(58), C(59), C(60), C(61), C(62),
     *                  C(63), C(64)/3.76327129765640400D+06,
     *                  -2.81356322658653411D+06,
     *                  1.26836527332162478D+06,
     *                  -3.31645172484563578D+05,
     *                  4.52187689813627263D+04,
     *                  -2.49983048181120962D+03,
     *                  2.43805296995560639D+01,
     *                  3.28446985307203782D+06,
     *                  -1.97068191184322269D+07,
     *                  5.09526024926646422D+07,
     *                  -7.41051482115326577D+07,
     *                  6.63445122747290267D+07,
     *                  -3.75671766607633513D+07,
     *                  1.32887671664218183D+07,
     *                  -2.78561812808645469D+06,
     *                  3.08186404612662398D+05/
      DATA              C(65), C(66), C(67), C(68), C(69), C(70), C(71),
     *                  C(72)/-1.38860897537170405D+04,
     *                  1.10017140269246738D+02,
     *                  -4.93292536645099620D+07,
     *                  3.25573074185765749D+08,
     *                  -9.39462359681578403D+08,
     *                  1.55359689957058006D+09,
     *                  -1.62108055210833708D+09,
     *                  1.10684281682301447D+09/
      DATA              C(73), C(74), C(75), C(76), C(77), C(78), C(79),
     *                  C(80), C(81), C(82), C(83), C(84), C(85), C(86),
     *                  C(87), C(88)/-4.95889784275030309D+08,
     *                  1.42062907797533095D+08,
     *                  -2.44740627257387285D+07,
     *                  2.24376817792244943D+06,
     *                  -8.40054336030240853D+04,
     *                  5.51335896122020586D+02,
     *                  8.14789096118312115D+08,
     *                  -5.86648149205184723D+09,
     *                  1.86882075092958249D+10,
     *                  -3.46320433881587779D+10,
     *                  4.12801855797539740D+10,
     *                  -3.30265997498007231D+10,
     *                  1.79542137311556001D+10,
     *                  -6.56329379261928433D+09,
     *                  1.55927986487925751D+09,
     *                  -2.25105661889415278D+08/
      DATA              C(89), C(90), C(91), C(92), C(93), C(94), C(95),
     *                  C(96)/1.73951075539781645D+07,
     *                  -5.49842327572288687D+05,
     *                  3.03809051092238427D+03,
     *                  -1.46792612476956167D+10,
     *                  1.14498237732025810D+11,
     *                  -3.99096175224466498D+11,
     *                  8.19218669548577329D+11,
     *                  -1.09837515608122331D+12/
      DATA              C(97), C(98), C(99), C(100), C(101), C(102),
     *                  C(103), C(104), C(105)/1.00815810686538209D+12,
     *                  -6.45364869245376503D+11,
     *                  2.87900649906150589D+11,
     *                  -8.78670721780232657D+10,
     *                  1.76347306068349694D+10,
     *                  -2.16716498322379509D+09,
     *                  1.43157876718888981D+08,
     *                  -3.87183344257261262D+06,
     *                  1.82577554742931747D+04/
      DATA              ALFA(1), ALFA(2), ALFA(3), ALFA(4), ALFA(5),
     *                  ALFA(6), ALFA(7), ALFA(8), ALFA(9), ALFA(10),
     *                  ALFA(11), ALFA(12), ALFA(13),
     *                  ALFA(14)/-4.44444444444444444D-03,
     *                  -9.22077922077922078D-04,
     *                  -8.84892884892884893D-05,
     *                  1.65927687832449737D-04,
     *                  2.46691372741792910D-04,
     *                  2.65995589346254780D-04,
     *                  2.61824297061500945D-04,
     *                  2.48730437344655609D-04,
     *                  2.32721040083232098D-04,
     *                  2.16362485712365082D-04,
     *                  2.00738858762752355D-04,
     *                  1.86267636637545172D-04,
     *                  1.73060775917876493D-04,
     *                  1.61091705929015752D-04/
      DATA              ALFA(15), ALFA(16), ALFA(17), ALFA(18),
     *                  ALFA(19), ALFA(20), ALFA(21),
     *                  ALFA(22)/1.50274774160908134D-04,
     *                  1.40503497391269794D-04,
     *                  1.31668816545922806D-04,
     *                  1.23667445598253261D-04,
     *                  1.16405271474737902D-04,
     *                  1.09798298372713369D-04,
     *                  1.03772410422992823D-04,
     *                  9.82626078369363448D-05/
      DATA              ALFA(23), ALFA(24), ALFA(25), ALFA(26),
     *                  ALFA(27), ALFA(28), ALFA(29), ALFA(30),
     *                  ALFA(31), ALFA(32), ALFA(33), ALFA(34),
     *                  ALFA(35), ALFA(36)/9.32120517249503256D-05,
     *                  8.85710852478711718D-05,
     *                  8.42963105715700223D-05,
     *                  8.03497548407791151D-05,
     *                  7.66981345359207388D-05,
     *                  7.33122157481777809D-05,
     *                  7.01662625163141333D-05,
     *                  6.72375633790160292D-05,
     *                  6.93735541354588974D-04,
     *                  2.32241745182921654D-04,
     *                  -1.41986273556691197D-05,
     *                  -1.16444931672048640D-04,
     *                  -1.50803558053048762D-04,
     *                  -1.55121924918096223D-04/
      DATA              ALFA(37), ALFA(38), ALFA(39), ALFA(40),
     *                  ALFA(41), ALFA(42), ALFA(43),
     *                  ALFA(44)/-1.46809756646465549D-04,
     *                  -1.33815503867491367D-04,
     *                  -1.19744975684254051D-04,
     *                  -1.06184319207974020D-04,
     *                  -9.37699549891194492D-05,
     *                  -8.26923045588193274D-05,
     *                  -7.29374348155221211D-05,
     *                  -6.44042357721016283D-05/
      DATA              ALFA(45), ALFA(46), ALFA(47), ALFA(48),
     *                  ALFA(49), ALFA(50), ALFA(51), ALFA(52),
     *                  ALFA(53), ALFA(54), ALFA(55), ALFA(56),
     *                  ALFA(57), ALFA(58)/-5.69611566009369048D-05,
     *                  -5.04731044303561628D-05,
     *                  -4.48134868008882786D-05,
     *                  -3.98688727717598864D-05,
     *                  -3.55400532972042498D-05,
     *                  -3.17414256609022480D-05,
     *                  -2.83996793904174811D-05,
     *                  -2.54522720634870566D-05,
     *                  -2.28459297164724555D-05,
     *                  -2.05352753106480604D-05,
     *                  -1.84816217627666085D-05,
     *                  -1.66519330021393806D-05,
     *                  -1.50179412980119482D-05,
     *                  -1.35554031379040526D-05/
      DATA              ALFA(59), ALFA(60), ALFA(61), ALFA(62),
     *                  ALFA(63), ALFA(64), ALFA(65),
     *                  ALFA(66)/-1.22434746473858131D-05,
     *                  -1.10641884811308169D-05,
     *                  -3.54211971457743841D-04,
     *                  -1.56161263945159416D-04,
     *                  3.04465503594936410D-05,
     *                  1.30198655773242693D-04,
     *                  1.67471106699712269D-04,
     *                  1.70222587683592569D-04/
      DATA              ALFA(67), ALFA(68), ALFA(69), ALFA(70),
     *                  ALFA(71), ALFA(72), ALFA(73), ALFA(74),
     *                  ALFA(75), ALFA(76), ALFA(77), ALFA(78),
     *                  ALFA(79), ALFA(80)/1.56501427608594704D-04,
     *                  1.36339170977445120D-04,
     *                  1.14886692029825128D-04,
     *                  9.45869093034688111D-05,
     *                  7.64498419250898258D-05,
     *                  6.07570334965197354D-05,
     *                  4.74394299290508799D-05,
     *                  3.62757512005344297D-05,
     *                  2.69939714979224901D-05,
     *                  1.93210938247939253D-05,
     *                  1.30056674793963203D-05,
     *                  7.82620866744496661D-06,
     *                  3.59257485819351583D-06,
     *                  1.44040049814251817D-07/
      DATA              ALFA(81), ALFA(82), ALFA(83), ALFA(84),
     *                  ALFA(85), ALFA(86), ALFA(87),
     *                  ALFA(88)/-2.65396769697939116D-06,
     *                  -4.91346867098485910D-06,
     *                  -6.72739296091248287D-06,
     *                  -8.17269379678657923D-06,
     *                  -9.31304715093561232D-06,
     *                  -1.02011418798016441D-05,
     *                  -1.08805962510592880D-05,
     *                  -1.13875481509603555D-05/
      DATA              ALFA(89), ALFA(90), ALFA(91), ALFA(92),
     *                  ALFA(93), ALFA(94), ALFA(95), ALFA(96),
     *                  ALFA(97), ALFA(98), ALFA(99), ALFA(100),
     *                  ALFA(101), ALFA(102)/-1.17519675674556414D-05,
     *                  -1.19987364870944141D-05,
     *                  3.78194199201772914D-04,
     *                  2.02471952761816167D-04,
     *                  -6.37938506318862408D-05,
     *                  -2.38598230603005903D-04,
     *                  -3.10916256027361568D-04,
     *                  -3.13680115247576316D-04,
     *                  -2.78950273791323387D-04,
     *                  -2.28564082619141374D-04,
     *                  -1.75245280340846749D-04,
     *                  -1.25544063060690348D-04,
     *                  -8.22982872820208365D-05,
     *                  -4.62860730588116458D-05/
      DATA              ALFA(103), ALFA(104), ALFA(105), ALFA(106),
     *                  ALFA(107), ALFA(108), ALFA(109),
     *                  ALFA(110)/-1.72334302366962267D-05,
     *                  5.60690482304602267D-06,
     *                  2.31395443148286800D-05,
     *                  3.62642745856793957D-05,
     *                  4.58006124490188752D-05,
     *                  5.24595294959114050D-05,
     *                  5.68396208545815266D-05,
     *                  5.94349820393104052D-05/
      DATA              ALFA(111), ALFA(112), ALFA(113), ALFA(114),
     *                  ALFA(115), ALFA(116), ALFA(117), ALFA(118),
     *                  ALFA(119), ALFA(120), ALFA(121),
     *                  ALFA(122)/6.06478527578421742D-05,
     *                  6.08023907788436497D-05,
     *                  6.01577894539460388D-05,
     *                  5.89199657344698500D-05,
     *                  5.72515823777593053D-05,
     *                  5.52804375585852577D-05,
     *                  5.31063773802880170D-05,
     *                  5.08069302012325706D-05,
     *                  4.84418647620094842D-05,
     *                  4.60568581607475370D-05,
     *                  -6.91141397288294174D-04,
     *                  -4.29976633058871912D-04/
      DATA              ALFA(123), ALFA(124), ALFA(125), ALFA(126),
     *                  ALFA(127), ALFA(128), ALFA(129),
     *                  ALFA(130)/1.83067735980039018D-04,
     *                  6.60088147542014144D-04,
     *                  8.75964969951185931D-04,
     *                  8.77335235958235514D-04,
     *                  7.49369585378990637D-04,
     *                  5.63832329756980918D-04,
     *                  3.68059319971443156D-04,
     *                  1.88464535514455599D-04/
      DATA              ALFA(131), ALFA(132), ALFA(133), ALFA(134),
     *                  ALFA(135), ALFA(136), ALFA(137), ALFA(138),
     *                  ALFA(139), ALFA(140), ALFA(141),
     *                  ALFA(142)/3.70663057664904149D-05,
     *                  -8.28520220232137023D-05,
     *                  -1.72751952869172998D-04,
     *                  -2.36314873605872983D-04,
     *                  -2.77966150694906658D-04,
     *                  -3.02079514155456919D-04,
     *                  -3.12594712643820127D-04,
     *                  -3.12872558758067163D-04,
     *                  -3.05678038466324377D-04,
     *                  -2.93226470614557331D-04,
     *                  -2.77255655582934777D-04,
     *                  -2.59103928467031709D-04/
      DATA              ALFA(143), ALFA(144), ALFA(145), ALFA(146),
     *                  ALFA(147), ALFA(148), ALFA(149),
     *                  ALFA(150)/-2.39784014396480342D-04,
     *                  -2.20048260045422848D-04,
     *                  -2.00443911094971498D-04,
     *                  -1.81358692210970687D-04,
     *                  -1.63057674478657464D-04,
     *                  -1.45712672175205844D-04,
     *                  -1.29425421983924587D-04,
     *                  -1.14245691942445952D-04/
      DATA              ALFA(151), ALFA(152), ALFA(153), ALFA(154),
     *                  ALFA(155), ALFA(156), ALFA(157), ALFA(158),
     *                  ALFA(159), ALFA(160), ALFA(161),
     *                  ALFA(162)/1.92821964248775885D-03,
     *                  1.35592576302022234D-03,
     *                  -7.17858090421302995D-04,
     *                  -2.58084802575270346D-03,
     *                  -3.49271130826168475D-03,
     *                  -3.46986299340960628D-03,
     *                  -2.82285233351310182D-03,
     *                  -1.88103076404891354D-03,
     *                  -8.89531718383947600D-04,
     *                  3.87912102631035228D-06,
     *                  7.28688540119691412D-04,
     *                  1.26566373053457758D-03/
      DATA              ALFA(163), ALFA(164), ALFA(165), ALFA(166),
     *                  ALFA(167), ALFA(168), ALFA(169),
     *                  ALFA(170)/1.62518158372674427D-03,
     *                  1.83203153216373172D-03,
     *                  1.91588388990527909D-03,
     *                  1.90588846755546138D-03,
     *                  1.82798982421825727D-03,
     *                  1.70389506421121530D-03,
     *                  1.55097127171097686D-03,
     *                  1.38261421852276159D-03/
      DATA              ALFA(171), ALFA(172), ALFA(173), ALFA(174),
     *                  ALFA(175), ALFA(176), ALFA(177), ALFA(178),
     *                  ALFA(179), ALFA(180)/1.20881424230064774D-03,
     *                  1.03676532638344962D-03,
     *                  8.71437918068619115D-04,
     *                  7.16080155297701002D-04,
     *                  5.72637002558129372D-04,
     *                  4.42089819465802277D-04,
     *                  3.24724948503090564D-04,
     *                  2.20342042730246599D-04,
     *                  1.28412898401353882D-04,
     *                  4.82005924552095464D-05/
      DATA              BETA(1), BETA(2), BETA(3), BETA(4), BETA(5),
     *                  BETA(6), BETA(7), BETA(8), BETA(9), BETA(10),
     *                  BETA(11), BETA(12), BETA(13),
     *                  BETA(14)/1.79988721413553309D-02,
     *                  5.59964911064388073D-03,
     *                  2.88501402231132779D-03,
     *                  1.80096606761053941D-03,
     *                  1.24753110589199202D-03,
     *                  9.22878876572938311D-04,
     *                  7.14430421727287357D-04,
     *                  5.71787281789704872D-04,
     *                  4.69431007606481533D-04,
     *                  3.93232835462916638D-04,
     *                  3.34818889318297664D-04,
     *                  2.88952148495751517D-04,
     *                  2.52211615549573284D-04,
     *                  2.22280580798883327D-04/
      DATA              BETA(15), BETA(16), BETA(17), BETA(18),
     *                  BETA(19), BETA(20), BETA(21),
     *                  BETA(22)/1.97541838033062524D-04,
     *                  1.76836855019718004D-04,
     *                  1.59316899661821081D-04,
     *                  1.44347930197333986D-04,
     *                  1.31448068119965379D-04,
     *                  1.20245444949302884D-04,
     *                  1.10449144504599392D-04,
     *                  1.01828770740567258D-04/
      DATA              BETA(23), BETA(24), BETA(25), BETA(26),
     *                  BETA(27), BETA(28), BETA(29), BETA(30),
     *                  BETA(31), BETA(32), BETA(33), BETA(34),
     *                  BETA(35), BETA(36)/9.41998224204237509D-05,
     *                  8.74130545753834437D-05,
     *                  8.13466262162801467D-05,
     *                  7.59002269646219339D-05,
     *                  7.09906300634153481D-05,
     *                  6.65482874842468183D-05,
     *                  6.25146958969275078D-05,
     *                  5.88403394426251749D-05,
     *                  -1.49282953213429172D-03,
     *                  -8.78204709546389328D-04,
     *                  -5.02916549572034614D-04,
     *                  -2.94822138512746025D-04,
     *                  -1.75463996970782828D-04,
     *                  -1.04008550460816434D-04/
      DATA              BETA(37), BETA(38), BETA(39), BETA(40),
     *                  BETA(41), BETA(42), BETA(43),
     *                  BETA(44)/-5.96141953046457895D-05,
     *                  -3.12038929076098340D-05,
     *                  -1.26089735980230047D-05,
     *                  -2.42892608575730389D-07,
     *                  8.05996165414273571D-06,
     *                  1.36507009262147391D-05,
     *                  1.73964125472926261D-05,
     *                  1.98672978842133780D-05/
      DATA              BETA(45), BETA(46), BETA(47), BETA(48),
     *                  BETA(49), BETA(50), BETA(51), BETA(52),
     *                  BETA(53), BETA(54), BETA(55), BETA(56),
     *                  BETA(57), BETA(58)/2.14463263790822639D-05,
     *                  2.23954659232456514D-05,
     *                  2.28967783814712629D-05,
     *                  2.30785389811177817D-05,
     *                  2.30321976080909144D-05,
     *                  2.28236073720348722D-05,
     *                  2.25005881105292418D-05,
     *                  2.20981015361991429D-05,
     *                  2.16418427448103905D-05,
     *                  2.11507649256220843D-05,
     *                  2.06388749782170737D-05,
     *                  2.01165241997081666D-05,
     *                  1.95913450141179244D-05,
     *                  1.90689367910436740D-05/
      DATA              BETA(59), BETA(60), BETA(61), BETA(62),
     *                  BETA(63), BETA(64), BETA(65),
     *                  BETA(66)/1.85533719641636667D-05,
     *                  1.80475722259674218D-05,
     *                  5.52213076721292790D-04,
     *                  4.47932581552384646D-04,
     *                  2.79520653992020589D-04,
     *                  1.52468156198446602D-04,
     *                  6.93271105657043598D-05,
     *                  1.76258683069991397D-05/
      DATA              BETA(67), BETA(68), BETA(69), BETA(70),
     *                  BETA(71), BETA(72), BETA(73), BETA(74),
     *                  BETA(75), BETA(76), BETA(77), BETA(78),
     *                  BETA(79), BETA(80)/-1.35744996343269136D-05,
     *                  -3.17972413350427135D-05,
     *                  -4.18861861696693365D-05,
     *                  -4.69004889379141029D-05,
     *                  -4.87665447413787352D-05,
     *                  -4.87010031186735069D-05,
     *                  -4.74755620890086638D-05,
     *                  -4.55813058138628452D-05,
     *                  -4.33309644511266036D-05,
     *                  -4.09230193157750364D-05,
     *                  -3.84822638603221274D-05,
     *                  -3.60857167535410501D-05,
     *                  -3.37793306123367417D-05,
     *                  -3.15888560772109621D-05/
      DATA              BETA(81), BETA(82), BETA(83), BETA(84),
     *                  BETA(85), BETA(86), BETA(87),
     *                  BETA(88)/-2.95269561750807315D-05,
     *                  -2.75978914828335759D-05,
     *                  -2.58006174666883713D-05,
     *                  -2.41308356761280200D-05,
     *                  -2.25823509518346033D-05,
     *                  -2.11479656768912971D-05,
     *                  -1.98200638885294927D-05,
     *                  -1.85909870801065077D-05/
      DATA              BETA(89), BETA(90), BETA(91), BETA(92),
     *                  BETA(93), BETA(94), BETA(95), BETA(96),
     *                  BETA(97), BETA(98), BETA(99), BETA(100),
     *                  BETA(101), BETA(102)/-1.74532699844210224D-05,
     *                  -1.63997823854497997D-05,
     *                  -4.74617796559959808D-04,
     *                  -4.77864567147321487D-04,
     *                  -3.20390228067037603D-04,
     *                  -1.61105016119962282D-04,
     *                  -4.25778101285435204D-05,
     *                  3.44571294294967503D-05,
     *                  7.97092684075674924D-05,
     *                  1.03138236708272200D-04,
     *                  1.12466775262204158D-04,
     *                  1.13103642108481389D-04,
     *                  1.08651634848774268D-04,
     *                  1.01437951597661973D-04/
      DATA              BETA(103), BETA(104), BETA(105), BETA(106),
     *                  BETA(107), BETA(108), BETA(109),
     *                  BETA(110)/9.29298396593363896D-05,
     *                  8.40293133016089978D-05,
     *                  7.52727991349134062D-05,
     *                  6.69632521975730872D-05,
     *                  5.92564547323194704D-05,
     *                  5.22169308826975567D-05,
     *                  4.58539485165360646D-05,
     *                  4.01445513891486808D-05/
      DATA              BETA(111), BETA(112), BETA(113), BETA(114),
     *                  BETA(115), BETA(116), BETA(117), BETA(118),
     *                  BETA(119), BETA(120), BETA(121),
     *                  BETA(122)/3.50481730031328081D-05,
     *                  3.05157995034346659D-05,
     *                  2.64956119950516039D-05,
     *                  2.29363633690998152D-05,
     *                  1.97893056664021636D-05,
     *                  1.70091984636412623D-05,
     *                  1.45547428261524004D-05,
     *                  1.23886640995878413D-05,
     *                  1.04775876076583236D-05,
     *                  8.79179954978479373D-06,
     *                  7.36465810572578444D-04,
     *                  8.72790805146193976D-04/
      DATA              BETA(123), BETA(124), BETA(125), BETA(126),
     *                  BETA(127), BETA(128), BETA(129),
     *                  BETA(130)/6.22614862573135066D-04,
     *                  2.85998154194304147D-04,
     *                  3.84737672879366102D-06,
     *                  -1.87906003636971558D-04,
     *                  -2.97603646594554535D-04,
     *                  -3.45998126832656348D-04,
     *                  -3.53382470916037712D-04,
     *                  -3.35715635775048757D-04/
      DATA              BETA(131), BETA(132), BETA(133), BETA(134),
     *                  BETA(135), BETA(136), BETA(137), BETA(138),
     *                  BETA(139), BETA(140), BETA(141),
     *                  BETA(142)/-3.04321124789039809D-04,
     *                  -2.66722723047612821D-04,
     *                  -2.27654214122819527D-04,
     *                  -1.89922611854562356D-04,
     *                  -1.55058918599093870D-04,
     *                  -1.23778240761873630D-04,
     *                  -9.62926147717644187D-05,
     *                  -7.25178327714425337D-05,
     *                  -5.22070028895633801D-05,
     *                  -3.50347750511900522D-05,
     *                  -2.06489761035551757D-05,
     *                  -8.70106096849767054D-06/
      DATA              BETA(143), BETA(144), BETA(145), BETA(146),
     *                  BETA(147), BETA(148), BETA(149),
     *                  BETA(150)/1.13698686675100290D-06,
     *                  9.16426474122778849D-06,
     *                  1.56477785428872620D-05,
     *                  2.08223629482466847D-05,
     *                  2.48923381004595156D-05,
     *                  2.80340509574146325D-05,
     *                  3.03987774629861915D-05,
     *                  3.21156731406700616D-05/
      DATA              BETA(151), BETA(152), BETA(153), BETA(154),
     *                  BETA(155), BETA(156), BETA(157), BETA(158),
     *                  BETA(159), BETA(160), BETA(161),
     *                  BETA(162)/-1.80182191963885708D-03,
     *                  -2.43402962938042533D-03,
     *                  -1.83422663549856802D-03,
     *                  -7.62204596354009765D-04,
     *                  2.39079475256927218D-04,
     *                  9.49266117176881141D-04,
     *                  1.34467449701540359D-03,
     *                  1.48457495259449178D-03,
     *                  1.44732339830617591D-03,
     *                  1.30268261285657186D-03,
     *                  1.10351597375642682D-03,
     *                  8.86047440419791759D-04/
      DATA              BETA(163), BETA(164), BETA(165), BETA(166),
     *                  BETA(167), BETA(168), BETA(169),
     *                  BETA(170)/6.73073208165665473D-04,
     *                  4.77603872856582378D-04,
     *                  3.05991926358789362D-04,
     *                  1.60315694594721630D-04,
     *                  4.00749555270613286D-05,
     *                  -5.66607461635251611D-05,
     *                  -1.32506186772982638D-04,
     *                  -1.90296187989614057D-04/
      DATA              BETA(171), BETA(172), BETA(173), BETA(174),
     *                  BETA(175), BETA(176), BETA(177), BETA(178),
     *                  BETA(179), BETA(180), BETA(181),
     *                  BETA(182)/-2.32811450376937408D-04,
     *                  -2.62628811464668841D-04,
     *                  -2.82050469867598672D-04,
     *                  -2.93081563192861167D-04,
     *                  -2.97435962176316616D-04,
     *                  -2.96557334239348078D-04,
     *                  -2.91647363312090861D-04,
     *                  -2.83696203837734166D-04,
     *                  -2.73512317095673346D-04,
     *                  -2.61750155806768580D-04,
     *                  6.38585891212050914D-03,
     *                  9.62374215806377941D-03/
      DATA              BETA(183), BETA(184), BETA(185), BETA(186),
     *                  BETA(187), BETA(188), BETA(189),
     *                  BETA(190)/7.61878061207001043D-03,
     *                  2.83219055545628054D-03,
     *                  -2.09841352012720090D-03,
     *                  -5.73826764216626498D-03,
     *                  -7.70804244495414620D-03,
     *                  -8.21011692264844401D-03,
     *                  -7.65824520346905413D-03,
     *                  -6.47209729391045177D-03/
      DATA              BETA(191), BETA(192), BETA(193), BETA(194),
     *                  BETA(195), BETA(196), BETA(197), BETA(198),
     *                  BETA(199), BETA(200), BETA(201),
     *                  BETA(202)/-4.99132412004966473D-03,
     *                  -3.45612289713133280D-03,
     *                  -2.01785580014170775D-03,
     *                  -7.59430686781961401D-04,
     *                  2.84173631523859138D-04,
     *                  1.10891667586337403D-03,
     *                  1.72901493872728771D-03,
     *                  2.16812590802684701D-03,
     *                  2.45357710494539735D-03,
     *                  2.61281821058334862D-03,
     *                  2.67141039656276912D-03,
     *                  2.65203073395980430D-03/
      DATA              BETA(203), BETA(204), BETA(205), BETA(206),
     *                  BETA(207), BETA(208), BETA(209),
     *                  BETA(210)/2.57411652877287315D-03,
     *                  2.45389126236094427D-03,
     *                  2.30460058071795494D-03,
     *                  2.13684837686712662D-03,
     *                  1.95896528478870911D-03,
     *                  1.77737008679454412D-03,
     *                  1.59690280765839059D-03,
     *                  1.42111975664438546D-03/
      DATA              GAMA(1), GAMA(2), GAMA(3), GAMA(4), GAMA(5),
     *                  GAMA(6), GAMA(7), GAMA(8), GAMA(9), GAMA(10),
     *                  GAMA(11), GAMA(12), GAMA(13),
     *                  GAMA(14)/6.29960524947436582D-01,
     *                  2.51984209978974633D-01,
     *                  1.54790300415655846D-01,
     *                  1.10713062416159013D-01,
     *                  8.57309395527394825D-02,
     *                  6.97161316958684292D-02,
     *                  5.86085671893713576D-02,
     *                  5.04698873536310685D-02,
     *                  4.42600580689154809D-02,
     *                  3.93720661543509966D-02,
     *                  3.54283195924455368D-02,
     *                  3.21818857502098231D-02,
     *                  2.94646240791157679D-02,
     *                  2.71581677112934479D-02/
      DATA              GAMA(15), GAMA(16), GAMA(17), GAMA(18),
     *                  GAMA(19), GAMA(20), GAMA(21),
     *                  GAMA(22)/2.51768272973861779D-02,
     *                  2.34570755306078891D-02,
     *                  2.19508390134907203D-02,
     *                  2.06210828235646240D-02,
     *                  1.94388240897880846D-02,
     *                  1.83810633800683158D-02,
     *                  1.74293213231963172D-02,
     *                  1.65685837786612353D-02/
      DATA              GAMA(23), GAMA(24), GAMA(25), GAMA(26),
     *                  GAMA(27), GAMA(28), GAMA(29),
     *                  GAMA(30)/1.57865285987918445D-02,
     *                  1.50729501494095594D-02,
     *                  1.44193250839954639D-02,
     *                  1.38184805735341786D-02,
     *                  1.32643378994276568D-02,
     *                  1.27517121970498651D-02,
     *                  1.22761545318762767D-02,
     *                  1.18338262398482403D-02/
      DATA              EX1, EX2, HPI, PI, THPI/3.33333333333333333D-01,
     *                  6.66666666666666667D-01,
     *                  1.57079632679489662D+00,
     *                  3.14159265358979324D+00,
     *                  4.71238898038468986D+00/
      DATA              CZERO, CONE/(0.0D0,0.0D0), (1.0D0,0.0D0)/
C     .. Executable Statements ..
C
      RFNU = 1.0D0/FNU
      TSTR = DBLE(Z)
      TSTI = DIMAG(Z)
      TEST = FNU*EXP(-ELIM)
      IF (ABS(TSTR).LT.TEST) TSTR = 0.0D0
      IF (ABS(TSTI).LT.TEST) TSTI = 0.0D0
      IF (TSTR.EQ.0.0D0 .AND. TSTI.EQ.0.0D0) THEN
         ZETA1 = DCMPLX(ELIM+ELIM+FNU,0.0D0)
         ZETA2 = DCMPLX(FNU,0.0D0)
         PHI = CONE
         ARG = CONE
         RETURN
      END IF
      ZB = DCMPLX(TSTR,TSTI)*DCMPLX(RFNU,0.0D0)
      RFNU2 = RFNU*RFNU
C     ------------------------------------------------------------------
C     COMPUTE IN THE FOURTH QUADRANT
C     ------------------------------------------------------------------
      FN13 = FNU**EX1
      FN23 = FN13*FN13
      RFN13 = DCMPLX(1.0D0/FN13,0.0D0)
      W2 = CONE - ZB*ZB
      AW2 = ABS(W2)
      IF (AW2.GT.0.25D0) THEN
C        ---------------------------------------------------------------
C        CABS(W2).GT.0.25E0
C        ---------------------------------------------------------------
         W = SQRT(W2)
         WR = DBLE(W)
         WI = DIMAG(W)
         IF (WR.LT.0.0D0) WR = 0.0D0
         IF (WI.LT.0.0D0) WI = 0.0D0
         W = DCMPLX(WR,WI)
         ZA = (CONE+W)/ZB
         ZC = LOG(ZA)
         ZCR = DBLE(ZC)
         ZCI = DIMAG(ZC)
         IF (ZCI.LT.0.0D0) ZCI = 0.0D0
         IF (ZCI.GT.HPI) ZCI = HPI
         IF (ZCR.LT.0.0D0) ZCR = 0.0D0
         ZC = DCMPLX(ZCR,ZCI)
         ZTH = (ZC-W)*DCMPLX(1.5D0,0.0D0)
         CFNU = DCMPLX(FNU,0.0D0)
         ZETA1 = ZC*CFNU
         ZETA2 = W*CFNU
         AZTH = ABS(ZTH)
         ZTHR = DBLE(ZTH)
         ZTHI = DIMAG(ZTH)
         ANG = THPI
         IF (ZTHR.LT.0.0D0 .OR. ZTHI.GE.0.0D0) THEN
            ANG = HPI
            IF (ZTHR.NE.0.0D0) THEN
               ANG = ATAN(ZTHI/ZTHR)
               IF (ZTHR.LT.0.0D0) ANG = ANG + PI
            END IF
         END IF
         PP = AZTH**EX2
         ANG = ANG*EX2
         ZETAR = PP*COS(ANG)
         ZETAI = PP*SIN(ANG)
         IF (ZETAI.LT.0.0D0) ZETAI = 0.0D0
         ZETA = DCMPLX(ZETAR,ZETAI)
         ARG = ZETA*DCMPLX(FN23,0.0D0)
         RTZTA = ZTH/ZETA
         ZA = RTZTA/W
         PHI = SQRT(ZA+ZA)*RFN13
         IF (IPMTR.NE.1) THEN
            TFN = DCMPLX(RFNU,0.0D0)/W
            RZTH = DCMPLX(RFNU,0.0D0)/ZTH
            ZC = RZTH*DCMPLX(AR(2),0.0D0)
            T2 = CONE/W2
            UP(2) = (T2*DCMPLX(C(2),0.0D0)+DCMPLX(C(3),0.0D0))*TFN
            BSUM = UP(2) + ZC
            ASUM = CZERO
            IF (RFNU.GE.TOL) THEN
               PRZTH = RZTH
               PTFN = TFN
               UP(1) = CONE
               PP = 1.0D0
               BSUMR = DBLE(BSUM)
               BSUMI = DIMAG(BSUM)
               BTOL = TOL*(ABS(BSUMR)+ABS(BSUMI))
               KS = 0
               KP1 = 2
               L = 3
               IAS = 0
               IBS = 0
               DO 100 LR = 2, 12, 2
                  LRP1 = LR + 1
C                 ------------------------------------------------------
C                 COMPUTE TWO ADDITIONAL CR, DR, AND UP FOR TWO MORE
C                 TERMS IN NEXT SUMA AND SUMB
C                 ------------------------------------------------------
                  DO 40 K = LR, LRP1
                     KS = KS + 1
                     KP1 = KP1 + 1
                     L = L + 1
                     ZA = DCMPLX(C(L),0.0D0)
                     DO 20 J = 2, KP1
                        L = L + 1
                        ZA = ZA*T2 + DCMPLX(C(L),0.0D0)
   20                CONTINUE
                     PTFN = PTFN*TFN
                     UP(KP1) = PTFN*ZA
                     CR(KS) = PRZTH*DCMPLX(BR(KS+1),0.0D0)
                     PRZTH = PRZTH*RZTH
                     DR(KS) = PRZTH*DCMPLX(AR(KS+2),0.0D0)
   40             CONTINUE
                  PP = PP*RFNU2
                  IF (IAS.NE.1) THEN
                     SUMA = UP(LRP1)
                     JU = LRP1
                     DO 60 JR = 1, LR
                        JU = JU - 1
                        SUMA = SUMA + CR(JR)*UP(JU)
   60                CONTINUE
                     ASUM = ASUM + SUMA
                     ASUMR = DBLE(ASUM)
                     ASUMI = DIMAG(ASUM)
                     TEST = ABS(ASUMR) + ABS(ASUMI)
                     IF (PP.LT.TOL .AND. TEST.LT.TOL) IAS = 1
                  END IF
                  IF (IBS.NE.1) THEN
                     SUMB = UP(LR+2) + UP(LRP1)*ZC
                     JU = LRP1
                     DO 80 JR = 1, LR
                        JU = JU - 1
                        SUMB = SUMB + DR(JR)*UP(JU)
   80                CONTINUE
                     BSUM = BSUM + SUMB
                     BSUMR = DBLE(BSUM)
                     BSUMI = DIMAG(BSUM)
                     TEST = ABS(BSUMR) + ABS(BSUMI)
                     IF (PP.LT.BTOL .AND. TEST.LT.TOL) IBS = 1
                  END IF
                  IF (IAS.EQ.1 .AND. IBS.EQ.1) GO TO 120
  100          CONTINUE
            END IF
  120       ASUM = ASUM + CONE
            BSUM = -BSUM*RFN13/RTZTA
         END IF
      ELSE
C        ---------------------------------------------------------------
C        POWER SERIES FOR CABS(W2).LE.0.25E0
C        ---------------------------------------------------------------
         K = 1
         P(1) = CONE
         SUMA = DCMPLX(GAMA(1),0.0D0)
         AP(1) = 1.0D0
         IF (AW2.GE.TOL) THEN
            DO 140 K = 2, 30
               P(K) = P(K-1)*W2
               SUMA = SUMA + P(K)*DCMPLX(GAMA(K),0.0D0)
               AP(K) = AP(K-1)*AW2
               IF (AP(K).LT.TOL) GO TO 160
  140       CONTINUE
            K = 30
         END IF
  160    KMAX = K
         ZETA = W2*SUMA
         ARG = ZETA*DCMPLX(FN23,0.0D0)
         ZA = SQRT(SUMA)
         ZETA2 = SQRT(W2)*DCMPLX(FNU,0.0D0)
         ZETA1 = ZETA2*(CONE+ZETA*ZA*DCMPLX(EX2,0.0D0))
         ZA = ZA + ZA
         PHI = SQRT(ZA)*RFN13
         IF (IPMTR.NE.1) THEN
C           ------------------------------------------------------------
C           SUM SERIES FOR ASUM AND BSUM
C           ------------------------------------------------------------
            SUMB = CZERO
            DO 180 K = 1, KMAX
               SUMB = SUMB + P(K)*DCMPLX(BETA(K),0.0D0)
  180       CONTINUE
            ASUM = CZERO
            BSUM = SUMB
            L1 = 0
            L2 = 30
            BTOL = TOL*ABS(BSUM)
            ATOL = TOL
            PP = 1.0D0
            IAS = 0
            IBS = 0
            IF (RFNU2.GE.TOL) THEN
               DO 280 IS = 2, 7
                  ATOL = ATOL/RFNU2
                  PP = PP*RFNU2
                  IF (IAS.NE.1) THEN
                     SUMA = CZERO
                     DO 200 K = 1, KMAX
                        M = L1 + K
                        SUMA = SUMA + P(K)*DCMPLX(ALFA(M),0.0D0)
                        IF (AP(K).LT.ATOL) GO TO 220
  200                CONTINUE
  220                ASUM = ASUM + SUMA*DCMPLX(PP,0.0D0)
                     IF (PP.LT.TOL) IAS = 1
                  END IF
                  IF (IBS.NE.1) THEN
                     SUMB = CZERO
                     DO 240 K = 1, KMAX
                        M = L2 + K
                        SUMB = SUMB + P(K)*DCMPLX(BETA(M),0.0D0)
                        IF (AP(K).LT.ATOL) GO TO 260
  240                CONTINUE
  260                BSUM = BSUM + SUMB*DCMPLX(PP,0.0D0)
                     IF (PP.LT.BTOL) IBS = 1
                  END IF
                  IF (IAS.EQ.1 .AND. IBS.EQ.1) THEN
                     GO TO 300
                  ELSE
                     L1 = L1 + 30
                     L2 = L2 + 30
                  END IF
  280          CONTINUE
            END IF
  300       ASUM = ASUM + CONE
            PP = RFNU*DBLE(RFN13)
            BSUM = BSUM*DCMPLX(PP,0.0D0)
         END IF
      END IF
      RETURN
      END
