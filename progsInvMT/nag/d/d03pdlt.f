      SUBROUTINE D03PDL(NEQN,NPDE,NPTS,X,U,WK,IWK,M,TS,IBAND,ITIME,XBK,
     *                  IBK,NEL,NPOLY,NV,NXI,XI,AUXINI,DINPDF,DINPJF)
C     MARK 15 RELEASE. NAG COPYRIGHT 1991.
C     ------------------------------------------------------------------
C     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C     Routine for initialisation of Chebyshev generalized
C     collocation method
C
C     PARAMETER LIST
C     ----------------
C     NEQN     Empty on entry, on exit it contains the number of
C              ODEs generated by the discretised form of the
C              PDE, given by  NPDE*NEL*(NPTL-1) + NPDE + NV.
C
C     NPDE     Number of parabolic PDEs in one space dimension
C
C     NPTS     Number of spatial grid points (= (NPTL-1)*NEL+1)
C
C     X(NPTS)  Empty array on entry. On exit this array
C              contains the mesh used in semi-discretisation
C
C     M        0,1,2 if Cartesian cylindrical or spherical polars.
C
C     U(NEQN)  Solution vector  empty on entry contains initial
C              values on exit. This array is ordered as follows.
C              U(1) - U(NPDE*NPTS) PDE solution components.
C              U(NPDE*NPTS+1) - U(NEQN) ODE components that are
C              coupled to the PDE.
C
C     WK(IWK)   Real workspace used to pass four matrices and various
C               useful vectors to the ODE function call routine
C               RESID see below for a detailed description.
C
C     TS        Starting level of time integration.
C
C     XBK(IBK)  Real array of break points  IBK = NEL+1  where
C               NEL is the number of spatial elements.
C                    XBK(1) = XLEFT
C                    XBK(I) =< XBK(I+1)  I = 1,...,NEL .
C                    XBK(IBK) = XRIGHT.
C
C     NEL       The number of spatial elements, >= 1
C
C     NPOLY     The degree of the approximating polynomial used
C               between each pair of breakpoints.
C
C     ITIME     This must be set = 1 on the call of this module
C               prior to the DASSL  package being called.
C               once DASSL has returned this routine may be called
C               with ITIME = 2 to recover the spatial mesh used
C               (this is placed in the array X(NPTS)).
C
C     NV        The number of auxilary ODEs that are coupled to
C               the PDE.
C
C     NXI       The number of coupling points at which PDE values
C               are used to define the ODEs
C
C     XI(NXI)   A vector specifying the position of these points.
C               Note that these points must be distinct from the
C               break-points .
C
C     ... Eight important parameters are passed across ...
C     ... from here in
C         COMMON /ED03PD/ NNEL, NNPTL, NNPDE,
C                         NNPTS, MM, NNV, NNXI,
C                         NVST
C         where N? = ? and
C
C     NVST      The starting point of the ode components in the
C               solution vector.
C
C
C                -------------------------------------
C                * DETAILED DESCRIPTION OF WORKSPACE *
C                -------------------------------------
C
C    The workspace WK(IWK) is used to pass arrays and vectors to
C    the routines  RESID and DO3PDR.
C
C     Size  :  IWK must be >= 2*NPTL*(NPTL+NEL+1) + 2 + NV +
C                             NPDE*((6*NPTL+7*NXI) + 8 + NPDE*NPTL)
C
C
C     STRUCTURE        NAME IN CODE   PURPOSE IN CODE IS TO HOLD
C     ----------------------------------------------------------
C     WK(1)  -  WK(I2-1)  OMEGA     Matrix Omega for mapping to coeffs
C     WK(I2) -  WK(I3-1)  DU        Matrix du for forming
C     WK(I3) -  WK(I4-1)  DUTEM     TEMPORARY WORK AREA
C     WK(I4) -  WK(I7-1)  XC        Chebyshev points in (-1,1)
C     WK(I7) -  WK(I8-1)  BETA      BETA(NPDE,4)    Array for BCs
C     WK(I8) -  WK(I9-1)  GAMMA     GAMMA(NPDE,4)   Array for BCs.
C     WK(I9) -  WK(I10-1)  DUDX     DUDX(NPDE,NPTL) Workspaces
C     WK(I10)-  WK(I11-1)   RT      R(3*NPDE,NPTL)  Used inside
C
C     Note the only real change from D03PDQ is that RT
C     has an extended size 2*NPDE*NPTL + NPDE**2 * NPTL.
C
C     WK(I11)-  WK(I12-1)   QT      Q(3*NPDE,NPTS) routine D03PDS
C     WK(I12)-  WK(I13-1)   CCR     Coeffs of Clenshaw-Curtis rule of
C                                   degree NPTL-1.
C
C     The following parts of the workspace are used
C     in semi-discretising mixed ODE/PDE problems
C
C     WK(I13)-  WK(I14-1) UI        Array UI(NPDE,NXI) used to hold the
C                                   PDE components at the coupling pts .
C     WK(I14)-  WK(I15-1) UXI       Space derivs corress to array UI.
C     WK(I15)-  WK(I16-1) RI        Flux corress to UI array
C     WK(I16)-  WK(I17-1) UTI       Time deriv corress to UI array.
C     WK(I17)-  WK(I18-1) UTXI      Space deriv of array UTI.
C     WK(I18)-  WK(I19-1) XI        Coupling points to link PDE to ODE.
C     WK(I19)-  WK(I20)   VDUM      Array of zero.
C
C     The following two parts of WK hold the mesh
C     point information used in semi-discretisation.
C
C     WK(I5) -  WK(I6-1)  XBK(IBK)  Breakpoints used by the code.
C     WK(I6) -  WK(I13)   X(NPTS)   Spatial mesh points used by the code
C
C     The arrays BETA and GAMMA are used in the formation of the
C     boundary conditions. The arrays DUDX, R and Q hold the temporary
C     variables needed in the construction of the residual of the ODE.
C     system.
C
C NOTE:
C     The mesh points and break points are stored at the end of the
C     workspace WK so that the break points may be increased or
C     decreased by a mesh modification routine. In such cases the
C     mesh points must be recomputed as they are the Chebyshev
C     points in  (-1,1) mapped onto the interval. The code to do
C     this is given by
C          DO 10 I = 1, NEL
C             H1 = XBK(I+1) - XBK(I)
C             H2 = XBK(I=1) + XBK(I)
C             DO 20 J = 1, NPTL
C                IJ = (I-1)*(NPTL -1) + J
C                X(IJ) = (XC(J)) * H1 + H2) * 0.5D0
C      20     CONTINUE
C      10  CONTINUE
C
C      Where the values of XBK and XC must be extracted from the
C      workspace and the new values of X put in the workspace.
C
C     The parameters I2,...,I20  are defined below.
C
C ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C ----------------------------------------------------------------------
C     .. Scalar Arguments ..
      DOUBLE PRECISION  TS
      INTEGER           IBAND, IBK, ITIME, IWK, M, NEL, NEQN, NPDE,
     *                  NPOLY, NPTS, NV, NXI
C     .. Array Arguments ..
      DOUBLE PRECISION  U(*), WK(IWK), X(NPTS), XBK(IBK), XI(*)
C     .. Subroutine Arguments ..
      EXTERNAL          AUXINI, DINPDF, DINPJF
C     .. Scalars in Common ..
      DOUBLE PRECISION  TO, TWOU
      INTEGER           I10, I10A, I10B, I11, I11A, I11B, I12, I13, I14,
     *                  I15, I16, I17, I18, I19, I2, I3, I4, I5, I6, I7,
     *                  I8, I9, ILOC, JTIMES, K1, K2, K3, K4, MM, NNEL,
     *                  NNNPTL, NNPDE, NNPTL, NNPTS, NNV, NNXI, NVST
C     .. Local Scalars ..
      INTEGER           I, I20, IT, IV, NPTL, NSQ
C     .. External Subroutines ..
      EXTERNAL          D03PDM
C     .. Common blocks ..
      COMMON            /AD03PD/TWOU
      COMMON            /ED03PD/NNEL, NNPTL, NNPDE, NNPTS, MM, NNV,
     *                  NNXI, NVST
      COMMON            /FD03PD/I2, I3, I4, I5, I6, I7, I8, I9, I10,
     *                  I10A, I10B, I11, I11A, I11B, I12, I13, I14, I15,
     *                  I16, I17, I18, I19
      COMMON            /GD03PD/TO, K1, K2, K3, K4, JTIMES, ILOC
      COMMON            /HD03PD/NNNPTL
C     .. Save statement ..
      SAVE              /ED03PD/, /FD03PD/, /AD03PD/, /GD03PD/, /HD03PD/
C     .. Executable Statements ..
      TO = TS
      ILOC = -1
      MM = M
      NNPDE = NPDE
      NPTL = NPOLY + 1
      NNPTS = (NPTL-1)*NEL + 1
      NNEL = NEL
      NNPTL = NPTL
      NNV = NV
      NNXI = NXI
      NVST = NPDE*NPTS + 1
      NEQN = NPDE*NPTS + NV
C
      IF (NV.GT.0) THEN
         IBAND = NEQN - 1
      ELSE
         IBAND = NPTL*NPDE - 1
      END IF
C
      X(1) = XBK(1)
      X(NPTS) = XBK(IBK)
      ITIME = 1
      I = NEL*(NPTL-1) + 1
C
C ... Form integer constants for wkspace manipulation ...
C
      NSQ = NPTL*NPTL
      IT = NPDE*NXI
      I2 = NSQ + 1
      I3 = I2 + NSQ
      I4 = I3 + NSQ
      I7 = I4 + NPTL
      I8 = I7 + NPDE*4
      I9 = I8 + NPDE*4
      I10 = I9 + NPDE*NPTL
      I11 = I10 + NPDE*NPTL*2 + NPDE*NPDE*NPTL
      I12 = I11 + NPDE*NPTL*3
      I13 = I12 + NPTL
      I14 = I13 + IT
      I15 = I14 + IT
      I16 = I15 + IT
      I17 = I16 + IT
      I18 = I17 + IT
      I19 = I18 + NXI
      I5 = I19 + NV
      I6 = I5 + NEL + 1
      I20 = I6 + NEL*(NPTL-1) + 1
      I10A = I10 + NPDE*NPTL
      I10B = I10A + NPDE*NPTL
      I11A = I11 + NPDE*NPTL
      I11B = I11A + NPDE*NPTL
      K1 = 1
      K2 = K1 + NEQN
      K3 = K2 + NEQN
      K4 = K3 + NEQN
      IV = NPDE*NPTS
      IF (NV.GT.0) THEN
         IV = NVST
         DO 20 I = I19, I5 - 1
            WK(I) = 0.D0
   20    CONTINUE
         DO 40 I = 1, NXI
            WK(I18+I-1) = XI(I)
   40    CONTINUE
      END IF
C
      CALL D03PDM(NPDE,NPTS,U,WK(I6),WK,WK(I2),WK(I5),NEL,NPTL,WK(I4),
     *            WK(I12),XBK,IBK,WK(I3),U(IV),NV,AUXINI,DINPDF,DINPJF)
C
   60 CONTINUE
      DO 80 I = 1, NPTS
         X(I) = WK(I6+I-1)
   80 CONTINUE
      NNNPTL = NPTL
      RETURN
C
      END
