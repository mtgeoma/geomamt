      SUBROUTINE D01AJX(LIMIT,LAST,MAXERR,ERMAX,ELIST,IORD,NRMAX)
C     MARK 13 RE-ISSUE. NAG COPYRIGHT 1988.
C     BASED ON QUADPACK ROUTINE  QSORT.
C     ..................................................................
C
C           PURPOSE
C              THIS ROUTINE MAINTAINS THE DESCENDING ORDERING IN THE
C              LIST OF THE LOCAL ERROR ESTIMATES RESULTING FROM THE
C              INTERVAL SUBDIVISION PROCESS. AT EACH CALL TWO ERROR
C              ESTIMATES ARE INSERTED USING THE SEQUENTIAL SEARCH
C              TOP-DOWN FOR THE LARGEST ERROR ESTIMATE AND BOTTOM-UP
C              FOR THE SMALLEST ERROR ESTIMATE.
C
C           PARAMETERS (MEANING AT OUTPUT)
C              LIMIT  - INTEGER
C                       MAXIMUM NUMBER OF ERROR ESTIMATES THE LIST CAN
C                       CONTAIN
C
C              LAST   - INTEGER
C                       NUMBER OF ERROR ESTIMATES CURRENTLY IN THE LIST
C
C              MAXERR - INTEGER
C                       MAXERR POINTS TO THE NRMAX-TH LARGEST ERROR
C                       ESTIMATE CURRENTLY IN THE LIST
C
C              ERMAX  - REAL
C                       NRMAX-TH LARGEST ERROR ESTIMATE
C                       ERMAX = ELIST(MAXERR)
C
C              ELIST  - REAL
C                       VECTOR OF DIMENSION LAST CONTAINING THE ERROR
C                       ESTIMATES
C
C              IORD   - INTEGER
C                       VECTOR OF DIMENSION LAST, THE FIRST K ELEMENTS
C                       OF WHICH CONTAIN POINTERS TO THE ERROR ESTIMATES
C                       SUCH THAT ELIST(IORD(1)),... , ELIST(IORD(K))
C                       FORM A DECREASING SEQUENCE, WITH
C                       K = LAST IF LAST.LE.(LIMIT/2+2), AND
C                       K = LIMIT+1-LAST OTHERWISE
C
C              NRMAX  - INTEGER
C                       MAXERR = IORD(NRMAX)
C
C     ..................................................................
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  ERMAX
      INTEGER           LAST, LIMIT, MAXERR, NRMAX
C     .. Array Arguments ..
      DOUBLE PRECISION  ELIST(LAST)
      INTEGER           IORD(LAST)
C     .. Local Scalars ..
      DOUBLE PRECISION  ERRMAX, ERRMIN
      INTEGER           I, IBEG, IDO, ISUCC, J, JBND, JUPBN, K
C     .. Executable Statements ..
C
C           CHECK WHETHER THE LIST CONTAINS MORE THAN TWO ERROR
C           ESTIMATES.
C
      IF (LAST.GT.2) GO TO 20
      IORD(1) = 1
      IORD(2) = 2
      GO TO 180
C
C           THIS PART OF THE ROUTINE IS ONLY EXECUTED IF, DUE TO A
C           DIFFICULT INTEGRAND, SUBDIVISION INCREASED THE ERROR
C           ESTIMATE. IN THE NORMAL CASE THE INSERT PROCEDURE SHOULD
C           START AFTER THE NRMAX-TH LARGEST ERROR ESTIMATE.
C
   20 ERRMAX = ELIST(MAXERR)
      IF (NRMAX.EQ.1) GO TO 60
      IDO = NRMAX - 1
      DO 40 I = 1, IDO
         ISUCC = IORD(NRMAX-1)
C        ***JUMP OUT OF DO-LOOP
         IF (ERRMAX.LE.ELIST(ISUCC)) GO TO 60
         IORD(NRMAX) = ISUCC
         NRMAX = NRMAX - 1
   40 CONTINUE
C
C           COMPUTE THE NUMBER OF ELEMENTS IN THE LIST TO BE MAINTAINED
C           IN DESCENDING ORDER. THIS NUMBER DEPENDS ON THE NUMBER OF
C           SUBDIVISIONS STILL ALLOWED.
C
   60 JUPBN = LAST
      IF (LAST.GT.(LIMIT/2+2)) JUPBN = LIMIT + 3 - LAST
      ERRMIN = ELIST(LAST)
C
C           INSERT ERRMAX BY TRAVERSING THE LIST TOP-DOWN, STARTING
C           COMPARISON FROM THE ELEMENT ELIST(IORD(NRMAX+1)).
C
      JBND = JUPBN - 1
      IBEG = NRMAX + 1
      IF (IBEG.GT.JBND) GO TO 100
      DO 80 I = IBEG, JBND
         ISUCC = IORD(I)
C        ***JUMP OUT OF DO-LOOP
         IF (ERRMAX.GE.ELIST(ISUCC)) GO TO 120
         IORD(I-1) = ISUCC
   80 CONTINUE
  100 IORD(JBND) = MAXERR
      IORD(JUPBN) = LAST
      GO TO 180
C
C           INSERT ERRMIN BY TRAVERSING THE LIST BOTTOM-UP.
C
  120 IORD(I-1) = MAXERR
      K = JBND
      DO 140 J = I, JBND
         ISUCC = IORD(K)
C        ***JUMP OUT OF DO-LOOP
         IF (ERRMIN.LT.ELIST(ISUCC)) GO TO 160
         IORD(K+1) = ISUCC
         K = K - 1
  140 CONTINUE
      IORD(I) = LAST
      GO TO 180
  160 IORD(K+1) = LAST
C
C           SET MAXERR AND ERMAX.
C
  180 MAXERR = IORD(NRMAX)
      ERMAX = ELIST(MAXERR)
      RETURN
      END
