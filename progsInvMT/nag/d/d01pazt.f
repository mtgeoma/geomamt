      SUBROUTINE D01PAZ(NUMVAR,NUMVRP,VERTEX,INTGND,MINORD,MAXORD,
     *                  INTVLS,ESTERR,WRKMAT,ALPHA,X,IERROR)
C     MARK 10 RELEASE. NAG COPYRIGHT 1982.
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C     .. Scalar Arguments ..
      DOUBLE PRECISION  ESTERR
      INTEGER           IERROR, MAXORD, MINORD, NUMVAR, NUMVRP
C     .. Array Arguments ..
      DOUBLE PRECISION  ALPHA(NUMVRP), INTVLS(MAXORD),
     *                  VERTEX(NUMVRP,NUMVAR), WRKMAT(NUMVRP,NUMVAR),
     *                  X(NUMVRP)
C     .. Function Arguments ..
      DOUBLE PRECISION  INTGND
      EXTERNAL          INTGND
C     .. Local Scalars ..
      DOUBLE PRECISION  H, HSQRD, INTEMP, INTSUM, INTVAL, MESHSM, ONE,
     *                  RATIO, TWO, VOLUME, ZERO
      INTEGER           D, I, J, K, KDIF, KLIM, LFAIL, NUMVRH
C     .. External Subroutines ..
      EXTERNAL          F03AAF
C     .. Intrinsic Functions ..
      INTRINSIC         ABS, DBLE
C     .. Data statements ..
      DATA              ZERO, ONE, TWO/0.0D0, 1.0D0, 2.0D0/
C     .. Executable Statements ..
C
C     PARAMETER CHECKING AND INITIALISATION
      IF (MINORD.LE.0) GO TO 20
      VOLUME = X(NUMVAR+1)
      GO TO 80
   20 DO 60 I = 1, NUMVAR
         DO 40 J = 1, NUMVAR
            WRKMAT(J,I) = VERTEX(J,I) - VERTEX(NUMVAR+1,I)
   40    CONTINUE
   60 CONTINUE
      LFAIL = 1
      IERROR = 2
      CALL F03AAF(WRKMAT,NUMVRP,NUMVAR,VOLUME,X,LFAIL)
      IF (LFAIL.GT.1) GO TO 300
      IF (VOLUME.LT.ZERO) VOLUME = -VOLUME
   80 D = MINORD
      NUMVRH = NUMVAR/2
C
C     END INITIALISATION
C     FOR EACH VALUE OF D COMPUTE REQUIRED INTEGRAND VALUES AND
C
  100 INTSUM = ZERO
      MESHSM = DBLE(NUMVAR+2*D+1)
      H = TWO/MESHSM
      IF (VOLUME.EQ.ZERO) GO TO 260
      DO 140 I = 1, NUMVAR
         ALPHA(I) = ZERO
         X(I) = VERTEX(NUMVAR+1,I)
         DO 120 J = 1, NUMVAR
            WRKMAT(J,I) = H*(VERTEX(J,I)-VERTEX(NUMVAR+1,I))
            X(I) = X(I) + WRKMAT(J,I)/TWO
  120    CONTINUE
  140 CONTINUE
      ALPHA(NUMVRP) = DBLE(NUMVAR)
  160 INTSUM = INTSUM + INTGND(NUMVAR,X)
      DO 240 J = 1, NUMVAR
         ALPHA(NUMVRP) = ALPHA(NUMVRP) + TWO
         IF (ALPHA(NUMVRP).GT.MESHSM) GO TO 200
         ALPHA(J) = ALPHA(J) + ONE
         DO 180 I = 1, NUMVAR
            X(I) = X(I) + WRKMAT(J,I)
  180    CONTINUE
         GO TO 160
  200    ALPHA(NUMVRP) = ALPHA(NUMVRP) - TWO*(ALPHA(J)+ONE)
         DO 220 I = 1, NUMVAR
            X(I) = X(I) - WRKMAT(J,I)*ALPHA(J)
  220    CONTINUE
         ALPHA(J) = ZERO
  240 CONTINUE
C
C     COMPUTE NEXT ROW OF EXTRAPOLATION TABLE
C
  260 D = D + 1
      KLIM = NUMVRH + D
      HSQRD = H*H
      INTEMP = VOLUME*INTSUM*H**NUMVAR
      MESHSM = DBLE(NUMVAR-2*NUMVRH+1)
      DO 280 K = 2, KLIM
         KDIF = K - NUMVRH - 1
         IF (KDIF.LT.1) INTVAL = ZERO
         IF (KDIF.GE.1) INTVAL = INTVLS(KDIF)
         RATIO = HSQRD/(HSQRD-(TWO/MESHSM)**2)
         INTEMP = INTEMP - RATIO*(INTEMP-INTVAL)
         MESHSM = MESHSM + TWO
  280 CONTINUE
      INTVLS(D) = INTEMP
C
C     END COMPUTATION OF APPROXIMATION OF POLYNOMIAL DEGREE 2*D-1
C
      IF (D.LT.MAXORD) GO TO 100
C
C     SET FAILURE PARAMETER AND RETURN
      IF (MAXORD.EQ.1) ESTERR = ABS(INTVLS(1))
      IF (MAXORD.GT.1) ESTERR = ABS(INTVLS(MAXORD)-INTVLS(MAXORD-1))
      IERROR = 0
      MINORD = MAXORD
      X(NUMVAR+1) = VOLUME
  300 RETURN
      END
