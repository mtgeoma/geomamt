      SUBROUTINE D02KEF(XPOINT,NXP,IC1,COEFFN,BDYVAL,K,TOL,ELAM,DELAM,
     *                  HMAX,MAXIT,MAXFUN,MONIT,REPORT,IFAIL)
C     MARK 8 RELEASE. NAG COPYRIGHT 1979.
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C     MARK 13 REVISED. USE OF MARK 12 X02 FUNCTIONS (APR 1988).
C
C     MEANING OF COMMON VARIABLES:
C     ZER,ONE,TWO,PI - CONSTANTS WITH INDICATED VALUES
C     LAMDA - CURRENT VALUE OF EIGENVALUE ESTIMATE. SET AND USED IN
C     EIGODE. USED IN AUX,OPTSC.
C     PSIGN   - SAMPLE P(X) VALUE. SET IN PRUFER, USED IN AUX.
C     MINSC - MINIMUM ALLOWED SCALEFACTOR. SET IN EIGODE, USED IN
C     OPTSC.
C     BP    - USED BY THE POLYGONAL SCALING METHOD. THE CURRENT
C     VALUE OF THE DERIVATIVE OF B(X). SET IN PRUFER, USED I
C
C     BDYVAL, COEFFN, MONIT, REPORT
C     .. Parameters ..
      CHARACTER*6       SRNAME
      PARAMETER         (SRNAME='D02KEF')
C     .. Scalar Arguments ..
      DOUBLE PRECISION  DELAM, ELAM, TOL
      INTEGER           IC1, IFAIL, K, MAXFUN, MAXIT, NXP
C     .. Array Arguments ..
      DOUBLE PRECISION  HMAX(2,NXP), XPOINT(NXP)
C     .. Subroutine Arguments ..
      EXTERNAL          BDYVAL, COEFFN, MONIT, REPORT
C     .. Scalars in Common ..
      DOUBLE PRECISION  BP, LAMDA, MINSC, ONE, PI, PSIGN, TWO, ZER
      INTEGER           JINT
C     .. Arrays in Common ..
      DOUBLE PRECISION  YL(3), YR(3)
C     .. Local Scalars ..
      DOUBLE PRECISION  D, DELAM1, DETOL, DETOLL, DETOLR, DMIN, EL0,
     *                  EL1, F0, F1, GAMMA, SIGNSI, TEMP0, TEMP1, TEMP2,
     *                  TEMP3, TEMP4, TEMP5, TEMP6, TEMP7, TEMP8, TENU,
     *                  TOL2, V3BDYL, V3BDYR, V3L, V3R, X, XL, XOLD, XR,
     *                  ZETA
      INTEGER           I, IBACK, IC, IFAIL1, IFLAG, ILOOP, IND, ISTAT1,
     *                  ISTATE, ITOP, IXP, MAXFN1, NINT, NXP1
C     .. Local Arrays ..
      DOUBLE PRECISION  C(17), F(15), V(21), VL(7)
      CHARACTER*1       P01REC(1)
C     .. External Functions ..
      DOUBLE PRECISION  D02KDS, D02KDU, X01AAF, X02AJF
      INTEGER           P01ABF
      EXTERNAL          D02KDS, D02KDU, X01AAF, X02AJF, P01ABF
C     .. External Subroutines ..
      EXTERNAL          C05AZF, D02KDT, D02KDV, D02KEZ
C     .. Intrinsic Functions ..
      INTRINSIC         ABS, MAX, MIN, SIGN, LOG, DBLE
C     .. Common blocks ..
      COMMON            /AD02KD/ZER, ONE, TWO, PI, LAMDA, PSIGN, MINSC,
     *                  BP, YL, YR, JINT
C     .. Executable Statements ..
      ZER = 0.D0
      ONE = 1.D0
      TWO = 2.D0
      PI = X01AAF(0.0D0)
      TENU = 10.D0*X02AJF()
C
C     PARAMETER CHECKS, DEFAULT VALUES ETC.
      IF (NXP.LT.4) GO TO 320
      IF (K.LT.0) GO TO 340
      IF (TOL.LE.ZER) GO TO 360
      NINT = NXP - 3
      XL = XPOINT(2)
      XR = XPOINT(NXP-1)
C     CHECK XPOINT(I) IN ASC. ORDER AND FIND POSN. OF MATCHING
C     POINT.
      DMIN = TWO*ABS(XR-XL)
      NXP1 = NXP - 1
      XOLD = XPOINT(1)
      DO 40 I = 2, NXP1
         X = XPOINT(I)
         IF (X.LT.XOLD) GO TO 380
         D = ABS((XL-X)+(XR-X))
         IF (D.GT.DMIN) GO TO 20
         IC = I
         DMIN = D
   20    XOLD = X
   40 CONTINUE
      IF ((IC1.LT.2) .OR. (IC1.GT.NXP1)) IC1 = IC
      IC = IC1
      I = NXP
      IF (XPOINT(NXP).LT.XOLD) GO TO 380
C
      MINSC = ONE/TENU
      GAMMA = ZER
      IF (XL.EQ.XR) GO TO 60
      MINSC = 4.D0/ABS(XR-XL)
      GAMMA = (XPOINT(IC)-XL)/(XR-XL)
   60 CONTINUE
C
      DO 80 I = 1, NXP
         HMAX(2,I) = ZER
   80 CONTINUE
C
      TOL2 = TOL/TWO
      DELAM1 = DELAM
      IF (DELAM1.EQ.ZER) DELAM1 = .25D0*MAX(ONE,ABS(ELAM))
C     HAVE REPORT ROUTINE SWITCHED OFF INITIALLY
      V(6) = ZER
C     INITIAL RHO VALUES AT XL,XR TAKEN AS ZERO
C     ON FIRST ITERATION
      V3L = ZER
      V3R = ZER
C
C     INITIAL VALUES OF TOLERANCE PARAMS LOG(ETA) AT XL,XR.
      DETOLL = LOG(1.D-4)
      DETOLR = DETOLL
C     INITIALIZE FAIL-FLAG FOR MISS DISTANCE CODE.
      IFAIL1 = 0
      EL1 = ELAM
      EL0 = ELAM + DELAM1
C     INITIAL EVALUATION, F=F(EL1) .
      ISTATE = 1
      LAMDA = EL1
      IBACK = 1
      GO TO 520
  100 IF (IFAIL1.GT.0) GO TO 460
      F1 = F(1)
C     ENTER BRACKETING LOOP.
      IF (F1.EQ.ZER) GO TO 180
C     THROUGHOUT THE ROOTFINDING, MAINTAIN EL1,EL0 AS TWO MOST
C     RECENT
C     APPROXIMATIONS, WITH ABS(F(EL0)).GE.ABS(F(EL1))
C
      IBACK = 2
      LAMDA = EL0
      ILOOP = 0
  120 ILOOP = ILOOP + 1
      GO TO 520
  140 IF (IFAIL1.GT.0) GO TO 440
      EL0 = LAMDA
      F0 = F(1)
      IF (ABS(F0).GT.ABS(F1)) GO TO 160
      EL0 = EL1
      F0 = F1
      EL1 = LAMDA
      F1 = F(1)
  160 IF (F1.EQ.ZER) GO TO 180
      IF (F0*F1.LT.ZER) GO TO 200
      LAMDA = EL1 - TWO*(EL0-EL1)
      IF (ILOOP.LE.8) GO TO 120
C     HERE HAVE FAILED TO BRACKET ROOT AFTER 10 EVALUATIONS
      IFAIL1 = 5
      GO TO 440
C     ON FINDING FMISS EXACTLY 0 ON
C     1ST EVAL OR WHEN BRACKETING
  180 EL0 = EL1
      GO TO 280
C     ROOT BETWEEN EL0 AND EL1..  START CALLING ROOTFINDER
  200 IFLAG = 1
      ISTATE = 2
      IBACK = 3
      IND = -1
      C(1) = F0
  220 CALL C05AZF(EL1,EL0,F1,TOL2,0,C,IND,IFLAG)
      IF (IND.EQ.0) GO TO 260
      IF (IND.NE.4 .OR. IFLAG.NE.1) GO TO 420
      LAMDA = EL1
      GO TO 520
  240 IF (IFAIL1.GT.0) GO TO 440
      F1 = F(1)
      GO TO 220
C     ON EXIT FROM LOOP TEST FAILURE PARAM OF C05AZF
  260 IF (IFLAG.NE.0) GO TO 420
C     SWITCH REPORT ROUTINE ON AND
C     REPEAT INTEGRATION
  280 V(6) = ONE
      LAMDA = EL1
      IBACK = 4
      GO TO 520
  300 IF (IFAIL1.GT.0) GO TO 460
      IFAIL1 = 0
      GO TO 440
C     ***
C     ERROR PROCESSING FOR MAIN ROUTINE
C     ***
C     PARAMETER ERROR NXP,K OR TOL
  320 HMAX(2,1) = 1.D0
      GO TO 400
  340 HMAX(2,1) = 2.D0
      GO TO 400
  360 HMAX(2,1) = 3.D0
      GO TO 400
  380 HMAX(2,1) = 4.D0
      HMAX(2,2) = DBLE(I)
  400 IFAIL1 = 1
      HMAX(2,2) = ZER
      IF (HMAX(2,1).EQ.4.D0) HMAX(2,2) = DBLE(I)
      GO TO 500
  420 IFAIL1 = 12
      IF (IFLAG.EQ.4) IFAIL1 = 10
      IF (IFLAG.EQ.5) IFAIL1 = 9
  440 ELAM = EL1
      DELAM = ABS(F(2)) + ABS(EL0-EL1)
  460 HMAX(2,1) = ZER
      HMAX(2,2) = ZER
      IF (IFAIL1.EQ.0) GO TO 500
      IF (IFAIL1.EQ.5) DELAM = EL0 - EL1
      IF (IFAIL1.NE.11) GO TO 480
      HMAX(2,1) = TEMP1
      HMAX(2,2) = TEMP2
  480 IF (IFAIL1.NE.12) GO TO 500
      HMAX(2,1) = DBLE(IFLAG)
      HMAX(2,2) = DBLE(IND)
  500 IFAIL = P01ABF(IFAIL,IFAIL1,SRNAME,0,P01REC)
      RETURN
C     ***
C     CODE TO COMPUTE MISS DISTANCE.
C     ***
  520 F(3) = ZER
  540 F(3) = F(3) + ONE
      IF (IFAIL1.LT.0) GO TO 960
      MAXIT = MAXIT - 1
      MAXFN1 = MAXFUN
      F(1) = ZER
      F(2) = ZER
      DO 560 I = 4, 15
         F(I) = ZER
  560 CONTINUE
      HMAX(1,NXP-1) = ZER
      HMAX(1,NXP) = ZER
      YL(3) = ZER
      YR(3) = ZER
      CALL BDYVAL(XL,XR,LAMDA,YL,YR)
C     SET PARAMETERS APPLICABLE TO SHOOTING EITHER DIRECTION.
      V(7) = MAX(ONE,ABS(LAMDA))*TOL2
C     SET PARAMS FOR SHOOTING C FROM XL.
      JINT = 1
      V(1) = D02KDU(XL,COEFFN)
      CALL D02KDT(V,YL(1),YL(2),-1,IFAIL1)
      IF (IFAIL1.NE.0) GO TO 900
      V3BDYL = V(3)
      V(3) = V3L
      V(4) = ZER
      V(5) = DETOLL + V(3)
      X = XL
      IF (V(6).NE.ZER) CALL REPORT(X,V,0)
      IF (IC.LT.3) GO TO 600
      DO 580 IXP = 3, IC
         JINT = IXP - 2
         CALL D02KEZ(X,XPOINT(IXP),V,COEFFN,MAXFN1,HMAX(1,JINT)
     *               ,REPORT,IFAIL1)
         F(5) = F(5) + V(15)
         F(6) = F(6) + V(16)
         F(7) = F(7) + V(10)
         IF (IFAIL1.NE.0) GO TO 760
  580 CONTINUE
C
  600 DO 620 I = 1, 7
         VL(I) = V(I)
  620 CONTINUE
C
C     SET PARAMS FOR SHOOTING C FROM XR.
      JINT = NINT
      V(1) = D02KDU(XR,COEFFN)
      CALL D02KDT(V,YR(1),YR(2),K,IFAIL1)
      IF (IFAIL1.NE.0) GO TO 920
      V3BDYR = V(3)
      V(3) = V3R
      V(4) = ZER
      V(5) = DETOLR + V(3)
      X = XR
      IF (V(6).NE.ZER) CALL REPORT(X,V,NINT+1)
      ITOP = NXP - IC
      IF (2.GT.ITOP) GO TO 660
      DO 640 I = 2, ITOP
         IXP = NXP - I
         JINT = IXP - 1
         CALL D02KEZ(X,XPOINT(IXP),V,COEFFN,MAXFN1,HMAX(1,JINT)
     *               ,REPORT,IFAIL1)
         F(5) = F(5) + V(15)
         F(6) = F(6) + V(16)
         F(7) = F(7) + V(10)
         IF (IFAIL1.NE.0) GO TO 760
  640 CONTINUE
C
  660 CONTINUE
C     HAVE NOW SHOT C FROM XL, RESULTS IN VL, C FROM XR, RESULTS IN
C     V.
C     CONVERT TO SAME SCALE AND COMPUTE MISS-DISTANCE.
      CALL D02KDV(VL,V(1),IFAIL1)
      F(1) = (VL(2)-V(2))/(PI+PI)
C     COMPUTE ERROR ESTIMATE INFO.
      TEMP0 = VL(5) - VL(3)
      TEMP1 = V(5) - V(3)
      TEMP2 = D02KDS(-ABS(TEMP0-TEMP1))
      IF (GAMMA.EQ.ZER .OR. (GAMMA.NE.ONE .AND. TEMP0.LT.TEMP1))
     *    GO TO 680
      TEMP3 = TEMP0
      TEMP4 = ONE
      TEMP5 = TEMP2
      GO TO 700
  680 TEMP3 = TEMP1
      TEMP4 = TEMP2
      TEMP5 = ONE
  700 TEMP6 = TEMP4*GAMMA + TEMP5*(ONE-GAMMA)
      TEMP7 = TEMP4*VL(4) - TEMP5*V(4)
      IF (TEMP7.EQ.0.0D0) TEMP7 = TENU
      TEMP7 = SIGN(MAX(ABS(TEMP7),TENU*ABS(TEMP6)),TEMP7)
      F(2) = -TEMP7/TEMP6
      ZETA = ABS(F(2)*V(7))
      F(2) = ONE/F(2)
      TEMP8 = -TEMP3 - LOG(ABS(TEMP7)/TWO)
      V3L = V3L + TEMP8 - VL(3)
      V3R = V3R + TEMP8 - V(3)
      SIGNSI = SIGN(ONE,TEMP7)
      HMAX(1,NXP-1) = -D02KDS(-V3BDYL+V3L)*SIGNSI
      HMAX(1,NXP) = D02KDS(V3R-V3BDYR)*SIGNSI
      TEMP2 = TEMP3 + LOG(.75D0*TEMP6*MAX(ZETA,1.D-2))
C     DETOL=IDEALISED VALUE OF V(5) FOR NEXT ITERATION)
      DETOL = TEMP2 + TEMP8
C     BUT INTRODUCE CAUTION
      DETOLL = MIN(DETOLL+TWO,DETOL-V3L)
      DETOLR = MIN(DETOLR+TWO,DETOL-V3R)
C
      IFAIL1 = 0
      IF (MAXIT.EQ.0) IFAIL1 = -1
      ISTAT1 = ISTATE
  720 CONTINUE
C
      F(4) = MAXFUN - MAXFN1
      CALL MONIT(MAXIT,ISTAT1,LAMDA,F)
      IF (IFAIL1.GT.0) GO TO 740
      IF (ZETA.LT.ONE) GO TO 540
  740 GO TO (100,140,240,300) IBACK
  760 GO TO (780,800,800,820,840,780,840,860,780)
     *       IFAIL1
  780 IFAIL1 = 11
      TEMP1 = DBLE(IFAIL1)
      TEMP2 = V(18)
      GO TO 880
  800 IFAIL1 = 8
      GO TO 880
  820 IFAIL1 = 7
      GO TO 880
  840 IFAIL1 = 6
      GO TO 880
  860 IFAIL1 = 3
  880 ISTAT1 = -IFAIL1
      F(9) = JINT
      F(10) = X
      F(11) = V(1)
      F(12) = V(2)
      F(13) = V(3)
      F(14) = V(18)
      F(15) = V(11)
      GO TO 720
C     BDYVAL ERROR AT XL
  900 F(9) = ZER
      F(10) = XL
      GO TO 940
C     BDYVAL ERROR AT XR
  920 F(9) = DBLE(NXP-2)
      F(10) = XR
  940 IFAIL1 = 2
      ISTAT1 = -IFAIL1
      GO TO 720
C
C     MAXIT ERROR
  960 IFAIL1 = 4
      GO TO 740
      END
