      SUBROUTINE D01GBZ(NUMVAR,A,B,MINPTS,MAXPTS,FUNCTN,RELEPS,RELERR,
     *                  CNTLIM,COUNTR,LOWER,POINTR,BMNUSA,WIDTH,X,
     *                  LENWRK,WRKSTR,FINVAL,IERROR)
C     MARK 10 RELEASE. NAG COPYRIGHT 1982.
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C     MARK 13 REVISED. USE OF MARK 12 X02 FUNCTIONS (APR 1988).
C     .. Scalar Arguments ..
      DOUBLE PRECISION  FINVAL, RELEPS, RELERR
      INTEGER           IERROR, LENWRK, MAXPTS, MINPTS, NUMVAR
C     .. Array Arguments ..
      DOUBLE PRECISION  A(NUMVAR), B(NUMVAR), BMNUSA(NUMVAR),
     *                  CNTLIM(NUMVAR), COUNTR(NUMVAR), LOWER(NUMVAR),
     *                  POINTR(NUMVAR), WIDTH(NUMVAR), WRKSTR(LENWRK),
     *                  X(NUMVAR)
C     .. Function Arguments ..
      DOUBLE PRECISION  FUNCTN
      EXTERNAL          FUNCTN
C     .. Local Scalars ..
      DOUBLE PRECISION  DNMVAR, EFACTR, FUNVAL, HALF, INTEST, ONE,
     *                  QNCRSE, RGNVOL, RLSMPM, RLSMPT, SFACTR, SMALL,
     *                  SMSQRS, SUMFUN, SUMWID, TVALSQ, TVARIN, TVARSQ,
     *                  TWIDTH, TWO, VAREST, VARPRD, VARSQR, VOLUME,
     *                  VRSQRJ, WIDTHJ, ZERO
      INTEGER           I, INDEX1, INDEX2, INDEX3, INRVLS, INTCLS,
     *                  ITRPTS, J, K, KLOWER, KUPPER, L, MINCNT, MINSMP,
     *                  NEWCNT, POINT, SAMPTS, SBRGNS
C     .. External Functions ..
      DOUBLE PRECISION  G05CAF, X02AJF
      EXTERNAL          G05CAF, X02AJF
C     .. Intrinsic Functions ..
      INTRINSIC         ABS, MAX, MIN, DBLE, SQRT, INT, MIN1
C     .. Data statements ..
      DATA              ZERO, ONE, TWO/0.0D0, 1.0D0, 2.0D0/
C     .. Executable Statements ..
      INTCLS = 0
      MINSMP = 2
C
C     ***** CONSTANTS AND COUNTERS
C
      IERROR = 0
      HALF = ONE/TWO
      SMALL = X02AJF()
      EFACTR = TWO
      SAMPTS = MINSMP
      IF (LENWRK.EQ.3*NUMVAR) SAMPTS = MAXPTS/2
      ITRPTS = SAMPTS*2
      VAREST = ZERO
      VOLUME = ONE
      DNMVAR = ONE/DBLE(NUMVAR)
      RLSMPT = DBLE(SAMPTS)
      RLSMPM = RLSMPT - 1.0D0
      IF (MINPTS.GE.0) GO TO 40
C
C     ***** INTIALISE INTERVALS FOR CONTINUATION CALLS
C
      VAREST = WRKSTR(LENWRK)
      DO 20 I = 1, NUMVAR
         BMNUSA(I) = B(I) - A(I)
         VOLUME = VOLUME*BMNUSA(I)
         ITRPTS = ITRPTS*INT(CNTLIM(I))
   20 CONTINUE
      MINCNT = INT(WRKSTR(LENWRK-1))
      SBRGNS = ITRPTS/(2*SAMPTS)
      IF (ITRPTS.LE.MAXPTS) GO TO 180
C
C     ***** INTIALISE INTERVALS FOR FIRST CALL
C
   40 DO 60 J = 1, NUMVAR
         CNTLIM(J) = ONE
         BMNUSA(J) = B(J) - A(J)
         VOLUME = VOLUME*BMNUSA(J)
   60 CONTINUE
      INRVLS = NUMVAR
   80 DO 100 I = 1, NUMVAR
         IF (INRVLS+1.GT.LENWRK/3) GO TO 120
         ITRPTS = (ITRPTS*INT(CNTLIM(I)+ONE))/INT(CNTLIM(I))
         INRVLS = INRVLS + 1
         CNTLIM(I) = CNTLIM(I) + ONE
         IF (ITRPTS.GT.MINPTS/2) GO TO 120
  100 CONTINUE
      GO TO 80
  120 INDEX1 = 0
      DO 160 J = 1, NUMVAR
         NEWCNT = INT(CNTLIM(J))
         WIDTHJ = ONE/CNTLIM(J)
         DO 140 I = 1, NEWCNT
            INDEX1 = INDEX1 + 1
            WRKSTR(INDEX1) = WIDTHJ
  140    CONTINUE
  160 CONTINUE
      MINCNT = INT(MIN(TWO,CNTLIM(NUMVAR)))
      INRVLS = NUMVAR*MINCNT
      SBRGNS = ITRPTS/(2*SAMPTS)
      FINVAL = ZERO
      RELERR = ZERO
C
C     ***** ENTRY AND REENTRY FOR ITERATIONS
C
  180 IF (VOLUME.EQ.ZERO) GO TO 700
      INTCLS = INTCLS + ITRPTS
      INRVLS = 0
      DO 200 I = 1, NUMVAR
         POINTR(I) = DBLE(INRVLS)
         COUNTR(I) = 1.0D0
         X(I) = (A(I)+B(I))/TWO
         WIDTH(I) = WRKSTR(INRVLS+1)
         LOWER(I) = ZERO
         INRVLS = INRVLS + INT(CNTLIM(I))
  200 CONTINUE
C
C     *****INTIALISE INTEGRATION LOOP
C
      DO 280 I = 1, NUMVAR
         VARSQR = ZERO
         IF (CNTLIM(I).GT.ONE .OR. SAMPTS.GT.MINSMP) GO TO 240
         SUMFUN = ZERO
         SMSQRS = ZERO
         INTCLS = INTCLS + SAMPTS*2
         DO 220 J = 1, SAMPTS
            X(I) = A(I) + BMNUSA(I)*G05CAF(ONE)
            FUNVAL = FUNCTN(NUMVAR,X)
            X(I) = TWO*(A(I)+BMNUSA(I)*HALF) - X(I)
            FUNVAL = HALF*(FUNVAL+FUNCTN(NUMVAR,X))
            SUMFUN = SUMFUN + FUNVAL
            SMSQRS = SMSQRS + FUNVAL*FUNVAL
  220    CONTINUE
         VARSQR = (SMSQRS*RLSMPT-SUMFUN*SUMFUN)*(VOLUME/RLSMPT)**2
         X(I) = (A(I)+B(I))/TWO
  240    KLOWER = INRVLS + 1 + INT(POINTR(I))
         KUPPER = INRVLS + INT(POINTR(I)+CNTLIM(I))
         DO 260 K = KLOWER, KUPPER
            WRKSTR(K) = ZERO
            INDEX3 = INRVLS + K
            WRKSTR(INDEX3) = VARSQR
  260    CONTINUE
  280 CONTINUE
C
C     ***** BEGIN MAIN LOOP
C
  300 RGNVOL = VOLUME
      DO 320 I = 1, NUMVAR
         RGNVOL = RGNVOL*WIDTH(I)
  320 CONTINUE
      SUMFUN = ZERO
      SMSQRS = ZERO
      DO 380 L = 1, SAMPTS
         DO 340 I = 1, NUMVAR
            X(I) = A(I) + BMNUSA(I)*(LOWER(I)+G05CAF(ONE)*WIDTH(I))
  340    CONTINUE
         FUNVAL = FUNCTN(NUMVAR,X)
         DO 360 I = 1, NUMVAR
            X(I) = TWO*(A(I)+BMNUSA(I)*(LOWER(I)+HALF*WIDTH(I))) - X(I)
  360    CONTINUE
         FUNVAL = HALF*(FUNVAL+FUNCTN(NUMVAR,X))
         SUMFUN = SUMFUN + FUNVAL
         SMSQRS = SMSQRS + FUNVAL*FUNVAL
  380 CONTINUE
      INTEST = RGNVOL*SUMFUN/RLSMPT
      VARSQR = (SMSQRS*RLSMPT-SUMFUN*SUMFUN)*(RGNVOL/RLSMPT)**2
      DO 400 I = 1, NUMVAR
         INDEX2 = INT(POINTR(I)+COUNTR(I)) + INRVLS
         WRKSTR(INDEX2) = WRKSTR(INDEX2) + INTEST
         INDEX3 = INDEX2 + INRVLS
         WRKSTR(INDEX3) = WRKSTR(INDEX3) + VARSQR
  400 CONTINUE
      DO 440 I = 1, NUMVAR
         IF (COUNTR(I).EQ.CNTLIM(I)) GO TO 420
         COUNTR(I) = COUNTR(I) + ONE
         LOWER(I) = LOWER(I) + WIDTH(I)
         INDEX1 = INT(POINTR(I)+COUNTR(I))
         WIDTH(I) = WRKSTR(INDEX1)
         GO TO 300
  420    COUNTR(I) = 1.0D0
         LOWER(I) = ZERO
         INDEX1 = INT(POINTR(I)+ONE)
         WIDTH(I) = WRKSTR(INDEX1)
  440 CONTINUE
C
C     ***** END MAIN LOOP
C
      NEWCNT = INT(CNTLIM(1))
      INTEST = ZERO
      VARSQR = ZERO
      DO 460 I = 1, NEWCNT
         INDEX2 = INRVLS + I
         INTEST = INTEST + WRKSTR(INDEX2)
         INDEX3 = INDEX2 + INRVLS
         VARSQR = VARSQR + WRKSTR(INDEX3)
  460 CONTINUE
      VARSQR = VARSQR/RLSMPM
      VARPRD = VAREST*VARSQR
      FINVAL = (INTEST+FINVAL*VARPRD)/(ONE+VARPRD)
      VARSQR = MAX(VARSQR,ZERO)
      RELERR = EFACTR*SQRT(VARSQR/(VARPRD+ONE))/MAX(SMALL,ABS(FINVAL))
      IF (RELERR.GT.ONE) RELERR = ONE
      VARSQR = MAX(VARSQR,SMALL)
      VAREST = (ONE+VARPRD)/VARSQR
C
C     ***** CHECK IF ACCURACY REACHED
C
      IF (RELERR.LT.RELEPS .AND. INTCLS.GT.MINPTS) GO TO 700
C
C     ***** RECOMPUTE INTERVAL SIZES
C
      TVARIN = ONE
      DO 520 I = 1, NUMVAR
         TWIDTH = ZERO
         TVARSQ = ZERO
         TVALSQ = ZERO
         NEWCNT = INT(CNTLIM(I))
         DO 480 J = 1, NEWCNT
            INDEX1 = INT(POINTR(I)) + J
            WIDTHJ = WRKSTR(INDEX1)
            INDEX2 = INDEX1 + INRVLS
            TVALSQ = TVALSQ + WRKSTR(INDEX2)*WRKSTR(INDEX2)/WIDTHJ
            INDEX3 = INDEX2 + INRVLS
            VRSQRJ = MAX(WRKSTR(INDEX3),SMALL/CNTLIM(I))
            TVARSQ = TVARSQ + VRSQRJ/WIDTHJ
            SFACTR = SQRT(RLSMPM*VARSQR/(VRSQRJ*CNTLIM(I)))
            SFACTR = MAX(HALF,MIN(TWO,SFACTR))
            WIDTHJ = WIDTHJ*SFACTR
            WRKSTR(INDEX1) = WIDTHJ
            TWIDTH = TWIDTH + WIDTHJ
  480    CONTINUE
         WIDTH(I) = MAX(SMALL,TVALSQ+TVARSQ-INTEST*INTEST)
         WIDTH(I) = SQRT(WIDTH(I))/CNTLIM(I)
         TVARIN = TVARIN*WIDTH(I)**DNMVAR
         DO 500 J = 1, NEWCNT
            INDEX1 = INT(POINTR(I)) + J
            WRKSTR(INDEX1) = WRKSTR(INDEX1)/TWIDTH
            INDEX2 = INDEX1 + INRVLS
            WRKSTR(INDEX2) = WRKSTR(INDEX1)
  500    CONTINUE
  520 CONTINUE
C
C     ***** RECOMPUTE INTERVAL NUMBERS
C
      SFACTR = MIN(TWO,DBLE(MAXPTS-INTCLS)/DBLE(ITRPTS))
      QNCRSE = SFACTR/TVARIN
      SBRGNS = INT(SFACTR*DBLE(SBRGNS))
      IF (2*SAMPTS*SBRGNS.GT.MAXPTS-INTCLS)
     *    SBRGNS = INT(SFACTR*DBLE(ITRPTS/(2*SAMPTS)))
      IF (2*SAMPTS*SBRGNS.LT.ITRPTS) GO TO 680
  540 POINT = 0
      ITRPTS = 1
      DO 560 I = 1, NUMVAR
         SFACTR = MAX(HALF,MIN(TWO,QNCRSE*WIDTH(I)))
         NEWCNT = MAX(MINCNT,INT(CNTLIM(I)*SFACTR))
         POINT = POINT + NEWCNT
         ITRPTS = ITRPTS*NEWCNT
         COUNTR(I) = NEWCNT
  560 CONTINUE
      IF (SBRGNS.GE.ITRPTS) GO TO 580
      QNCRSE = QNCRSE*(DBLE(SBRGNS)/DBLE(ITRPTS))**DNMVAR
      GO TO 540
  580 IF (3*POINT.LE.LENWRK) GO TO 600
      QNCRSE = QNCRSE*(DBLE(LENWRK)/DBLE(3*POINT))**DNMVAR
      GO TO 540
C
C     ***** COMBINE SIZES AND NUMBERS INTO NEW INTERVALS
C
  600 POINT = 0
      ITRPTS = ITRPTS*SAMPTS*2
      DO 660 I = 1, NUMVAR
         NEWCNT = INT(COUNTR(I))
         SUMWID = ONE
         DO 640 J = 1, NEWCNT
            KLOWER = INT(SUMWID)
            INDEX2 = INRVLS + INT(POINTR(I)) + KLOWER - 1
            WIDTHJ = (DBLE(KLOWER)-SUMWID)*WRKSTR(INDEX2+1)
            SUMWID = ONE + DBLE(J)*CNTLIM(I)/COUNTR(I)
            KUPPER = INT(SUMWID)
            IF (SUMWID.EQ.DBLE(KUPPER)) KUPPER = KUPPER - 1
            DO 620 K = KLOWER, KUPPER
               INDEX2 = INDEX2 + 1
               WIDTHJ = WIDTHJ + WRKSTR(INDEX2)
  620       CONTINUE
            INDEX1 = POINT + J
            WRKSTR(INDEX1) = WIDTHJ - (DBLE(KUPPER+1)-SUMWID)
     *                       *WRKSTR(INDEX2)
  640    CONTINUE
         POINT = POINT + NEWCNT
         CNTLIM(I) = DBLE(NEWCNT)
  660 CONTINUE
      GO TO 180
C
C     *** FAILURE TO ACHIEVE REQUESTED ACCURACY BECAUSE MAXPTS TOO SMALL
C
  680 IERROR = 2
C
C     ***** SAVE INFORMATION NEEDED FOR SUBSEQUENT CALLS
C
  700 WRKSTR(LENWRK) = VAREST
      WRKSTR(LENWRK-1) = DBLE(MINCNT)
      MINPTS = INTCLS
      RETURN
      END
