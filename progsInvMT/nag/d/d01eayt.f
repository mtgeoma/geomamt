      SUBROUTINE D01EAY(DVFLAG,SBRGNS,POINTR,MXRGNS,NDIM,NFUN,PONTRS,
     *                  DVAXES,RGNERS,ERRORS,VALUES,FINEST,ABSEST,
     *                  DIVAXN,INTSGN)
C     MARK 12 RELEASE. NAG COPYRIGHT 1986.
C
C     SUBROUTINE FOR STORING BASIC RULE RESULTS IN PARTIALLY ORDERED
C     LIST
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  INTSGN
      INTEGER           DIVAXN, DVFLAG, MXRGNS, NDIM, NFUN, POINTR,
     *                  SBRGNS
C     .. Array Arguments ..
      DOUBLE PRECISION  ABSEST(NFUN), DVAXES(MXRGNS),
     *                  ERRORS(NFUN,MXRGNS), FINEST(NFUN),
     *                  PONTRS(MXRGNS), RGNERS(MXRGNS),
     *                  VALUES(NFUN,MXRGNS)
C     .. Local Scalars ..
      INTEGER           J, SUBRGN, SUBTMP, TPONTP, TPONTR
C     .. Intrinsic Functions ..
      INTRINSIC         MAX
C     .. Executable Statements ..
      RGNERS(POINTR) = 0.0D0
      DO 20 J = 1, NFUN
         RGNERS(POINTR) = MAX(RGNERS(POINTR),ERRORS(J,POINTR))
   20 CONTINUE
      DVAXES(POINTR) = DIVAXN
      IF (DVFLAG.NE.2) THEN
C
C        DETERMINE THE POSITION IN THE PARIALLY ORDERED LIST OF
C        THE SUBREGION WHICH REPLACES MOST RECENTLY DIVIDED SUBREGION
C
         SUBRGN = 1
   40    SUBTMP = 2*SUBRGN
         IF (SUBTMP.GT.SBRGNS) GO TO 80
         TPONTR = PONTRS(SUBTMP)
         IF (SUBTMP.NE.SBRGNS) THEN
            TPONTP = PONTRS(SUBTMP+1)
            IF (RGNERS(TPONTR).LT.RGNERS(TPONTP)) THEN
               SUBTMP = SUBTMP + 1
               TPONTR = TPONTP
            END IF
         END IF
         IF (RGNERS(POINTR).GE.RGNERS(TPONTR)) GO TO 80
         PONTRS(SUBRGN) = TPONTR
         SUBRGN = SUBTMP
         GO TO 40
      END IF
C
C     WHEN WORKING STORAGE IS NOT USED UP, DETERMINE THE
C     POSITION IN THE PARTIALLY ORDERED LIST FOR THE DESCRIPTION
C     OF OTHER PORTION OF MOST RECENTLY DIVIDED SUBREGION
C
      SUBRGN = SBRGNS
   60 SUBTMP = SUBRGN/2
      IF (SUBTMP.GT.1) THEN
         TPONTR = PONTRS(SUBTMP)
         IF (RGNERS(POINTR).GT.RGNERS(TPONTR)) THEN
            PONTRS(SUBRGN) = TPONTR
            SUBRGN = SUBTMP
            GO TO 60
         END IF
      END IF
   80 PONTRS(SUBRGN) = POINTR
      RETURN
      END
