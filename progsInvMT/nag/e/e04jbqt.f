      SUBROUTINE E04JBQ(N,SFUN,EPS,T,ETA,SFTBND,XLAMDA,P,GTP,X,F,ALPHA,
     *                  G,NFTOTL,IFLAG,IW,LIW,W,LW)
C
C     MARK 6 RELEASE NAG COPYRIGHT 1977
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C
C     **************************************************************
C
C     E04JBQ (LINDIF) FINDS AN APPROXIMATION ALPHA TO THE POINT AT
C     WHICH THE FUNCTION F(X + ALPHA*P) ATTAINS ITS MINIMUM VALUE
C     ALONG THE DIRECTION P. THE METHOD USED IS THAT OF SUCCESSIVE
C     QUADRATIC INTERPOLATION WITH SAFEGUARDS, DESCRIBED IN
C     D.N.A.C. REPORT NO. 37. NOTE THAT ONLY FUNCTION VALUES ARE
C     CALCULATED. E04JBQ CALLS SUBROUTINE E04ABZ TO GIVE THE
C     STEP-LENGTH TO THE NEXT POINT AT EACH STAGE IN THE
C     CALCULATION. THERE IS AN ALTERNATIVE LINEAR SEARCH CALLED
C     E04LBS IN WHICH BOTH FUNCTION AND GRADIENT VALUES ARE
C     CALCULATED. E04JBQ MAY BE USED WHEN THE GRADIENT VECTOR IS NOT
C     AVAILABLE, OR WHEN IT IS EXPENSIVE TO COMPUTE COMPARED WITH
C     THE FUNCTION VALUE. IF THE EVALUATION OF G TAKES MORE THAN
C     ABOUT FOUR TIMES AS LONG AS ONE EVALUATION OF F, E04JBQ WILL
C     USUALLY BE PREFERABLE. IF IN DOUBT USE SUBROUTINE E04LBS AS IT
C     IS SLIGHTLY MORE ROBUST. THE PARAMETER LISTS OF E04JBQ AND
C     E04LBS ARE THE SAME, AND CONSEQUENTLY THEY ARE EASILY
C     INTERCHANGED. THE SUBROUTINE E04LBS GIVES A NEW GRADIENT
C     VECTOR, THE SUBROUTINE E04JBQ DOES NOT. IF IFLAG = 0 OR 1,
C     THEN E04LBS HAS BEEN USED AND THE GRADIENT VECTOR IS IN G. IF
C     IFLAG = 2 OR 3, THEN E04JBQ HAS BEEN USED. A NEGATIVE VALUE OF
C     IFLAG INDICATES THAT THE USER WISHES TO TERMINATE THE
C     OPTIMIZATION. THE LENGTH OF THE WORKSPACE VECTOR W SHOULD BE
C     AT LEAST 2*N. LW SHOULD BE SET TO THE ACTUAL LENGTH OF W.
C
C     PHILIP E. GILL, WALTER MURRAY, SUSAN M. PICKEN, MARGARET H.
C     WRIGHT AND ENID M. R. LONG, D.N.A.C., NATIONAL PHYSICAL
C     LABORATORY, ENGLAND
C
C     **************************************************************
C
C     SFUN
C     .. Scalar Arguments ..
      DOUBLE PRECISION  ALPHA, EPS, ETA, F, GTP, SFTBND, T, XLAMDA
      INTEGER           IFLAG, LIW, LW, N, NFTOTL
C     .. Array Arguments ..
      DOUBLE PRECISION  G(N), P(N), W(LW), X(N)
      INTEGER           IW(LIW)
C     .. Subroutine Arguments ..
      EXTERNAL          SFUN
C     .. Local Scalars ..
      DOUBLE PRECISION  A, B, B1, D, E, FA, FMIN, FU, FV, FW, GTEST1,
     *                  GTEST2, GU, OLDF, R, RR, SCXBD, SS, TOL, U,
     *                  XMIN, XV, XW
      INTEGER           I, ILOC, ITEST, ITX, LTG, LTX, NUMF
C     .. External Subroutines ..
      EXTERNAL          E04ABZ
C     .. Executable Statements ..
      LTX = 1
      LTG = LTX + N
      NUMF = 0
      U = ALPHA
      FU = F
      FMIN = F
      GU = GTP
      ILOC = 1
   20 CALL E04ABZ(EPS,T,ETA,SFTBND,XLAMDA,U,FU,GU,XMIN,FMIN,XW,FW,XV,FV,
     *            A,FA,B,OLDF,B1,SCXBD,E,D,RR,SS,GTEST1,GTEST2,TOL,ILOC,
     *            ITEST)
C
C     IF ITEST = 1, THE ALGORITHM REQUIRES THE FUNCTION VALUE TO BE
C     CALCULATED.
C
      IF (ITEST.NE.1) GO TO 60
      R = XMIN + U
      ITX = LTX
      DO 40 I = 1, N
         W(ITX) = X(I) + R*P(I)
         ITX = ITX + 1
   40 CONTINUE
      IFLAG = 0
      CALL SFUN(IFLAG,N,W(LTX),FU,W(LTG),IW,LIW,W,LW)
      NUMF = NUMF + 1
      IF (IFLAG.GE.0) GO TO 20
   60 NFTOTL = NUMF
      IF (IFLAG.LT.0) RETURN
C
C     IF ITEST = 2, 3 OR 4, A LOWER POINT COULD NOT BE FOUND.
C
      IFLAG = 3
      IF (ITEST.NE.0) RETURN
C
C     IF ITEST = 0, A SUCCESSFUL SEARCH HAS BEEN MADE.
C
      ALPHA = XMIN
      DO 80 I = 1, N
         X(I) = X(I) + ALPHA*P(I)
   80 CONTINUE
      F = FMIN
      IFLAG = 2
      RETURN
C
C     END OF E04JBQ (LINDIF)
C
      END
