      SUBROUTINE E04KBW(IFLAG,N,NUMNEG,NFTOTL,SFUN,F,X,ISTATE,GTEMP,
     *                  IZERO,IW,LIW,W,LW)
C
C     MARK 6 RELEASE NAG COPYRIGHT 1977
C     MARK 8 REVISED. IER-245 (MAY 1980).
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C     MARK 13 REVISED. USE OF MARK 12 X02 FUNCTIONS (APR 1988).
C
C     **************************************************************
C
C     E04KBW (M1ZERO) IS CALLED WHEN ALL THE NON-POSITIVE
C     FIRST-ORDER LAGRANGE MULTIPLIERS ARE CLOSE TO ZERO AND EITHER
C     THE TIGHTER CONVERGENCE CRITERIA ARE ALREADY SATISFIED OR IT
C     IS NO LONGER POSSIBLE TO CONTINUE MINIMIZING ON THE CURRENT
C     SUBSPACE. TAKING IN TURN EACH OF THE FIXED VARIABLES WITH
C     NEAR-ZERO MULTIPLIERS (MARKED BY AN ENTRY OF - 4 OR - 5 IN
C     ISTATE), IT MAKES A SMALL, FEASIBLE PERTURBATION IN ITS VALUE.
C     IF ANY SUCH PERTURBATION YIELDS A LOWER FUNCTION VALUE, IZERO
C     RETURNS THE INDEX OF THE PERTURBED VARIABLE. OTHERWISE IZERO =
C     0.
C
C     PHILIP E. GILL, WALTER MURRAY, SUSAN M. PICKEN, MARGARET H.
C     WRIGHT AND ENID M. R. LONG, D.N.A.C., NATIONAL PHYSICAL
C     LABORATORY, ENGLAND
C
C     **************************************************************
C
C     SFUN
C
C     A MACHINE-DEPENDENT CONSTANT IS SET HERE. EPSMCH IS THE
C     SMALLEST POSITIVE REAL NUMBER SUCH THAT 1 + EPSMCH .GT. 1.
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  F
      INTEGER           IFLAG, IZERO, LIW, LW, N, NFTOTL, NUMNEG
C     .. Array Arguments ..
      DOUBLE PRECISION  GTEMP(N), W(LW), X(N)
      INTEGER           ISTATE(N), IW(LIW)
C     .. Subroutine Arguments ..
      EXTERNAL          SFUN
C     .. Local Scalars ..
      DOUBLE PRECISION  ALPHA, EPSMCH, RT4EPS, TRIALF, XI
      INTEGER           I, ISI, NZERO
C     .. External Functions ..
      DOUBLE PRECISION  X02AJF
      EXTERNAL          X02AJF
C     .. External Subroutines ..
      EXTERNAL          E04LBU
C     .. Intrinsic Functions ..
      INTRINSIC         ABS
C     .. Executable Statements ..
      EPSMCH = X02AJF()
      RT4EPS = EPSMCH**0.25D+0
      NZERO = NUMNEG
      IZERO = 0
      DO 20 I = 1, N
         ISI = ISTATE(I)
         IF (ISI.GE.-3) GO TO 20
         NZERO = NZERO - 1
         XI = X(I)
         ALPHA = RT4EPS*(1.0D+0+ABS(XI))
         IF (ISI.EQ.-4) ALPHA = -ALPHA
         X(I) = XI + ALPHA
         CALL SFUN(IFLAG,N,X,TRIALF,GTEMP,IW,LIW,W,LW)
         NFTOTL = NFTOTL + 1
         IF (IFLAG.LT.0) GO TO 60
         IF (TRIALF.LT.F) GO TO 40
         X(I) = XI
         IF (NZERO.EQ.0) GO TO 60
   20 CONTINUE
   40 IZERO = I
   60 CALL E04LBU(N,NUMNEG,ISTATE)
      RETURN
C
C     END OF E04KBW (M1ZERO)
C
      END
