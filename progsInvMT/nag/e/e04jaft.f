      SUBROUTINE E04JAF(N,IBOUND,BL,BU,X,F,IW,LIW,W,LW,IFAIL)
C
C     MARK 6 RELEASE NAG COPYRIGHT 1977
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C     MARK 13 REVISED. USE OF MARK 12 X02 FUNCTIONS (APR 1988).
C     MARK 13A REVISED. IER-632 (APR 1988).
C     MARK 14 REVISED. IER-815 (DEC 1989).
C     MARK 16 REVISED. IER-1109 (JUL 1993).
C     MARK 17 REVISED. IER-1636 (JUN 1995).
C
C     **************************************************************
C
C     E04JAF IS AN EASY-TO-USE QUASI-NEWTON ALGORITHM FOR FINDING A
C     MINIMUM OF A FUNCTION F(X1, X2, . . . XN), SUBJECT TO FIXED
C     UPPER AND LOWER BOUNDS ON THE INDEPENDENT VARIABLES X1, X2, .
C     . . , XN , USING FUNCTION VALUES ONLY.
C
C     GIVEN AN INITIAL ESTIMATE OF THE POSITION OF A CONSTRAINED
C     MINIMUM, THE ROUTINE ATTEMPTS TO COMPUTE THE POSITION OF THE
C     MINIMUM AND THE CORRESPONDING FUNCTION VALUE. IT IS ASSUMED
C     THAT F IS TWICE CONTINUOUSLY-DIFFERENTIABLE.
C
C     THE ROUTINE IS ESSENTIALLY IDENTICAL TO THE SUBROUTINE BCNDQ1
C     IN THE NPL ALGORITHMS LIBRARY (REF. NO. E4/49/F) AND CALLS
C     E04JBL WITH SUITABLE DEFAULT SETTINGS FOR PARAMETERS.
C
C     N.B. FUNCT1 IS A DESIGNATED NAME.
C     --------------------------------
C
C     THE REAL ARRAY W, USED AS WORKSPACE BY E04JAF, MUST BE
C     DIMENSIONED AT LEAST 12*N + N*(N - 1)/2, OR 13 IF N = 1. THE
C     INTEGER ARRAY IW, ALSO USED AS WORKSPACE BY E04JAF, MUST BE
C     DIMENSIONED AT LEAST (N + 2).
C
C     PHILIP E. GILL, WALTER MURRAY, SUSAN M. PICKEN, MARGARET H.
C     WRIGHT AND ENID M. R. LONG, D.N.A.C., NATIONAL PHYSICAL
C     LABORATORY, ENGLAND
C
C     **************************************************************
C
C
C     A MACHINE-DEPENDENT CONSTANT IS SET HERE. EPSMCH IS THE
C     SMALLEST POSITIVE REAL NUMBER SUCH THAT 1 + EPSMCH .GT. 1.
C
C     .. Parameters ..
      CHARACTER*6       SRNAME
      PARAMETER         (SRNAME='E04JAF')
C     .. Scalar Arguments ..
      DOUBLE PRECISION  F
      INTEGER           IBOUND, IFAIL, LIW, LW, N
C     .. Array Arguments ..
      DOUBLE PRECISION  BL(N), BU(N), W(LW), X(N)
      INTEGER           IW(LIW)
C     .. Local Scalars ..
      DOUBLE PRECISION  BNDMAX, BOUNDK, COND, EPSMCH, ETA, FEST, GTG, 
     *                  PEPS, RMAX, RTEPS, STEPMX, U, XI, XTOL
      INTEGER           I, IFLAG, INTYPE, IPRINT, J, K, KIW, KW1, KW2,
     *                  KW3, KW4, LH, MAXFUN, NFREE, NFTOTL, NWHY
      LOGICAL           LOCSCH
C     .. Local Arrays ..
      CHARACTER*1       P01REC(1)
C     .. External Functions ..
      DOUBLE PRECISION  DNRM2, X02AJF, X02ALF
      INTEGER           P01ABF
      EXTERNAL          DNRM2, X02AJF, X02ALF, P01ABF
C     .. External Subroutines ..
      EXTERNAL          E04CGY, E04CGZ, E04HBZ, E04JBL, E04JBQ, E04JBX,
     *                  E04LBW
C     .. Intrinsic Functions ..
      INTRINSIC         ABS, SQRT
C     .. Executable Statements ..
      EPSMCH = X02AJF()
      RMAX = X02ALF()
C
      RTEPS = SQRT(EPSMCH)
      PEPS = EPSMCH**0.66666D+0
      NWHY = 1
      IF (N.LE.0 .OR. IBOUND.LT.0 .OR. IBOUND.GT.3) GO TO 80
C
C     COMPUTE THE LENGTH OF THE ARRAY WHICH HOLDS THE APPROXIMATE
C     HESSIAN MATRIX.
C
      LH = N*(N-1)/2
      IF (LH.EQ.0) LH = 1
C
C     CHECK THAT THERE IS SUFFICIENT WORKSPACE.
C
      IF (LW.LT.12*N+LH) GO TO 80
      IF (LIW.LT.N+2) GO TO 80
C
C     IF APPROPRIATE, E04JBL WILL CHECK THAT BL(I) .LE. BU(I)
C
      NWHY = 0
C
C     SUPPRESS THE PRINT FREQUENCY.
C
      IPRINT = 0
C
C     REQUEST CONFIRMATION OF THE MINIMUM.
C
      LOCSCH = .TRUE.
C
C     THE FUNCTION, GRADIENT AND APPROXIMATE HESSIAN WILL BE
C     SUPPLIED BY E04HBZ.
C
      INTYPE = 1
C
C     ONLY 400*N FUNCTION EVALUATIONS ARE ALLOWED.
C
      MAXFUN = 400*N
C
C     SET THE LINEAR SEARCH PARAMETER.
C
      ETA = 5.0D-1
      IF (N.EQ.1) ETA = 0.0D+0
C
C     SPECIFY THE OVERALL CONVERGENCE CRITERION.
C
      XTOL = 1.0D+2*RTEPS
C
C     SPECIFY THE BOUND ON THE STEP-LENGTH
C
      STEPMX = DNRM2(N,X,1)
      IF (STEPMX.LT.1.0D+1) STEPMX = 1.0D+1
C
C     COMPUTE THE ADDRESSES FOR THE ARRAYS USED IN E04HBZ, E04LBW,
C     E04JBX AND E04JBL.
C
      KW1 = 9*N + 1
      KW2 = KW1 + N
      KW3 = KW2 + LH
      KW4 = KW3 + N
      KIW = 3
C
C     COMPUTE THE FINITE-DIFFERENCE INTERVALS AND THE INITIAL
C     FUNCTION VALUE, GRADIENT VECTOR AND APPROXIMATE HESSIAN MATRIX
C     BY CALLING E04HBZ WITH SOFT FAILURE OPTION.
C
      NWHY = 1
      CALL E04HBZ(N,E04CGY,X,NFTOTL,W(KW1),W(KW2),LH,W(KW3),F,W(KW4),IW,
     *            LIW,W,LW,NWHY)
      NWHY = 0
C
C     CHECK THAT E04HBZ HAS COMPUTED AN ACCEPTABLE INITIAL
C     APPROXIMATION TO THE HESSIAN. IF NOT, REPLACE IT BY THE UNIT
C     MATRIX.
C
      BOUNDK = N
      BOUNDK = 1.0D-2/(SQRT(BOUNDK)*EPSMCH)
      CALL E04LBW(W(KW3),N,BOUNDK,IFLAG,U)
      IF (IFLAG.GT.0) CALL E04JBX(N,W(KW3),N,W(KW2),LH,U)
C
C     COMPUTE AN ESTIMATE OF THE FUNCTION VALUE AT THE MINIMUM.
C
      FEST = 0.0D+0
      IF (ABS(F).LE.RTEPS) FEST = -1.0D+0
      IF (F.LT.-RTEPS) FEST = 1.0D+1*F
C
C     CALL S-ROUTINE E04JBL (WITH SOFT FAILURE OPTION) TO MINIMIZE
C     THE FUNCTION.
C
      NWHY = 1
      CALL E04JBL(N,E04CGY,E04CGZ,IPRINT,LOCSCH,INTYPE,E04JBQ,MAXFUN,
     *            ETA,XTOL,STEPMX,FEST,W(KW1),IBOUND,BL,BU,X,W(KW2),LH,
     *            W(KW3),IW(KIW),F,W(KW4),IW,LIW,W,LW,NWHY)
      IF (NWHY.LE.2 .OR. NWHY.EQ.4) GO TO 40
C
C     IF THE LINEAR SEARCH HAS FAILED, ATTEMPT TO DETERMINE WHETHER
C     THE FAILURE IS DUE TO TOO SMALL A SETTING FOR XTOL.
C
      U = 1.0D+0 + ABS(F)
      U = PEPS*U*U
      GTG = 0.0D+0
      J = KIW
      K = KW4
      DO 20 I = 1, N
         IF (IW(J).GT.0) GTG = GTG + W(K)**2
         J = J + 1
         K = K + 1
   20 CONTINUE
C
C     THE VALUES 3, 5, 6, 7, 8 FOR NWHY HAVE THE FOLLOWING
C     SIGNIFICANCE
C
C     NWHY = 5  -  THE MINIMIZATION HAS PROBABLY WORKED.
C     NWHY = 6  -  THE MINIMIZATION HAS POSSIBLY WORKED.
C     NWHY = 7  -  THE MINIMIZATION IS UNLIKELY TO HAVE WORKED.
C     NWHY = 8  -  THE MINIMIZATION IS VERY UNLIKELY TO HAVE WORKED.
C     NWHY = 3  -  THE MINIMIZATION HAS FAILED.
C
      IF (NWHY.EQ.5) NWHY = 3
      IF (GTG.LE.1.0D+3*U) NWHY = 8
      IF (GTG.LE.1.0D+2*U) NWHY = 7
      IF (GTG.LE.1.0D+1*U) NWHY = 6
      IF (GTG.LE.U) NWHY = 5
   40 CONTINUE
C
C     TELL THE USER IF ANY VARIABLE IS LARGE AND NEGATIVE OR LARGE
C     AND POSITIVE. (THIS WOULD OCCUR, IN PARTICULAR, IF ANY X(I)
C     REACHED AN ARTIFICIAL BOUND SET BY E04JBL.)
C
      BNDMAX = 0.99999D+6
      DO 60 I = 1, N
         XI = X(I)
         IF (XI.LT.BNDMAX .AND. XI.GT.-BNDMAX) GO TO 60
         NWHY = 9
         GO TO 80
   60 CONTINUE
C
      IF (NWHY.EQ.0 .OR. NWHY.EQ.3 .OR. NWHY.EQ.5) THEN
C
C        COMPUTE NFREE, RETURN THE ELEMENTS OF THE PROJECTED GRADIENT 
C        ALONG WITH INFORMATION ABOUT THE STATUS OF THE VARIABLES. 
C
         NFREE = 0
         DO 120 I = 1, N
            IW(I) = IW(KIW+I-1)
            IF (IW(I).LT.0) THEN
               W(I) = 0.0D0
            ELSE
               W(I) = W(KW4+I-1)
               NFREE = NFREE + 1
            END IF
  120    CONTINUE
         IW(N+1) = NFREE
C
C        COMPUTE ESTIMATED CONDITION NUMBER OF PROJECTED HESSIAN.
C
         COND = 0.0D+0
         IF (NFREE.GT.0) CALL E04LBW(W(KW3),NFREE,RMAX,IFLAG,COND)
         IF (IFLAG.EQ.1) COND = RMAX
         W(N+1) = COND
      END IF
C
C     TERMINATION OF ALGORITHM
C
   80 IF (NWHY.NE.0) GO TO 100
      IFAIL = 0
      RETURN
  100 IFAIL = P01ABF(IFAIL,NWHY,SRNAME,0,P01REC)
      RETURN
C
C     END OF E04JAF (BCNDQ1)
C
      END
