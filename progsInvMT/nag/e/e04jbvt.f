      SUBROUTINE E04JBV(N,NFREE,STEPMX,TEST,TOL,ISTATE,X,BL,BU,P,JFIX,
     *                  BOUNDK)
C
C     MARK 6 RELEASE NAG COPYRIGHT 1977
C     MARK 6B REVISED IER-129 (JUL 1978)
C     MARK 8 REVISED. IER-245 (MAY 1980).
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C     MARK 14B REVISED. IER-844 (MAR 1990).
C
C     **************************************************************
C
C     E04JBV (NEWBND) MODIFIES THE MAXIMUM STEP-LENGTH TO ENSURE
C     THAT NO VARIABLE CAN OVERSTEP A BOUND DURING THE LINEAR
C     SEARCH. IF THE STEP TO A BOUND IS NEGLIGIBLE THE APPROPRIATE
C     VARIABLE IS RESET WITHIN THE SUBROUTINE TO ITS BOUND AND THE
C     LINEAR SEARCH IS BY- PASSED. IN THAT CASE THE UPPER BOUND ON
C     THE CONDITION NUMBER OF THE PROJECTED HESSIAN IS RECOMPUTED
C     AND THE INTEGER JFIX GIVES THE INDEX WITHIN THE CURRENT
C     PERMUTATION OF THE FREE VARIABLE WHICH HAS REACHED ITS BOUND.
C     IF THE STEP IS LARGE ENOUGH TO WARRANT A LINEAR SEARCH, THEN
C     JFIX = 0 ON EXIT.
C
C     PHILIP E. GILL, WALTER MURRAY, SUSAN M. PICKEN, MARGARET H.
C     WRIGHT AND ENID M. R. LONG, D.N.A.C., NATIONAL PHYSICAL
C     LABORATORY, ENGLAND
C
C     **************************************************************
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  BOUNDK, STEPMX, TEST, TOL
      INTEGER           JFIX, N, NFREE
C     .. Array Arguments ..
      DOUBLE PRECISION  BL(N), BU(N), P(N), X(N)
      INTEGER           ISTATE(N)
C     .. Local Scalars ..
      DOUBLE PRECISION  ALPHA, ALPHMX, BNDL, BNDU, PK, XKDIFF, XKTEST
      INTEGER           ISK, K
      LOGICAL           FAIL
C     .. External Functions ..
      DOUBLE PRECISION  E04JBW, F06BLF
      EXTERNAL          E04JBW, F06BLF
C     .. Intrinsic Functions ..
      INTRINSIC         ABS
C     .. Executable Statements ..
      ALPHMX = STEPMX
      JFIX = 0
      DO 60 K = 1, N
         PK = P(K)
         IF (ABS(PK).LT.TOL) GO TO 60
         IF (PK.GT.0.0D+0) GO TO 20
         BNDL = BL(K)
         XKDIFF = X(K) - BNDL
         XKTEST = TEST*(ABS(BNDL)+1.0D+0)
         ALPHA = F06BLF(-XKDIFF,PK,FAIL)
         IF (XKDIFF.GT.XKTEST) GO TO 40
         X(K) = BNDL
         JFIX = ISTATE(K)
         ISTATE(K) = -2
         P(K) = 0.0D+0
         GO TO 80
   20    BNDU = BU(K)
         XKDIFF = BNDU - X(K)
         XKTEST = TEST*(ABS(BNDU)+1.0D+0)
         ALPHA = F06BLF(XKDIFF,PK,FAIL)
         IF (XKDIFF.GT.XKTEST) GO TO 40
         X(K) = BNDU
         JFIX = ISTATE(K)
         ISTATE(K) = -1
         P(K) = 0.0D+0
         GO TO 80
   40    IF (ALPHMX.GT.ALPHA) ALPHMX = ALPHA
   60 CONTINUE
      STEPMX = ALPHMX
      RETURN
   80 NFREE = NFREE - 1
      BOUNDK = E04JBW(NFREE)
      IF (JFIX.GT.NFREE) RETURN
      DO 100 K = 1, N
         ISK = ISTATE(K)
         IF (ISK.GT.JFIX) ISTATE(K) = ISK - 1
  100 CONTINUE
      RETURN
C
C     END OF E04JBV (NEWBND)
C
      END
