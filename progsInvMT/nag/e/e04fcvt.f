      SUBROUTINE E04FCV(M,N,LSFJS,LSF,EPS,T,ETA,SFTBND,XLAMDA,P,GTP,X,F,
     *                  ALPHA,FJAC,LJ,FVEC,G,NFTOTL,IFLAG,IW,LIW,W,LW)
C     MARK 13 RE-ISSUE. NAG COPYRIGHT 1988.
C
C     **************************************************************
C
C     E04FCV FINDS AN APPROXIMATION ALPHA TO THE POINT AT WHICH
C     THE FUNCTION F(X+ALPHA*P) ATTAINS ITS MINIMUM VALUE ALONG THE
C     DIRECTION P.  THE METHOD USED IS THAT OF SUCCESSIVE QUADRATIC
C     INTERPOLATION WITH SAFEGUARDS, DESCRIBED IN D.N.A.C. REPORT
C     NO. 37.  DDOT IS USED IN E04FCV.  NOTE ONLY FUNCTION VALUES
C     ARE CALCULATED.  E04FCV CALLS E04ABZ TO GIVE THE STEPLENGTH TO
C     EACH POINT.  THERE IS AN ALTERNATIVE LINEAR SEARCH SUBROUTINE
C     CALLED E04HEV IN WHICH BOTH FUNCTION AND JACOBIAN VALUES ARE
C     CALCULATED.  E04FCV MAY BE USED WHEN THE GRADIENT VECTOR IS
C     UNAVAILABLE, OR WHEN IT IS EXPENSIVE TO COMPUTE COMPARED WITH
C     THE FUNCTION VALUE.  IF THE EVALUATION OF G TAKES MORE THAN
C     ABOUT 4 TIMES AS LONG AS ONE EVALUATION OF F, E04FCV WILL
C     USUALLY BE PREFERABLE.  IF IN DOUBT USE E04HEV AS IT IS
C     SLIGHTLY MORE ROBUST.  THE PARAMETER LISTS OF E04HEV AND
C     E04FCV ARE THE SAME AND CONSEQUENTLY THE SUBROUTINES ARE
C     EASILY INTERCHANGED.  E04HEV GIVES A NEW GRADIENT VECTOR,
C     E04FCV DOES NOT.  IF IFLAG = 0 OR 1 THEN E04HEV HAS BEEN USED
C     AND THE NEW GRADIENT VECTOR IS IN G, OTHERWISE IFLAG = 2 OR 3,
C     AND E04FCV HAS BEEN USED.
C
C     THE WORKSPACE ARRAY W SHOULD BE OF LENGTH AT LEAST
C     M + M*N + N.
C
C     PHILIP E. GILL, WALTER MURRAY, SUSAN M. PICKEN,
C     BRIAN T. HINDE AND ENID M. R. LONG
C     D.N.A.C., NATIONAL PHYSICAL LABORATORY, ENGLAND.
C
C     **************************************************************
C
C     Modified to call BLAS.
C     Peter Mayes, NAG Central Office, October 1987.
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  ALPHA, EPS, ETA, F, GTP, SFTBND, T, XLAMDA
      INTEGER           IFLAG, LIW, LJ, LW, M, N, NFTOTL
C     .. Array Arguments ..
      DOUBLE PRECISION  FJAC(LJ,N), FVEC(M), G(N), P(N), W(LW), X(N)
      INTEGER           IW(LIW)
C     .. Subroutine Arguments ..
      EXTERNAL          LSF, LSFJS
C     .. Local Scalars ..
      DOUBLE PRECISION  A, B, B1, D, E, FA, FMIN, FU, FV, FW, GTEST1,
     *                  GTEST2, GU, OLDF, R, RR, SCXBD, SS, TOL, U,
     *                  XMIN, XV, XW
      INTEGER           I, ILOC, INFORM, ITEST, L, LFJAC, LFUVEC, LX,
     *                  NUMF
C     .. External Functions ..
      DOUBLE PRECISION  DDOT
      EXTERNAL          DDOT
C     .. External Subroutines ..
      EXTERNAL          E04ABZ, DCOPY
C     .. Executable Statements ..
      LFUVEC = 1
      LFJAC = LFUVEC + M
      LX = LFJAC + M*N
      NUMF = 0
      U = ALPHA
      FU = F
      FMIN = FU
      GU = GTP
      ILOC = 1
   20 CALL E04ABZ(EPS,T,ETA,SFTBND,XLAMDA,U,FU,GU,XMIN,FMIN,XW,FW,XV,FV,
     *            A,FA,B,OLDF,B1,SCXBD,E,D,RR,SS,GTEST1,GTEST2,TOL,ILOC,
     *            ITEST)
C
C     IF ITEST = 1, THE ALGORITHM REQUIRES THE FUNCTION VALUE TO
C     BE CALCULATED.
C
      IF (ITEST.NE.1) GO TO 60
      R = XMIN + U
      L = LX
      DO 40 I = 1, N
         W(L) = X(I) + R*P(I)
         L = L + 1
   40 CONTINUE
      INFORM = 0
      CALL LSFJS(INFORM,M,N,LSF,W(LX),W(LFUVEC),W(LFJAC),M,IW,LIW,W,LW)
      NUMF = NUMF + 1
      IF (INFORM.LT.0) GO TO 100
C
C     COMPUTE THE FUNCTION VALUE
C
      FU = DDOT(M,W(LFUVEC),1,W(LFUVEC),1)
      IF (FU.LE.FMIN .OR. ILOC.NE.2 .AND. ILOC.NE.3) CALL DCOPY(M,
     *    W(LFUVEC),1,FVEC,1)
      GO TO 20
   60 NFTOTL = NUMF
C
C     IF ITEST = 2, 3 OR 4, A LOWER POINT COULD NOT BE FOUND
C
      IFLAG = 3
      IF (ITEST.NE.0) RETURN
C
C     IF ITEST = 0 A SUCCESSFUL SEARCH HAS BEEN MADE
C
      F = FMIN
      ALPHA = XMIN
      DO 80 I = 1, N
         X(I) = X(I) + ALPHA*P(I)
   80 CONTINUE
      IFLAG = 2
      RETURN
  100 NFTOTL = NUMF
      IFLAG = INFORM
      RETURN
C
C     END OF E04FCV   (LSDIF)
C
      END
