      SUBROUTINE E04LBG(IFLAG,N,NFREE,NUMNEG,NFTOTL,NOMOVE,USERH,SHESS,
     *                  EPS,DELTA,BL,BU,SFUN,F,X,ISTATE,GFULL,GPROJ,
     *                  HDFULL,HDPROJ,HLFULL,NH,HLPROJ,LH,LHPROJ,IQ,
     *                  IZERO,TIGHT,IW,LIW,W,LW)
C
C     MARK 6 RELEASE NAG COPYRIGHT 1977
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C     MARK 13 REVISED. USE OF MARK 12 X02 FUNCTIONS (APR 1988).
C     MARK 14 REVISED. IER-807 (DEC 1989).
C     MARK 16 REVISED. IER-994 (JUN 1993).
C
C     **************************************************************
C
C     E04LBG (M2ZERO) IS CALLED WHEN ALL NON-POSITIVE SECOND-ORDER
C     LAGRANGE MULTIPLIERS ARE CLOSE TO ZERO AND EITHER THE TIGHTER
C     CONVERGENCE CRITERIA ARE ALREADY SATISFIED OR IT IS NO LONGER
C     POSSIBLE TO CONTINUE MINIMIZING ON THE CURRENT SUBSPACE. IT
C     RELEASES IN TURN EACH OF THE FIXED VARIABLES WITH NEAR-ZERO
C     MULTIPLIERS (MARKED BY AN ENTRY OF - 4 OR - 5 IN ISTATE) UNTIL
C     A DIRECTION OF NEGATIVE CURVATURE IS OBTAINED, THAT IS, UNTIL
C     THE PROJECTED HESSIAN CEASES TO BE POSITIVE DEFINITE. IT THEN
C     COMPUTES A SEARCH DIRECTION AND TAKES A SMALL STEP ALONG IT.
C     IF THE TRIAL POINT IS INFEASIBLE, OR IF ITS FUNCTION VALUE IS
C     NO LOWER, THE SUBROUTINE RETURNS WITH IFLAG = 5. OTHERWISE IT
C     TAKES A SERIES OF INCREASING STEPS UNTIL THE FUNCTION VALUE
C     CEASES TO DECREASE OR A BOUND IS VIOLATED. IT THEN ACCEPTS THE
C     FEASIBLE POINT WITH THE LOWEST FUNCTION VALUE AS THE STARTING
C     POINT FOR THE NEXT ITERATION.
C
C     PHILIP E. GILL, WALTER MURRAY, SUSAN M. PICKEN, MARGARET H.
C     WRIGHT AND ENID M. R. LONG, D.N.A.C., NATIONAL PHYSICAL
C     LABORATORY, ENGLAND
C
C     **************************************************************
C
C     SFUN, SHESS
C
C     A MACHINE-DEPENDENT CONSTANT IS SET HERE. EPSMCH IS THE
C     SMALLEST POSITIVE REAL NUMBER SUCH THAT 1 + EPSMCH .GT. 1.
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  DELTA, EPS, F
      INTEGER           IFLAG, IQ, IZERO, LH, LHPROJ, LIW, LW, N, NFREE,
     *                  NFTOTL, NH, NUMNEG
      LOGICAL           NOMOVE, TIGHT, USERH
C     .. Array Arguments ..
      DOUBLE PRECISION  BL(N), BU(N), GFULL(N), GPROJ(N), HDFULL(N),
     *                  HDPROJ(N), HLFULL(NH), HLPROJ(LH), W(LW), X(N)
      INTEGER           ISTATE(N), IW(LIW)
C     .. Subroutine Arguments ..
      EXTERNAL          SFUN, SHESS
C     .. Local Scalars ..
      DOUBLE PRECISION  DEL, EPSMCH, RT4EPS, STEP, TEST, TRIALF
      INTEGER           I, ISI, IW1, IW2, J, LW1, LW2, LW3, NZERO
C     .. External Functions ..
      DOUBLE PRECISION  DDOT, X02AJF
      EXTERNAL          DDOT, X02AJF
C     .. External Subroutines ..
      EXTERNAL          E04LBB, E04LBH, E04LBN, E04LBP, E04LBQ, E04LBU,
     *                  E04LBV, E04LBX, F01BQZ
C     .. Executable Statements ..
      EPSMCH = X02AJF()
      RT4EPS = EPSMCH**0.25D+0
      DEL = EPS
      NZERO = NUMNEG
      LW1 = 1
      LW2 = LW1 + N
      LW3 = LW2 + N
      DO 120 I = 1, N
         ISI = ISTATE(I)
         IF (ISI.GT.-4) GO TO 120
         IZERO = I
         NZERO = NZERO - 1
         CALL E04LBH(N,IZERO,TIGHT,ISTATE,NFREE)
         IFLAG = 1
         IW(1) = -4
         IF (NOMOVE) GO TO 80
         IF (USERH) GO TO 20
         CALL E04LBP(IFLAG,N,NH,X,GFULL,ISTATE,SFUN,DELTA,HLFULL,HDFULL,
     *               IW,LIW,W,LW)
         IF (IFLAG.LT.0) RETURN
         GO TO 60
   20    DO 40 J = 1, N
            HDFULL(J) = GFULL(J)
   40    CONTINUE
         CALL SHESS(IFLAG,N,X,HLFULL,NH,HDFULL,IW,LIW,W,LW)
         IF (IFLAG.LT.0) RETURN
   60    CALL E04LBX(N,ISTATE,GFULL,HDFULL,HLFULL,NH,GPROJ,HDPROJ,
     *               HLPROJ,LH,LHPROJ)
         IF (LHPROJ.EQ.0) LHPROJ = 1
C
C        SOFT FAILURE OPTION
C
         IQ = 1
         CALL F01BQZ(NFREE,DEL,HLPROJ,LHPROJ,HDPROJ,IQ)
         NOMOVE = .TRUE.
         GO TO 100
   80    IF ( .NOT. USERH) CALL E04LBQ(IFLAG,N,NH,X,GFULL,ISTATE,IZERO,
     *                                 SFUN,DELTA,HLFULL,HDFULL,IW,LIW,
     *                                 W,LW)
         IF (IFLAG.LT.0) RETURN
         CALL E04LBN(N,NFREE,IZERO,ISTATE,GFULL,HDFULL,HLFULL,NH,GPROJ,
     *               HDPROJ,HLPROJ,LH,DEL,IQ,LHPROJ,W,LW)
  100    IF (IQ.GT.0) GO TO 140
         IF (NZERO.GT.0) GO TO 120
         IFLAG = 5
         NUMNEG = 0
         RETURN
  120 CONTINUE
  140 NUMNEG = NZERO
      IF (NZERO.GT.0) CALL E04LBU(N,NUMNEG,ISTATE)
      CALL E04LBB(NFREE,LHPROJ,IQ,HLPROJ,W(LW2))
      CALL E04LBV(N,ISTATE,W(LW2),1.0D+0,W(LW1))
      IW1 = LW1
      IW2 = LW2
      IFLAG = 5
      DO 160 I = 1, N
         TEST = X(I) + RT4EPS*W(IW1)
         IF (TEST.LT.BL(I) .OR. TEST.GT.BU(I)) RETURN
         W(IW2) = TEST
         IW1 = IW1 + 1
         IW2 = IW2 + 1
  160 CONTINUE
      IFLAG = 2
      IW(1) = -5
      CALL SFUN(IFLAG,N,W(LW2),TRIALF,W(LW3),IW,LIW,W,LW)
      NFTOTL = NFTOTL + 1
      IF (IFLAG.LT.0) RETURN
      IF (TRIALF.LT.F) GO TO 180
      IFLAG = 5
      RETURN
  180 NOMOVE = .FALSE.
      STEP = RT4EPS
  200 STEP = 9.0D+0*STEP
      F = TRIALF
      IW2 = LW2
      DO 220 I = 1, N
         X(I) = W(IW2)
         IW2 = IW2 + 1
  220 CONTINUE
      IW1 = LW1
      IW2 = LW2
      DO 240 I = 1, N
         TEST = X(I) + STEP*W(IW1)
         IF (TEST.LT.BL(I) .OR. TEST.GT.BU(I)) RETURN
         W(IW2) = TEST
         IW1 = IW1 + 1
         IW2 = IW2 + 1
  240 CONTINUE
      IFLAG = 2
      IW(1) = -5
      CALL SFUN(IFLAG,N,W(LW2),TRIALF,W(LW3),IW,LIW,W,LW)
      NFTOTL = NFTOTL + 1
      IF (IFLAG.LT.0 .OR. TRIALF.GE.F) RETURN
      IF (DDOT(N,W(LW3),1,W(LW1),1).GT.0.0D+0) RETURN
      GO TO 200
C
C     END OF E04LBG (M2ZERO)
C
      END
