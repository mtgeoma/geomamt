      SUBROUTINE E02CBF(MFIRST,MLAST,K,L,X,XMIN,XMAX,Y,YMIN,YMAX,FF,A,
     *                  NA,WORK,NWORK,IFAIL)
C     MARK 7 RELEASE. NAG COPYRIGHT 1978.
C     MARK 11.5(F77) REVISED. (SEPT 1985.)
C
C     THIS SUBROUTINE EVALUATES A POLYNOMIAL OF DEGREE K AND L
C     RESPECTIVELY IN THE INDEPENDENT VARIABLES X AND Y.  THE
C     POLYNOMIAL IS GIVEN IN DOUBLE CHEBYSHEV SERIES FORM
C     A(I,J) * TI(XCAP) * TJ(YCAP),
C     SUMMED OVER I = 0,1,...K AND J = 0,1,...L WITH THE CONVENTION
C     THAT TERMS WITH EITHER I OR J ZERO ARE HALVED AND THE TERM
C     WITH BOTH I AND J ZERO IS MULTIPLIED BY 0.25. HERE TI(XCAP)
C     IS THE CHEBYSHEV POLYNOMIAL OF THE FIRST KIND OF DEGREE I
C     WITH ARGUMENT XCAP=((X - XMIN) - (XMAX - X))/(XMAX - XMIN).
C     TJ(YCAP) IS DEFINED SIMILARLY. THE COEFFICIENT A(I,J)
C     SHOULD BE STORED IN ELEMENT (L + 1)*I + J + 1 OF THE SINGLE
C     DIMENSION ARRAY A. THE EVALUATION IS PERFORMED FOR A SINGLE
C     GIVEN VALUE OF Y WITH EACH X VALUE GIVEN IN X(R), FOR R =
C     MFIRST, MFIRST+1,....,MLAST.
C
C     STARTED - 1978.
C     COMPLETED - 1978.
C     AUTHOR - GTA.
C
C     .. Parameters ..
      CHARACTER*6       SRNAME
      PARAMETER         (SRNAME='E02CBF')
C     .. Scalar Arguments ..
      DOUBLE PRECISION  XMAX, XMIN, Y, YMAX, YMIN
      INTEGER           IFAIL, K, L, MFIRST, MLAST, NA, NWORK
C     .. Array Arguments ..
      DOUBLE PRECISION  A(NA), FF(MLAST), WORK(NWORK), X(MLAST)
C     .. Local Scalars ..
      DOUBLE PRECISION  D, XCAP, YCAP
      INTEGER           I, IERROR, KP1, LP1, M, R
C     .. Local Arrays ..
      CHARACTER*1       P01REC(1)
C     .. External Functions ..
      INTEGER           P01ABF
      EXTERNAL          P01ABF
C     .. External Subroutines ..
      EXTERNAL          E02AEF
C     .. Executable Statements ..
      KP1 = K + 1
      LP1 = L + 1
      M = MLAST - MFIRST + 1
C
C     CHECK THAT THE INTEGER INPUT PARAMETERS HAVE REASONABLE
C     VALUES
C
      IERROR = 1
      IF (M.LE.0 .OR. K.LT.0 .OR. L.LT.0 .OR. NA.LT.KP1*LP1 .OR.
     *    NWORK.LT.KP1) GO TO 80
C
C     CHECK THAT THE Y RANGE IS REASONABLE AND THAT THE GIVEN
C     VALUE OF Y IS NOT OUTSIDE IT
C
      IERROR = 2
      IF (YMIN.GE.YMAX .OR. Y.LT.YMIN .OR. Y.GT.YMAX) GO TO 80
      D = XMAX - XMIN
C
C     CHECK THAT THE X RANGE IS REASONABLE AND THAT NONE OF
C     THE GIVEN VALUES OF X IS OUTSIDE IT
C
      IERROR = 3
      IF (D.LE.0.0D+0) GO TO 80
      DO 20 R = MFIRST, MLAST
         IF (X(R).LT.XMIN .OR. X(R).GT.XMAX) GO TO 80
   20 CONTINUE
C
C     CALCULATE YCAP, THE NORMALIZED VALUE OF Y
C
      YCAP = ((Y-YMIN)-(YMAX-Y))/(YMAX-YMIN)
      IERROR = 1
      R = -L
C
C     EVALUATE THE COEFFICIENTS OF THE POLYNOMIAL FOR THE GIVEN Y
C
      DO 40 I = 1, KP1
         R = R + LP1
         CALL E02AEF(LP1,A(R),YCAP,WORK(I),IERROR)
         IERROR = IERROR + 1
         IF (IERROR.NE.1) GO TO 80
   40 CONTINUE
C
C     EVALUATE THE POLYNOMAL AT THE GIVEN X VALUES
C
      DO 60 R = MFIRST, MLAST
         XCAP = ((X(R)-XMIN)-(XMAX-X(R)))/D
         IERROR = 1
         CALL E02AEF(KP1,WORK,XCAP,FF(R),IERROR)
         IF (IERROR.EQ.0) GO TO 60
         IERROR = 3
         GO TO 80
   60 CONTINUE
   80 IFAIL = P01ABF(IFAIL,IERROR,SRNAME,0,P01REC)
      RETURN
      END
