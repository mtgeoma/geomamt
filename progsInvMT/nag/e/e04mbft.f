      SUBROUTINE E04MBF(ITMAX,MSGLVL,N,NCLIN,NCTOTL,NROWA,A,BL,BU,CVEC,
     *                  LINOBJ,X,ISTATE,OBJLP,CLAMDA,IW,LENIW,W,LENW,
     *                  IFAIL)
C     MARK 12 RE-ISSUE. NAG COPYRIGHT 1986.
C     MARK 13 REVISED. IER-626 (APR 1988).
C
C *********************************************************************
C     E04MBF  SOLVES LINEAR PROGRAMMING (LP) PROBLEMS OF THE FORM
C
C                MINIMIZE     C(T)*X
C
C                SUBJECT TO   BL1 .LE.   X   .LE. BU1,
C                             BL2 .LE.  A*X  .LE. BU2,
C
C     WHERE  (T)  DENOTES THE TRANSPOSE OF A COLUMN VECTOR.
C
C     THE VECTOR  C  IS ENTERED IN THE ONE-DIMENSIONAL ARRAY  CVEC.
C
C     THE VECTORS  BL1, BU1  ARE LOWER AND UPPER BOUNDS ON THE
C     VARIABLES X.
C     THE VECTORS  BL2, BU2  ARE LOWER AND UPPER BOUNDS ON THE
C     PRODUCT A*X.
C     THESE ARE ENTERED AS THE FIRST  N  AND LAST  NCLIN  ELEMENTS
C     OF THE ARRAYS  BL, BU.
C
C     THE LINEAR-CONSTRAINT MATRIX  A  MAY BE NULL.  IF NOT, IT IS
C     ENTERED AS THE TWO-DIMENSIONAL ARRAY  A.
C
C     AN INITIAL ESTIMATE OF THE SOLUTION IS REQUIRED.  THIS IS ENTERED
C     IN THE ARRAY  X.
C
C
C     SYSTEMS OPTIMIZATION LABORATORY, STANFORD UNIVERSITY.
C     COPYRIGHT  1983  STANFORD UNIVERSITY. VERSION 1.1 JULY 1983.
C
C     ORIGINAL VERSION NAG ROUTINE E04MBF. JULY 1983. (PEG AND SVEN)
C
C THIS MATERIAL IS BASED UPON WORK PARTIALLY SUPPORTED BY THE NATIONAL
C     SCIENCE FOUNDATION UNDER GRANTS MCS-7926009 AND ECS-8012974; THE
C     DEPARTMENT OF ENERGY CONTRACT AM03-76SF00326, PA NO. DE-AT03-
C     76ER72018; AND THE ARMY RESEARCH OFFICE CONTRACT DAA29-79-C-0110.
C *********************************************************************
C
C     .. Parameters ..
      CHARACTER*6       SRNAME
      PARAMETER         (SRNAME='E04MBF')
C     .. Scalar Arguments ..
      DOUBLE PRECISION  OBJLP
      INTEGER           IFAIL, ITMAX, LENIW, LENW, MSGLVL, N, NCLIN,
     *                  NCTOTL, NROWA
      LOGICAL           LINOBJ
C     .. Array Arguments ..
      DOUBLE PRECISION  A(NROWA,N), BL(NCTOTL), BU(NCTOTL),
     *                  CLAMDA(NCTOTL), CVEC(N), W(LENW), X(N)
      INTEGER           ISTATE(NCTOTL), IW(LENIW)
C     .. Scalars in Common ..
      DOUBLE PRECISION  ASIZE, DTMAX, DTMIN
      INTEGER           ISTART, LENNAM, MSG, NCOLRT, NOUT, NQ, NROWRT
C     .. Arrays in Common ..
      DOUBLE PRECISION  PARM(10), WMACH(15)
      INTEGER           LOCLP(15)
C     .. Local Scalars ..
      DOUBLE PRECISION  BIGBND, BIGDX, EPSMCH, EPSPT9, FEATOL, ONE,
     *                  TOLACT, XNORM
      INTEGER           INFORM, ITER, ITMX, LAX, LCRASH, LFEATL, LITOTL,
     *                  LKACTV, LKFREE, LNAMES, LPX, LSCALE, LWRK,
     *                  LWTOTL, MAXACT, MINACT, MINFXD, MXCOLZ, MXFREE,
     *                  NACTIV, NALG, NCNLN, NERROR, NFREE, NROWJ,
     *                  NUMINF
      LOGICAL           MINSUM, NAMED, ORTHOG, UNITQ, VERTEX
C     .. Local Arrays ..
      CHARACTER*1       P01REC(1)
      CHARACTER*85      REC(2)
C     .. External Functions ..
      INTEGER           P01ABF
      EXTERNAL          P01ABF
C     .. External Subroutines ..
      EXTERNAL          E04MBW, E04MBY, E04VDV, E04VDY, F06FBF, DCOPY,
     *                  X02ZAZ, X04BAF
C     .. Intrinsic Functions ..
      INTRINSIC         MAX, MIN
C     .. Common blocks ..
      COMMON            /AE04VC/NOUT, MSG, ISTART
      COMMON            /AX02ZA/WMACH
      COMMON            /BE04VC/LENNAM, NROWRT, NCOLRT, NQ
      COMMON            /CE04VC/PARM
      COMMON            /DE04VC/LOCLP
      COMMON            /HE04VC/ASIZE, DTMAX, DTMIN
C     .. Save statement ..
      SAVE              /AX02ZA/
C     .. Data statements ..
      DATA              ONE/1.0D+0/
C     .. Executable Statements ..
C
C     SET THE MACHINE-DEPENDENT CONSTANTS.
C
      CALL X02ZAZ
      EPSMCH = WMACH(3)
      FEATOL = MIN(WMACH(4),5.0D-4)
      NOUT = WMACH(11) + 0.25D+0
C
C     IF ITMAX IS NOT POSITIVE ON ENTRY ITMAX = 50
C
      ITMX = ITMAX
      IF (ITMX.LE.0) ITMX = 50
C
C     E04MBF  WILL PROVIDE DEFAULT NAMES FOR VARIABLES DURING PRINTING.
C
      NAMED = .FALSE.
C
C     THE FIRST FEASIBLE POINT NEED NOT BE A VERTEX.
C
      VERTEX = .FALSE.
C
C     ANY CHANGE IN X THAT IS GREATER THAN  BIGDX  WILL BE REGARDED
C     AS AN INFINITE STEP.
C
      BIGDX = 1.0D+20
C
C     DURING SELECTION OF THE INITIAL WORKING SET (BY CRASH),
C     CONSTRAINTS WITH RESIDUALS LESS THAN  TOLACT  WILL BE MADE ACTIVE.
C
      TOLACT = 0.01D+0
C
      BIGBND = 1.0D+20
      EPSPT9 = EPSMCH**(0.9D0)
C
      PARM(1) = BIGBND
      PARM(2) = BIGDX
      PARM(3) = TOLACT
      PARM(4) = EPSPT9
C
C     DEFAULT VALUES SET BY E04MBF.
C
      LCRASH = 0
      MINSUM = .TRUE.
      ORTHOG = .TRUE.
C
C     ASSIGN THE DIMENSIONS OF ARRAYS IN THE PARAMETER LIST OF E04MBY.
C     LESS WORKSPACE IS NEEDED IF THE MATRIX OF GENERAL CONSTRAINTS
C     IS FAT, I.E.  NCLIN .LT. N. TO ACHIEVE THESE ECONOMIES  VERTEX
C     MUST BE  .TRUE..
C
      MINACT = 0
      MINFXD = 0
      IF (NCLIN.LT.N) MINFXD = N - NCLIN - 1
      IF (NCLIN.LT.N) VERTEX = .TRUE.
C
      MXFREE = N - MINFXD
      MAXACT = MAX(1,MIN(N,NCLIN))
      MXCOLZ = N - (MINFXD+MINACT)
      NQ = MAX(1,MXFREE)
      NROWRT = MAX(MXCOLZ,MAXACT)
      NCOLRT = MXFREE
C
      NCNLN = 0
      NROWJ = 1
      LENNAM = 1
C
C     ALLOCATE CERTAIN ARRAYS THAT ARE NOT DONE IN  E04VDY.
C
      LNAMES = 1
      LITOTL = 0
C
      LAX = 1
      LSCALE = LAX + NROWA
      LFEATL = LSCALE + NCTOTL
      LWTOTL = LFEATL + NCTOTL - 1
C
C     ALLOCATE REMAINING WORK ARRAYS. CLAMDA IS USED AS TEMPORARY
C     WORKSPACE.
C
      NALG = 1
      LOCLP(1) = LNAMES
      CALL E04VDY(NALG,N,NCLIN,NCNLN,NCTOTL,NROWA,NROWJ,LITOTL,LWTOTL)
C
      LKACTV = LOCLP(2)
      LKFREE = LOCLP(3)
C
      LPX = LOCLP(5)
      LWRK = LOCLP(10)
C
      CALL F06FBF(NCTOTL,FEATOL,CLAMDA,1)
C
C     SET THE MESSAGE LEVEL FOR  E04MBW, E04VDV  AND  E04MBY.
C
      MSG = MSGLVL
C
C     *** THE FOLLOWING STATEMENT MUST BE EXECUTED IF  ISTART   ***
C     *** IS NOT SET IN THE CALLING ROUTINE.                    ***
C
      ISTART = 0
C
C     CHECK INPUT PARAMETERS AND STORAGE LIMITS.
C
      IF (MSGLVL.EQ.99) CALL E04MBW(N,NCLIN,NCTOTL,NROWA,LCRASH,LINOBJ,
     *                              MINSUM,NAMED,VERTEX,ISTATE,A,W(LAX),
     *                              BL,BU,CVEC,X)
C
      CALL E04VDV(NERROR,LENIW,LENW,LITOTL,LWTOTL,NROWA,N,NCLIN,NCNLN,
     *            NCTOTL,ISTATE,IW(LKACTV),LCRASH,NAMED,IW(LNAMES),
     *            LENNAM,BIGBND,A,BL,BU,CLAMDA,X)
C
      ITER = 0
      IF (NERROR.EQ.0) GO TO 20
      IF (MSGLVL.GT.0) THEN
         WRITE (REC,FMT=99993) NERROR
         CALL X04BAF(NOUT,REC(1))
         CALL X04BAF(NOUT,REC(2))
      END IF
      IFAIL = P01ABF(IFAIL,5,SRNAME,0,P01REC)
      RETURN
   20 CONTINUE
      CALL DCOPY(NCTOTL,CLAMDA,1,W(LFEATL),1)
C
C     NO SCALING IS PROVIDED BY THIS VERSION OF  E04MBF.
C
      CALL F06FBF(NCTOTL,ONE,W(LSCALE),1)
C
C ---------------------------------------------------------------------
C     CALL  E04MBY  TO OBTAIN A FEASIBLE POINT, OR SOLVE A LINEAR
C     PROBLEM.
C ---------------------------------------------------------------------
      CALL E04MBY(LINOBJ,MINSUM,NAMED,ORTHOG,UNITQ,VERTEX,INFORM,ITER,
     *            ITMX,LCRASH,N,NCLIN,NCTOTL,NROWA,NACTIV,NFREE,NUMINF,
     *            ISTATE,IW(LKACTV),IW(LKFREE),OBJLP,XNORM,A,W(LAX),BL,
     *            BU,CLAMDA,CVEC,W(LFEATL),X,IW,LENIW,W,LENW)
C
C     PRINT MESSAGES IF REQUIRED.
C
      IF (MSGLVL.LE.0) GO TO 40
      IF (INFORM.EQ.0 .AND. LINOBJ) WRITE (REC,FMT=99999)
      IF (INFORM.EQ.0 .AND. .NOT. LINOBJ) WRITE (REC,FMT=99998)
C
      IF (INFORM.EQ.1) WRITE (REC,FMT=99997)
      IF (INFORM.EQ.2) WRITE (REC,FMT=99996)
      IF (INFORM.EQ.3) WRITE (REC,FMT=99995)
      IF (INFORM.EQ.4) WRITE (REC,FMT=99994)
      IF (INFORM.GE.0 .AND. INFORM.LE.4) THEN
         CALL X04BAF(NOUT,REC(1))
         CALL X04BAF(NOUT,REC(2))
      END IF
      IF (NUMINF.EQ.0 .AND. LINOBJ) THEN
         WRITE (REC,FMT=99992) OBJLP
         CALL X04BAF(NOUT,REC(1))
         CALL X04BAF(NOUT,REC(2))
      END IF
      IF (NUMINF.GT.0) THEN
         WRITE (REC,FMT=99991) OBJLP
         CALL X04BAF(NOUT,REC(1))
         CALL X04BAF(NOUT,REC(2))
      END IF
      WRITE (REC,FMT=99990) ITER
      CALL X04BAF(NOUT,REC(1))
      CALL X04BAF(NOUT,REC(2))
   40 CONTINUE
      IF (INFORM.NE.0) GO TO 60
      IFAIL = 0
      RETURN
   60 CONTINUE
      IFAIL = P01ABF(IFAIL,INFORM,SRNAME,0,P01REC)
      RETURN
C
C
C     END OF E04MBF
99999 FORMAT (/' EXIT E04MBF - OPTIMAL LP SOLUTION FOUND.')
99998 FORMAT (/' EXIT E04MBF - FEASIBLE POINT FOUND.')
99997 FORMAT (/' EXIT E04MBF - NO FEASIBLE POINT COULD BE FOUND.')
99996 FORMAT (/' EXIT E04MBF - LP SOLUTION IS UNBOUNDED.')
99995 FORMAT (/' EXIT E04MBF - TOO MANY ITERATIONS WITHOUT CHANGING X.')
99994 FORMAT (/' EXIT E04MBF - TOO MANY ITERATIONS.')
99993 FORMAT (/' EXIT E04MBF - ',I10,' ERRORS FOUND IN THE INPUT PARAM',
     *  'ETERS.  PROBLEM ABANDONED.')
99992 FORMAT (/' LP OBJECTIVE FUNCTION =',1P,D15.6)
99991 FORMAT (/' MINIMUM SUM OF INFEASIBILITIES =',1P,D15.6)
99990 FORMAT (/' NO. OF ITERATIONS =',I5)
      END
