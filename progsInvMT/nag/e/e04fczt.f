      SUBROUTINE E04FCZ(M,N,LSFJSB,LSFN,LSMON,IPRINT,MAXFUN,ETA,XTOL,
     *                  STEPMX,X,FSUMSQ,FVEC,FJAC,LJ,S,VT,LVT,NITER,
     *                  NFTOTL,INFORM,IW,LIW,W,LW)
C     MARK 13 RE-ISSUE. NAG COPYRIGHT 1988.
C     MARK 16 REVISED. IER-988 (JUN 1993).
C
C     **************************************************************
C
C     MINIMIZATION OF A SUM OF SQUARES OF NONLINEAR FUNCTIONS WITH
C     FUNCTION VALUES ONLY.  THE SUBROUTINE USES THE SINGULAR VALUE
C     DECOMPOSITION AND FORMS FINITE-DIFFERENCE APPROXIMATIONS TO
C     THE GRADIENT AND TO THE PROJECTION OF THE SECOND DERIVATIVE
C     TERM OF THE HESSIAN MATRIX.
C
C     PHILIP E. GILL, ENID M. R. LONG, WALTER MURRAY,
C     SUSAN M. PICKEN AND BRIAN T. HINDE
C     D.N.A.C., NATIONAL PHYSICAL LABORATORY, ENGLAND
C
C     **************************************************************
C
C     Modified to call BLAS.
C     Peter Mayes, NAG Central Office, October 1987.
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  ETA, FSUMSQ, STEPMX, XTOL
      INTEGER           INFORM, IPRINT, LIW, LJ, LVT, LW, M, MAXFUN, N,
     *                  NFTOTL, NITER
C     .. Array Arguments ..
      DOUBLE PRECISION  FJAC(LJ,N), FVEC(M), S(N), VT(LVT,N), W(LW),
     *                  X(N)
      INTEGER           IW(LIW)
C     .. Subroutine Arguments ..
      EXTERNAL          LSFJSB, LSFN, LSMON
C     .. Local Scalars ..
      DOUBLE PRECISION  ALPHA, EPSEPS, EPSMCH, GTG, PEPS, PNORM, RTEPS,
     *                  RTOL, SIGMA, SSQNEW, SSQOLD, TAU, TLEPSQ, TOL,
     *                  TOLEPS, U, XNORM
      INTEGER           IFLAG, IGRADE, LEND, LGSSQ, LP, LP2, LPH,
     *                  LPHESD, LPHESL, LRHS, LUTF, MAXRNK, NPHI, NS,
     *                  NWHY, NWY
      LOGICAL           GAUSS, NOMOVE, P1ZERO
C     .. External Functions ..
      DOUBLE PRECISION  DDOT, DNRM2
      EXTERNAL          DDOT, DNRM2
C     .. External Subroutines ..
      EXTERNAL          E04FCV, E04FCY, E04GDQ, E04GDS, E04GDV, E04GDX,
     *                  E04GDY, E04GDZ, F04AQZ, F04JAZ, F06FBF, DGEMV
C     .. Intrinsic Functions ..
      INTRINSIC         ABS, SQRT
C     .. Executable Statements ..
C
C     SET ADDRESSES FOR REAL WORKSPACE.
C
C     **************************************************************
C
C     THE FOLLOWING ADDRESSES AND ARRAY LENGTHS DEFINE BLOCKS OF THE
C     WORKSPACE ARRAY W(LW)
C
C     W(1), LENGTH N + M + M*N      LOCAL WORKSPACE FOR AUXILIARY
C                                   SUBROUTINES.
C
C     W(LRHS), LENGTH N             THE VECTOR NEEDED TO CALCULATE
C                                   P2, THE CORRECTION TO THE
C                                   GRADED GAUSS-NEWTON DIRECTION.
C
C     W(LPHESL), LENGTH N*(N - 1)/2 THE LOWER TRIANGULAR MATRIX
C                                   ASSOCIATED WITH THE CHOLESKY
C                                   FACTORIZATION USED TO CALCULATE
C                                   P2.
C
C     W(LPHESD), LENGTH N           THE DIAGONAL MATRIX ASSOCIATED
C                                   WITH THE CHOLESKY FACTORIZATION
C                                   USED TO CALCULATE P2.
C
C     W(LP), LENGTH N               THE SEARCH DIRECTION VECTOR P.
C
C     W(LP2), LENGTH N              THE PROJECTION OF P2.
C
C     W(LGSSQ), LENGTH N            THE GRADIENT VECTOR OF THE SUM
C                                   OF SQUARES.
C
C     W(LUTF), LENGTH M             THE VECTOR OBTAINED FROM THE
C     .                             PRODUCT OF U TRANSPOSE AND THE
C     .                             VECTOR OF FUNCTION VALUES.  THE
C     .                             MATRIX U IS ASSOCIATED WITH THE
C     .                             SINGULAR VALUE DECOMPOSITION
C     .                                          T
C     .                             J = U * S * V .
C
C     THE TOTAL LENGTH OF W SHOULD BE NOT LESS THAN
C     6*N + 2*M + N*M + N*(N - 1)/2 OR 7 + 3*M IF N = 1.
C     IW SHOULD HAVE AT LEAST ONE ELEMENT.
C
C     **************************************************************
C
      LRHS = N + M + M*N + 1
      LPHESL = LRHS + N
      LPHESD = LPHESL + N*(N-1)/2
      IF (N.EQ.1) LPHESD = LPHESD + 1
      LP = LPHESD + N
      LP2 = LP + N
      LGSSQ = LP2 + N
      LUTF = LGSSQ + N
      LEND = LUTF + M
      INFORM = 1
      IF (LW.LT.LEND-1) RETURN
C
C     ALL THE WORKSPACE ADDRESSES ARE NOW ALLOCATED.
C
      CALL E04GDZ(M,N,LSFJSB,LSFN,MAXFUN,ETA,XTOL,STEPMX,X,SSQNEW,FVEC,
     *            FJAC,LJ,LVT,NITER,NFTOTL,NWHY,RTEPS,RTOL,LEND,TOL,
     *            IGRADE,PEPS,W(LGSSQ),SSQOLD,GAUSS,TAU,ALPHA,PNORM,
     *            EPSMCH,NOMOVE,IW,LIW,W,LW)
      IF (NWHY.NE.0) GO TO 120
      TOLEPS = RTOL + EPSMCH
      TLEPSQ = TOLEPS*TOLEPS
      EPSEPS = EPSMCH*EPSMCH
C
C     *************** START OF THE ITERATION LOOP ***************
C
   20 NWHY = 2
      NFTOTL = NFTOTL + N
      IF (NFTOTL.GT.MAXFUN) GO TO 80
      NWHY = 0
C
C     OVERALL CONVERGENCE CRITERIA.
C
      GTG = DDOT(N,W(LGSSQ),1,W(LGSSQ),1)
      XNORM = DNRM2(N,X,1)
      U = 1.0D+0 + SSQNEW
      IF (NITER.GT.0 .AND. ALPHA*PNORM.LT.TOLEPS*(1.0D+0+XNORM)
     *    .AND. ABS(SSQOLD-SSQNEW).LT.TLEPSQ*U .AND. SQRT(GTG)
     *    .LT.(SQRT(PEPS)+XTOL)*U .OR. SSQNEW.LT.EPSEPS .OR. GTG.LT.
     *    SQRT(SSQNEW)*EPSMCH) GO TO 80
C
C     COMPUTE THE SINGULAR VALUE DECOMPOSITION OF THE JACOBIAN
C     MATRIX.  DETERMINE THE GRADE OF THE JACOBIAN AND WHETHER
C     THE GAUSS-NEWTON DIRECTION SHOULD BE CORRECTED.
C
   40 IF (NOMOVE) CALL E04GDV(N,VT,LVT)
      CALL E04GDY(M,N,MAXRNK,IGRADE,NWHY,TAU,EPSMCH,FVEC,FJAC,LJ,S,VT,
     *            LVT,W(LUTF),GAUSS,NOMOVE,W,LW)
      IF (NWHY.NE.0) GO TO 120
C
C     COMPUTE THE GRADED GAUSS-NEWTON DIRECTION.
C
      P1ZERO = IGRADE .EQ. 0
      IF (P1ZERO) CALL F06FBF(M,0.0D0,W(LP),1)
      IF ( .NOT. P1ZERO) CALL F04JAZ(M,N,IGRADE,S,N,W(LUTF),VT,LVT,W(LP)
     *                               ,SIGMA,W)
C
C     TRANSPOSE VT
C
      CALL E04GDV(N,VT,LVT)
C
C     IF NECESSARY, FIND A CORRECTION TO THE GAUSS-NEWTON
C     DIRECTION OF SEARCH.
C
      IF (GAUSS) GO TO 60
      NS = N - IGRADE
      IF (NS.EQ.0) GO TO 60
      LPH = NS*(NS-1)/2
      IF (NS.EQ.1) LPH = 1
C
C     COMPUTE FINITE-DIFFERENCE APPROXIMATIONS TO THE MATRIX VTHV,
C     WHERE H IS THE SECOND TERM OF THE HESSIAN MATRIX OF THE
C     SUM OF SQUARES, AND THE VECTOR VTHP.
C
      CALL E04FCY(M,N,LPH,NS,EPSMCH,LSFJSB,LSFN,IGRADE,X,FVEC,SSQNEW,
     *            P1ZERO,VT,LVT,W(LP),W(LPHESL),W(LPHESD),W(LRHS),NWHY,
     *            IW,LIW,W,LW)
      IF ( .NOT. P1ZERO) NFTOTL = NFTOTL + NS + 1
      NFTOTL = NFTOTL + 2*NS + NS*(NS-1)/2
      IF (NWHY.LT.0) GO TO 120
C
C     ADD THE SQUARE OF THE SINGULAR VALUE TO THE APPROPRIATE
C     DIAGONAL ELEMENT OF VTHV.  MODIFY THE RIGHT-HAND-SIDE
C     VECTOR AND FORM THE MODIFIED LDLT FACTORIZATION.
C
      CALL E04GDS(M,N,NS,LPH,IGRADE,EPSMCH,W(LUTF),S,W(LPHESL),W(LPHESD)
     *            ,W(LRHS),NPHI)
C
C     USE THE CHOLESKY FACTORIZATION TO FIND THE CORRECTION TO THE
C     GAUSS-NEWTON DIRECTION OF SEARCH.
C
      CALL F04AQZ(NS,LPH,W(LPHESL),W(LPHESD),W(LRHS),W(LP2))
C
C     ADD V2*P2 TO THE VECTOR P
C
      CALL DGEMV('Normal',N,NS,1.0D0,VT(1,IGRADE+1),LVT,W(LP2),1,1.0D0,
     *           W(LP),1)
C
C     COMPUTE THE STEP-LENGTH ALPHA.  IF NECESSARY, PRINT DETAILS
C     OF THE CURRENT ITERATION.
C
   60 CALL E04GDQ(M,N,E04FCV,LSFJSB,LSFN,RTEPS,ETA,IGRADE,IPRINT,LSMON,
     *            STEPMX,EPSMCH,TAU,XNORM,NOMOVE,X,FVEC,FJAC,LJ,W(LGSSQ)
     *            ,W(LP),S,ALPHA,PNORM,SSQNEW,SSQOLD,NITER,NFTOTL,NWHY,
     *            IFLAG,IW,LIW,W,LW)
      IF (NWHY.LT.0) GO TO 120
      IF (IFLAG.EQ.2) GO TO 20
C
C     A LOWER POINT COULD NOT BE FOUND.
C
      NOMOVE = .TRUE.
      IF (IGRADE.GT.0) GO TO 40
      NWHY = 3
C
C     ****************** END OF ITERATION LOOP ******************
C
   80 FSUMSQ = SSQNEW
C
C     CALCULATE SINGULAR VALUES AT SOLUTION IF IT IS A NEW POINT
C     AND TRANSPOSE ELEMENTS OF VT TO GIVE MATRIX V ON EXIT.
C     PRINT SOLUTION DETAILS.
C
      IF (NOMOVE) GO TO 100
      IFLAG = NWHY
      NWHY = 4
      NWY = 1
      CALL E04GDX(NWY,M,N,FJAC,LJ,VT,LVT,FVEC,S,.TRUE.,W(LUTF),W,LW)
      IF (NWY.NE.0) GO TO 120
      NWHY = IFLAG
      CALL E04GDV(N,VT,LVT)
  100 IF (IPRINT.GE.0 .AND. NWHY.NE.1) CALL LSMON(M,N,X,FVEC,FJAC,LJ,S,
     *    IGRADE,NITER,NFTOTL,IW,LIW,W,LW)
  120 INFORM = NWHY
      RETURN
C
C     END OF E04FCZ   (NDMIN2)
C
      END
