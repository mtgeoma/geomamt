      SUBROUTINE E04HEV(M,N,LSFJS,LSF,EPS,T,ETA,SFTBND,XLAMDA,P,GTP,X,F,
     *                  ALPHA,FJAC,LJ,FVEC,G,NFTOTL,IFLAG,IW,LIW,W,LW)
C     MARK 13 RE-ISSUE. NAG COPYRIGHT 1988.
C     MARK 14 REVISED. IER-796 (DEC 1989).
C
C     **************************************************************
C
C     E04HEV FINDS AN APPROXIMATION ALPHA TO THE POINT AT WHICH
C     THE FUNCTION F(X+ALPHA*P) ATTAINS ITS MINIMUM VALUE ALONG THE
C     DIRECTION P. THE METHOD USED IS THAT OF SUCCESSIVE CUBIC
C     INTERPOLATION WITH SAFEGUARDS, DESCRIBED IN D.N.A.C. REPORT
C     NO. 37.  DDOT IS USED IN E04HEV. NOTE BOTH FUNCTION AND
C     JACOBIAN VALUES ARE CALCULATED. E04HEV CALLS E04BBZ TO GIVE
C     THE STEPLENGTH TO EACH POINT. THERE IS AN ALTERNATIVE LINEAR
C     SEARCH SUBROUTINE CALLED E04FCV IN WHICH FUNCTION VALUES ONLY
C     ARE CALCULATED.  E04FCV MAY BE USED WHEN THE GRADIENT VECTOR
C     IS UNAVAILABLE, OR WHEN IT IS EXPENSIVE TO COMPUTE COMPARED
C     WITH THE FUNCTION VALUE.  IF THE EVALUATION OF G TAKES MORE
C     THAN ABOUT 4 TIMES AS LONG AS ONE EVALUATION OF F, E04FCV WILL
C     USUALLY BE PREFERABLE.  IF IN DOUBT USE E04HEV AS IT IS
C     SLIGHTLY MORE ROBUST.  THE PARAMETER LISTS OF E04HEV AND
C     E04FCV ARE THE SAME AND CONSEQUENTLY THE SUBROUTINES ARE
C     EASILY INTERCHANGED.  E04HEV GIVES A NEW GRADIENT VECTOR,
C     E04FCV DOES NOT.  IF IFLAG = 0 OR 1 THEN E04HEV HAS BEEN USED
C     AND THE NEW GRADIENT VECTOR IS IN G, OTHERWISE IFLAG = 2 OR 3,
C     AND E04FCV HAS BEEN USED.
C
C     THE WORKSPACE ARRAY W SHOULD BE OF LENGTH AT LEAST
C     M + M*N + 2*N.
C
C     PHILIP E. GILL, WALTER MURRAY, SUSAN M. PICKEN AND
C     NICHOLAS I. M. GOULD.
C     D.N.A.C., NATIONAL PHYSICAL LABORATORY, ENGLAND.
C
C     **************************************************************
C
C     Modified to call BLAS.
C     Peter Mayes, NAG Central Office, October 1987.
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION  ALPHA, EPS, ETA, F, GTP, SFTBND, T, XLAMDA
      INTEGER           IFLAG, LIW, LJ, LW, M, N, NFTOTL
C     .. Array Arguments ..
      DOUBLE PRECISION  FJAC(LJ,N), FVEC(M), G(N), P(N), W(LW), X(N)
      INTEGER           IW(LIW)
C     .. Subroutine Arguments ..
      EXTERNAL          LSF, LSFJS
C     .. Local Scalars ..
      DOUBLE PRECISION  A, B, B1, D, E, FMIN, FU, FW, GMIN, GTEST1,
     *                  GTEST2, GU, GW, OLDF, R, RR, SCXBD, SS, TOL, U,
     *                  XMIN, XW
      INTEGER           I, ILOC, ITEST, L, LFJAC, LFVEC, LG, LX, NUMF
C     .. External Functions ..
      DOUBLE PRECISION  DDOT
      EXTERNAL          DDOT
C     .. External Subroutines ..
      EXTERNAL          E04BBZ, F06QFF, DCOPY, DGEMV
C     .. Executable Statements ..
C
C     ALLOCATE THE ADDRESSES FOR LOCAL WORKSPACE
C
      LFVEC = 1
      LFJAC = LFVEC + M
      LG = LFJAC + M*N
      LX = LG + N
      NUMF = 0
      U = ALPHA
      FU = F
      FMIN = FU
      GU = GTP
      ILOC = 1
   20 CALL E04BBZ(EPS,T,ETA,XLAMDA,U,FU,GU,XMIN,FMIN,GMIN,XW,FW,GW,A,B,
     *            OLDF,B1,SCXBD,E,D,RR,SS,GTEST1,GTEST2,TOL,ILOC,ITEST)
C
C     IF ITEST = 1, THE ALGORITHM REQUIRES THE FUNCTION VALUE TO
C     BE CALCULATED.
C
      IF (ITEST.NE.1 .AND. ITEST.NE.3) GO TO 60
      R = XMIN + U
      IF (ITEST.EQ.3) R = 0.0D+0
      L = LX
      DO 40 I = 1, N
         W(L) = X(I) + R*P(I)
         L = L + 1
   40 CONTINUE
      IFLAG = 2
      CALL LSFJS(IFLAG,M,N,LSF,W(LX),W(LFVEC),W(LFJAC),M,IW,LIW,W,LW)
      NUMF = NUMF + 1
      IF (IFLAG.LT.0) RETURN
C
C     COMPUTE THE FUNCTION VALUE
C
      FU = DDOT(M,W(LFVEC),1,W(LFVEC),1)
C
C     COMPUTE THE GRADIENT OF THE SUM OF THE SQUARES
C
      CALL DGEMV('Transpose',M,N,2.0D0,W(LFJAC),M,W(LFVEC),1,0.0D0,W(LG)
     *           ,1)
      GU = DDOT(N,W(LG),1,P,1)
      IF (FU.GT.FMIN .AND. ILOC.EQ.2 .AND. ITEST.EQ.1) GO TO 20
C
C     IF THE NEW FUNCTION VALUE IS SMALLER THAN THE OLD VALUE,
C     THE OLD GRADIENT AND JACOBIAN MATRICES ARE OVERWRITTEN
C     BY THE NEW VALUES.
C
      CALL DCOPY(N,W(LG),1,G,1)
      CALL DCOPY(M,W(LFVEC),1,FVEC,1)
      CALL F06QFF('General',M,N,W(LFJAC),M,FJAC,LJ)
      IF (ITEST.EQ.1) GO TO 20
   60 NFTOTL = NUMF
C
C     IF ITEST = 2 OR 3, A LOWER POINT COULD NOT BE FOUND
C
      IFLAG = 1
      IF (ITEST.NE.0) RETURN
C
C     IF ITEST = 0 A SUCCESSFUL SEARCH HAS BEEN MADE
C
      IFLAG = 0
      F = FMIN
      ALPHA = XMIN
      DO 80 I = 1, N
         X(I) = X(I) + ALPHA*P(I)
   80 CONTINUE
      RETURN
C
C     END OF E04HEV   (LSDER)
C
      END
